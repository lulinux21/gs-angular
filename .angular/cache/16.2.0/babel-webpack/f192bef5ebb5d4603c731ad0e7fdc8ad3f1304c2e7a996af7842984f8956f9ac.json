{"ast":null,"code":"import _defineProperty from \"/var/www/gabriel/angular/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _class, _class2, _class3, _class4, _class5, _class6, _class7, _class8, _class9, _class10, _class11, _class12, _class13, _class14, _class15, _class16, _class17, _class18;\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewEncapsulation, Inject, Input, Output, ViewChild, ContentChildren, PLATFORM_ID, Directive, HostListener, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport * as i3 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport * as i5 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i4 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport { ObjectUtils } from 'primeng/utils';\nimport { Subject } from 'rxjs';\nimport { SortAmountDownIcon } from 'primeng/icons/sortamountdown';\nimport { ChevronRightIcon } from 'primeng/icons/chevronright';\nimport { ArrowDownIcon } from 'primeng/icons/arrowdown';\nimport { ArrowUpIcon } from 'primeng/icons/arrowup';\nimport { CheckIcon } from 'primeng/icons/check';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nimport { MinusIcon } from 'primeng/icons/minus';\nimport { SortAltIcon } from 'primeng/icons/sortalt';\nimport { SortAmountUpAltIcon } from 'primeng/icons/sortamountupalt';\nimport { SpinnerIcon } from 'primeng/icons/spinner';\nconst _c0 = [\"container\"];\nconst _c1 = [\"resizeHelper\"];\nconst _c2 = [\"reorderIndicatorUp\"];\nconst _c3 = [\"reorderIndicatorDown\"];\nconst _c4 = [\"table\"];\nconst _c5 = [\"scrollableView\"];\nconst _c6 = [\"scrollableFrozenView\"];\nfunction _class2_div_2_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(\"p-treetable-loading-icon pi-spin \" + ctx_r11.loadingIcon);\n  }\n}\nfunction _class2_div_2_ng_container_3_SpinnerIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SpinnerIcon\", 18);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"spin\", true)(\"styleClass\", \"p-treetable-loading-icon\");\n  }\n}\nfunction _class2_div_2_ng_container_3_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction _class2_div_2_ng_container_3_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_div_2_ng_container_3_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction _class2_div_2_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtemplate(1, _class2_div_2_ng_container_3_span_2_1_Template, 1, 0, null, 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r14.loadingIconTemplate);\n  }\n}\nfunction _class2_div_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class2_div_2_ng_container_3_SpinnerIcon_1_Template, 1, 2, \"SpinnerIcon\", 16);\n    i0.ɵɵtemplate(2, _class2_div_2_ng_container_3_span_2_Template, 2, 1, \"span\", 17);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.loadingIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.loadingIconTemplate);\n  }\n}\nfunction _class2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13);\n    i0.ɵɵtemplate(2, _class2_div_2_i_2_Template, 1, 2, \"i\", 14);\n    i0.ɵɵtemplate(3, _class2_div_2_ng_container_3_Template, 3, 2, \"ng-container\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loadingIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.loadingIcon);\n  }\n}\nfunction _class2_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, _class2_div_3_ng_container_1_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.captionTemplate);\n  }\n}\nfunction _class2_p_paginator_4_1_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_p_paginator_4_1_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_4_1_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r22.paginatorFirstPageLinkIconTemplate);\n  }\n}\nfunction _class2_p_paginator_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_4_1_ng_template_0_Template, 1, 1, \"ng-template\", 23);\n  }\n}\nfunction _class2_p_paginator_4_2_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_p_paginator_4_2_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_4_2_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r24.paginatorPreviousPageLinkIconTemplate);\n  }\n}\nfunction _class2_p_paginator_4_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_4_2_ng_template_0_Template, 1, 1, \"ng-template\", 24);\n  }\n}\nfunction _class2_p_paginator_4_3_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_p_paginator_4_3_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_4_3_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r26.paginatorLastPageLinkIconTemplate);\n  }\n}\nfunction _class2_p_paginator_4_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_4_3_ng_template_0_Template, 1, 1, \"ng-template\", 25);\n  }\n}\nfunction _class2_p_paginator_4_4_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_p_paginator_4_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_4_4_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r28.paginatorNextPageLinkIconTemplate);\n  }\n}\nfunction _class2_p_paginator_4_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_4_4_ng_template_0_Template, 1, 1, \"ng-template\", 26);\n  }\n}\nfunction _class2_p_paginator_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-paginator\", 22);\n    i0.ɵɵlistener(\"onPageChange\", function _class2_p_paginator_4_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.onPageChange($event));\n    });\n    i0.ɵɵtemplate(1, _class2_p_paginator_4_1_Template, 1, 0, null, 15);\n    i0.ɵɵtemplate(2, _class2_p_paginator_4_2_Template, 1, 0, null, 15);\n    i0.ɵɵtemplate(3, _class2_p_paginator_4_3_Template, 1, 0, null, 15);\n    i0.ɵɵtemplate(4, _class2_p_paginator_4_4_Template, 1, 0, null, 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r3.rows)(\"first\", ctx_r3.first)(\"totalRecords\", ctx_r3.totalRecords)(\"pageLinkSize\", ctx_r3.pageLinks)(\"alwaysShow\", ctx_r3.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r3.rowsPerPageOptions)(\"templateLeft\", ctx_r3.paginatorLeftTemplate)(\"templateRight\", ctx_r3.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r3.paginatorDropdownAppendTo)(\"currentPageReportTemplate\", ctx_r3.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r3.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r3.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r3.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r3.showJumpToPageDropdown)(\"showPageLinks\", ctx_r3.showPageLinks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.paginatorFirstPageLinkIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.paginatorPreviousPageLinkIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.paginatorLastPageLinkIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.paginatorNextPageLinkIconTemplate);\n  }\n}\nfunction _class2_div_5_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_div_5_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_div_5_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c7 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction _class2_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"table\", 28, 29);\n    i0.ɵɵtemplate(3, _class2_div_5_ng_container_3_Template, 1, 0, \"ng-container\", 30);\n    i0.ɵɵelementStart(4, \"thead\", 31);\n    i0.ɵɵtemplate(5, _class2_div_5_ng_container_5_Template, 1, 0, \"ng-container\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"tbody\", 32);\n    i0.ɵɵelementStart(7, \"tfoot\", 33);\n    i0.ɵɵtemplate(8, _class2_div_5_ng_container_8_Template, 1, 0, \"ng-container\", 30);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.tableStyleClass)(\"ngStyle\", ctx_r4.tableStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c7, ctx_r4.columns));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(12, _c7, ctx_r4.columns));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pTreeTableBody\", ctx_r4.columns)(\"pTreeTableBodyTemplate\", ctx_r4.bodyTemplate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(14, _c7, ctx_r4.columns));\n  }\n}\nconst _c8 = function (a0) {\n  return {\n    width: a0\n  };\n};\nfunction _class2_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 38, 39);\n  }\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ttScrollableView\", ctx_r36.frozenColumns)(\"frozen\", true)(\"ngStyle\", i0.ɵɵpureFunction1(4, _c8, ctx_r36.frozenWidth))(\"scrollHeight\", ctx_r36.scrollHeight);\n  }\n}\nconst _c9 = function (a0, a1) {\n  return {\n    left: a0,\n    width: a1\n  };\n};\nfunction _class2_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtemplate(1, _class2_div_6_div_1_Template, 2, 6, \"div\", 35);\n    i0.ɵɵelement(2, \"div\", 36, 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.frozenColumns || ctx_r5.frozenBodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ttScrollableView\", ctx_r5.columns)(\"frozen\", false)(\"scrollHeight\", ctx_r5.scrollHeight)(\"ngStyle\", i0.ɵɵpureFunction2(5, _c9, ctx_r5.frozenWidth, \"calc(100% - \" + ctx_r5.frozenWidth + \")\"));\n  }\n}\nfunction _class2_p_paginator_7_1_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_p_paginator_7_1_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_7_1_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r43.paginatorFirstPageLinkIconTemplate);\n  }\n}\nfunction _class2_p_paginator_7_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_7_1_ng_template_0_Template, 1, 1, \"ng-template\", 23);\n  }\n}\nfunction _class2_p_paginator_7_2_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_p_paginator_7_2_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_7_2_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r45.paginatorPreviousPageLinkIconTemplate);\n  }\n}\nfunction _class2_p_paginator_7_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_7_2_ng_template_0_Template, 1, 1, \"ng-template\", 24);\n  }\n}\nfunction _class2_p_paginator_7_3_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_p_paginator_7_3_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_7_3_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r47 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r47.paginatorLastPageLinkIconTemplate);\n  }\n}\nfunction _class2_p_paginator_7_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_7_3_ng_template_0_Template, 1, 1, \"ng-template\", 25);\n  }\n}\nfunction _class2_p_paginator_7_4_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_p_paginator_7_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_7_4_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r49 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r49.paginatorNextPageLinkIconTemplate);\n  }\n}\nfunction _class2_p_paginator_7_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_p_paginator_7_4_ng_template_0_Template, 1, 1, \"ng-template\", 26);\n  }\n}\nfunction _class2_p_paginator_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-paginator\", 40);\n    i0.ɵɵlistener(\"onPageChange\", function _class2_p_paginator_7_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.onPageChange($event));\n    });\n    i0.ɵɵtemplate(1, _class2_p_paginator_7_1_Template, 1, 0, null, 15);\n    i0.ɵɵtemplate(2, _class2_p_paginator_7_2_Template, 1, 0, null, 15);\n    i0.ɵɵtemplate(3, _class2_p_paginator_7_3_Template, 1, 0, null, 15);\n    i0.ɵɵtemplate(4, _class2_p_paginator_7_4_Template, 1, 0, null, 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r6.rows)(\"first\", ctx_r6.first)(\"totalRecords\", ctx_r6.totalRecords)(\"pageLinkSize\", ctx_r6.pageLinks)(\"alwaysShow\", ctx_r6.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r6.rowsPerPageOptions)(\"templateLeft\", ctx_r6.paginatorLeftTemplate)(\"templateRight\", ctx_r6.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r6.paginatorDropdownAppendTo)(\"currentPageReportTemplate\", ctx_r6.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r6.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r6.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r6.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r6.showJumpToPageDropdown)(\"showPageLinks\", ctx_r6.showPageLinks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.paginatorFirstPageLinkIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.paginatorPreviousPageLinkIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.paginatorLastPageLinkIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.paginatorNextPageLinkIconTemplate);\n  }\n}\nfunction _class2_div_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class2_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵtemplate(1, _class2_div_8_ng_container_1_Template, 1, 0, \"ng-container\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.summaryTemplate);\n  }\n}\nfunction _class2_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 42, 43);\n  }\n}\nfunction _class2_span_10_ArrowDownIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ArrowDownIcon\");\n  }\n}\nfunction _class2_span_10_3_ng_template_0_Template(rf, ctx) {}\nfunction _class2_span_10_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_span_10_3_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction _class2_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 44, 45);\n    i0.ɵɵtemplate(2, _class2_span_10_ArrowDownIcon_2_Template, 1, 0, \"ArrowDownIcon\", 15);\n    i0.ɵɵtemplate(3, _class2_span_10_3_Template, 1, 0, null, 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r9.reorderIndicatorUpIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.reorderIndicatorUpIconTemplate);\n  }\n}\nfunction _class2_span_11_ArrowUpIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ArrowUpIcon\");\n  }\n}\nfunction _class2_span_11_3_ng_template_0_Template(rf, ctx) {}\nfunction _class2_span_11_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class2_span_11_3_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction _class2_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 46, 47);\n    i0.ɵɵtemplate(2, _class2_span_11_ArrowUpIcon_2_Template, 1, 0, \"ArrowUpIcon\", 15);\n    i0.ɵɵtemplate(3, _class2_span_11_3_Template, 1, 0, null, 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r10.reorderIndicatorDownIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r10.reorderIndicatorDownIconTemplate);\n  }\n}\nconst _c10 = function (a1, a2, a3, a4, a5) {\n  return {\n    \"p-treetable p-component\": true,\n    \"p-treetable-hoverable-rows\": a1,\n    \"p-treetable-auto-layout\": a2,\n    \"p-treetable-resizable\": a3,\n    \"p-treetable-resizable-fit\": a4,\n    \"p-treetable-flex-scrollable\": a5\n  };\n};\nconst _c11 = [\"pTreeTableBody\", \"\"];\nfunction _class3_ng_template_0_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c12 = function (a0, a1, a2, a3) {\n  return {\n    $implicit: a0,\n    node: a1,\n    rowData: a2,\n    columns: a3\n  };\n};\nfunction _class3_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class3_ng_template_0_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const serializedNode_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(2, _c12, serializedNode_r2, serializedNode_r2.node, serializedNode_r2.node.data, ctx_r4.columns));\n  }\n}\nfunction _class3_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class3_ng_template_0_ng_container_0_Template, 2, 7, \"ng-container\", 1);\n  }\n  if (rf & 2) {\n    const serializedNode_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", serializedNode_r2.visible);\n  }\n}\nfunction _class3_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c13 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    frozen: a1\n  };\n};\nfunction _class3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class3_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.tt.emptyMessageTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c13, ctx_r1.columns, ctx_r1.frozen));\n  }\n}\nconst _c14 = [\"scrollHeader\"];\nconst _c15 = [\"scrollHeaderBox\"];\nconst _c16 = [\"scrollBody\"];\nconst _c17 = [\"scrollTable\"];\nconst _c18 = [\"loadingTable\"];\nconst _c19 = [\"scrollFooter\"];\nconst _c20 = [\"scrollFooterBox\"];\nconst _c21 = [\"scrollableAligner\"];\nconst _c22 = [\"scroller\"];\nconst _c23 = [\"ttScrollableView\", \"\"];\nfunction _class4_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class4_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class4_p_scroller_8_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c24 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    options: a1\n  };\n};\nfunction _class4_p_scroller_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class4_p_scroller_8_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 5);\n  }\n  if (rf & 2) {\n    const items_r12 = ctx.$implicit;\n    const scrollerOptions_r13 = ctx.options;\n    i0.ɵɵnextContext(2);\n    const _r6 = i0.ɵɵreference(11);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r6)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c24, items_r12, scrollerOptions_r13));\n  }\n}\nfunction _class4_p_scroller_8_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c25 = function (a0) {\n  return {\n    options: a0\n  };\n};\nfunction _class4_p_scroller_8_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class4_p_scroller_8_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 5);\n  }\n  if (rf & 2) {\n    const scrollerOptions_r16 = ctx.options;\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r15.loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c25, scrollerOptions_r16));\n  }\n}\nfunction _class4_p_scroller_8_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class4_p_scroller_8_ng_container_3_ng_template_1_Template, 1, 4, \"ng-template\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nconst _c26 = function (a0) {\n  return {\n    height: a0\n  };\n};\nfunction _class4_p_scroller_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-scroller\", 11, 12);\n    i0.ɵɵlistener(\"onLazyLoad\", function _class4_p_scroller_8_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.tt.onLazyItemLoad($event));\n    });\n    i0.ɵɵtemplate(2, _class4_p_scroller_8_ng_template_2_Template, 1, 5, \"ng-template\", 13);\n    i0.ɵɵtemplate(3, _class4_p_scroller_8_ng_container_3_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(8, _c26, ctx_r4.tt.scrollHeight !== \"flex\" ? ctx_r4.tt.scrollHeight : undefined));\n    i0.ɵɵproperty(\"items\", ctx_r4.tt.serializedValue)(\"scrollHeight\", ctx_r4.scrollHeight !== \"flex\" ? undefined : \"100%\")(\"itemSize\", ctx_r4.tt.virtualScrollItemSize || ctx_r4.tt._virtualRowHeight)(\"lazy\", ctx_r4.tt.lazy)(\"options\", ctx_r4.tt.virtualScrollOptions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.loaderTemplate);\n  }\n}\nfunction _class4_ng_container_9_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c27 = function (a0, a1) {\n  return {\n    \"max-height\": a0,\n    \"overflow-y\": a1\n  };\n};\nconst _c28 = function () {\n  return {};\n};\nfunction _class4_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 15, 16);\n    i0.ɵɵtemplate(3, _class4_ng_container_9_ng_container_3_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    const _r6 = i0.ɵɵreference(11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(3, _c27, ctx_r5.tt.scrollHeight !== \"flex\" ? ctx_r5.scrollHeight : undefined, !ctx_r5.frozen && ctx_r5.tt.scrollHeight ? \"scroll\" : undefined));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r6)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(7, _c24, ctx_r5.serializedValue, i0.ɵɵpureFunction0(6, _c28)));\n  }\n}\nfunction _class4_ng_template_10_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class4_ng_template_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 21, 22);\n  }\n}\nfunction _class4_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 17, 18);\n    i0.ɵɵtemplate(2, _class4_ng_template_10_ng_container_2_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelement(3, \"tbody\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, _class4_ng_template_10_div_4_Template, 2, 0, \"div\", 20);\n  }\n  if (rf & 2) {\n    const items_r22 = ctx.$implicit;\n    const scrollerOptions_r23 = ctx.options;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(scrollerOptions_r23.contentStyle);\n    i0.ɵɵclassMap(ctx_r7.tt.tableStyleClass);\n    i0.ɵɵproperty(\"ngClass\", scrollerOptions_r23.contentStyleClass)(\"ngStyle\", ctx_r7.tt.tableStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.frozen ? ctx_r7.tt.frozenColGroupTemplate || ctx_r7.tt.colGroupTemplate : ctx_r7.tt.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(13, _c7, ctx_r7.columns));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pTreeTableBody\", ctx_r7.columns)(\"pTreeTableBodyTemplate\", ctx_r7.frozen ? ctx_r7.tt.frozenBodyTemplate || ctx_r7.tt.bodyTemplate : ctx_r7.tt.bodyTemplate)(\"serializedNodes\", items_r22)(\"frozen\", ctx_r7.frozen);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.frozen);\n  }\n}\nfunction _class4_div_12_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class4_div_12_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class4_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23, 24)(2, \"div\", 25, 26)(4, \"table\", 27);\n    i0.ɵɵtemplate(5, _class4_div_12_ng_container_5_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementStart(6, \"tfoot\", 28);\n    i0.ɵɵtemplate(7, _class4_div_12_ng_container_7_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r8.tt.tableStyleClass)(\"ngStyle\", ctx_r8.tt.tableStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.frozen ? ctx_r8.tt.frozenColGroupTemplate || ctx_r8.tt.colGroupTemplate : ctx_r8.tt.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c7, ctx_r8.columns));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.frozen ? ctx_r8.tt.frozenFooterTemplate || ctx_r8.tt.footerTemplate : ctx_r8.tt.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c7, ctx_r8.columns));\n  }\n}\nfunction _class6_ng_container_0_SortAltIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SortAltIcon\", 3);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-sortable-column-icon\");\n  }\n}\nfunction _class6_ng_container_0_SortAmountUpAltIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SortAmountUpAltIcon\", 3);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-sortable-column-icon\");\n  }\n}\nfunction _class6_ng_container_0_SortAmountDownIcon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SortAmountDownIcon\", 3);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-sortable-column-icon\");\n  }\n}\nfunction _class6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class6_ng_container_0_SortAltIcon_1_Template, 1, 1, \"SortAltIcon\", 2);\n    i0.ɵɵtemplate(2, _class6_ng_container_0_SortAmountUpAltIcon_2_Template, 1, 1, \"SortAmountUpAltIcon\", 2);\n    i0.ɵɵtemplate(3, _class6_ng_container_0_SortAmountDownIcon_3_Template, 1, 1, \"SortAmountDownIcon\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.sortOrder === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.sortOrder === 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.sortOrder === -1);\n  }\n}\nfunction _class6_span_1_1_ng_template_0_Template(rf, ctx) {}\nfunction _class6_span_1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class6_span_1_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction _class6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, _class6_span_1_1_Template, 1, 0, null, 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.tt.sortIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c7, ctx_r1.sortOrder));\n  }\n}\nfunction _class12_ng_container_5_CheckIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"CheckIcon\", 7);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-checkbox-icon\");\n  }\n}\nfunction _class12_ng_container_5_MinusIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"MinusIcon\", 7);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-checkbox-icon\");\n  }\n}\nfunction _class12_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class12_ng_container_5_CheckIcon_1_Template, 1, 1, \"CheckIcon\", 6);\n    i0.ɵɵtemplate(2, _class12_ng_container_5_MinusIcon_2_Template, 1, 1, \"MinusIcon\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.rowNode.node.partialSelected);\n  }\n}\nfunction _class12_span_6_1_ng_template_0_Template(rf, ctx) {}\nfunction _class12_span_6_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class12_span_6_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nconst _c29 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    partialSelected: a1\n  };\n};\nfunction _class12_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, _class12_span_6_1_Template, 1, 0, null, 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.tt.checkboxIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c29, ctx_r2.checked, ctx_r2.rowNode.node.partialSelected));\n  }\n}\nconst _c30 = function (a0) {\n  return {\n    \"p-checkbox-focused\": a0\n  };\n};\nconst _c31 = function (a1, a2, a3, a4) {\n  return {\n    \"p-checkbox-box\": true,\n    \"p-highlight\": a1,\n    \"p-focus\": a2,\n    \"p-indeterminate\": a3,\n    \"p-disabled\": a4\n  };\n};\nconst _c32 = [\"box\"];\nfunction _class13_ng_container_6_CheckIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"CheckIcon\", 9);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-checkbox-icon\");\n  }\n}\nfunction _class13_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class13_ng_container_6_CheckIcon_1_Template, 1, 1, \"CheckIcon\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.checked);\n  }\n}\nfunction _class13_span_7_1_ng_template_0_Template(rf, ctx) {}\nfunction _class13_span_7_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class13_span_7_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction _class13_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtemplate(1, _class13_span_7_1_Template, 1, 0, null, 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.tt.headerCheckboxIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c7, ctx_r3.checked));\n  }\n}\nconst _c33 = function (a1, a2, a3) {\n  return {\n    \"p-checkbox-box\": true,\n    \"p-highlight\": a1,\n    \"p-focus\": a2,\n    \"p-disabled\": a3\n  };\n};\nfunction _class15_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class15_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class15_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.inputTemplate);\n  }\n}\nfunction _class15_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class15_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class15_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.outputTemplate);\n  }\n}\nfunction _class17_ng_container_1_ChevronDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronDownIcon\");\n  }\n}\nfunction _class17_ng_container_1_ChevronRightIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronRightIcon\");\n  }\n}\nfunction _class17_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class17_ng_container_1_ChevronDownIcon_1_Template, 1, 0, \"ChevronDownIcon\", 1);\n    i0.ɵɵtemplate(2, _class17_ng_container_1_ChevronRightIcon_2_Template, 1, 0, \"ChevronRightIcon\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rowNode.node.expanded);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.rowNode.node.expanded);\n  }\n}\nfunction _class17_2_ng_template_0_Template(rf, ctx) {}\nfunction _class17_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class17_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nclass TreeTableService {\n  constructor() {\n    _defineProperty(this, \"sortSource\", new Subject());\n    _defineProperty(this, \"selectionSource\", new Subject());\n    _defineProperty(this, \"contextMenuSource\", new Subject());\n    _defineProperty(this, \"uiUpdateSource\", new Subject());\n    _defineProperty(this, \"totalRecordsSource\", new Subject());\n    _defineProperty(this, \"sortSource$\", this.sortSource.asObservable());\n    _defineProperty(this, \"selectionSource$\", this.selectionSource.asObservable());\n    _defineProperty(this, \"contextMenuSource$\", this.contextMenuSource.asObservable());\n    _defineProperty(this, \"uiUpdateSource$\", this.uiUpdateSource.asObservable());\n    _defineProperty(this, \"totalRecordsSource$\", this.totalRecordsSource.asObservable());\n  }\n  onSort(sortMeta) {\n    this.sortSource.next(sortMeta);\n  }\n  onSelectionChange() {\n    this.selectionSource.next(null);\n  }\n  onContextMenu(node) {\n    this.contextMenuSource.next(node);\n  }\n  onUIUpdate(value) {\n    this.uiUpdateSource.next(value);\n  }\n  onTotalRecordsChange(value) {\n    this.totalRecordsSource.next(value);\n  }\n}\n_class = TreeTableService;\n_defineProperty(TreeTableService, \"\\u0275fac\", function _class_Factory(t) {\n  return new (t || _class)();\n});\n_defineProperty(TreeTableService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeTableService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * TreeTable is used to display hierarchical data in tabular format.\n * @group Components\n */\nclass TreeTable {\n  /**\n   * Number of total records, defaults to length of value when not defined.\n   * @group Props\n   */\n  get totalRecords() {\n    return this._totalRecords;\n  }\n  set totalRecords(val) {\n    this._totalRecords = val;\n    this.tableService.onTotalRecordsChange(this._totalRecords);\n  }\n  /**\n   * Name of the field to sort data by default.\n   * @group Props\n   */\n  get sortField() {\n    return this._sortField;\n  }\n  set sortField(val) {\n    this._sortField = val;\n  }\n  /**\n   * Order to sort when default sorting is enabled.\n   * @defaultValue 1\n   * @group Props\n   */\n  get sortOrder() {\n    return this._sortOrder;\n  }\n  set sortOrder(val) {\n    this._sortOrder = val;\n  }\n  /**\n   * An array of SortMeta objects to sort the data by default in multiple sort mode.\n   * @defaultValue null\n   * @group Props\n   */\n  get multiSortMeta() {\n    return this._multiSortMeta;\n  }\n  set multiSortMeta(val) {\n    this._multiSortMeta = val;\n  }\n  /**\n   * Selected row in single mode or an array of values in multiple mode.\n   * @defaultValue null\n   * @group Props\n   */\n  get selection() {\n    return this._selection;\n  }\n  set selection(val) {\n    this._selection = val;\n  }\n  /**\n   * An array of objects to display.\n   * @defaultValue null\n   * @group Props\n   */\n  get value() {\n    return this._value;\n  }\n  set value(val) {\n    this._value = val;\n  }\n  /**\n   * Indicates the height of rows to be scrolled.\n   * @defaultValue 28\n   * @group Props\n   * @deprecated use virtualScrollItemSize property instead.\n   */\n  get virtualRowHeight() {\n    return this._virtualRowHeight;\n  }\n  set virtualRowHeight(val) {\n    this._virtualRowHeight = val;\n    console.warn('The virtualRowHeight property is deprecated, use virtualScrollItemSize property instead.');\n  }\n  ngOnInit() {\n    if (this.lazy && this.lazyLoadOnInit && !this.virtualScroll) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    }\n    this.initialized = true;\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'caption':\n          this.captionTemplate = item.template;\n          break;\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'body':\n          this.bodyTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n        case 'summary':\n          this.summaryTemplate = item.template;\n          break;\n        case 'colgroup':\n          this.colGroupTemplate = item.template;\n          break;\n        case 'emptymessage':\n          this.emptyMessageTemplate = item.template;\n          break;\n        case 'paginatorleft':\n          this.paginatorLeftTemplate = item.template;\n          break;\n        case 'paginatorright':\n          this.paginatorRightTemplate = item.template;\n          break;\n        case 'paginatordropdownitem':\n          this.paginatorDropdownItemTemplate = item.template;\n          break;\n        case 'frozenheader':\n          this.frozenHeaderTemplate = item.template;\n          break;\n        case 'frozenbody':\n          this.frozenBodyTemplate = item.template;\n          break;\n        case 'frozenfooter':\n          this.frozenFooterTemplate = item.template;\n          break;\n        case 'frozencolgroup':\n          this.frozenColGroupTemplate = item.template;\n          break;\n        case 'loadingicon':\n          this.loadingIconTemplate = item.template;\n          break;\n        case 'reorderindicatorupicon':\n          this.reorderIndicatorUpIconTemplate = item.template;\n          break;\n        case 'reorderindicatordownicon':\n          this.reorderIndicatorDownIconTemplate = item.template;\n          break;\n        case 'sorticon':\n          this.sortIconTemplate = item.template;\n          break;\n        case 'checkboxicon':\n          this.checkboxIconTemplate = item.template;\n          break;\n        case 'headercheckboxicon':\n          this.headerCheckboxIconTemplate = item.template;\n          break;\n        case 'togglericon':\n          this.togglerIconTemplate = item.template;\n          break;\n        case 'paginatorfirstpagelinkicon':\n          this.paginatorFirstPageLinkIconTemplate = item.template;\n          break;\n        case 'paginatorlastpagelinkicon':\n          this.paginatorLastPageLinkIconTemplate = item.template;\n          break;\n        case 'paginatorpreviouspagelinkicon':\n          this.paginatorPreviousPageLinkIconTemplate = item.template;\n          break;\n        case 'paginatornextpagelinkicon':\n          this.paginatorNextPageLinkIconTemplate = item.template;\n          break;\n      }\n    });\n  }\n  constructor(document, renderer, el, cd, zone, tableService, filterService) {\n    _defineProperty(this, \"document\", void 0);\n    _defineProperty(this, \"renderer\", void 0);\n    _defineProperty(this, \"el\", void 0);\n    _defineProperty(this, \"cd\", void 0);\n    _defineProperty(this, \"zone\", void 0);\n    _defineProperty(this, \"tableService\", void 0);\n    _defineProperty(this, \"filterService\", void 0);\n    /**\n     * An array of objects to represent dynamic columns.\n     * @group Props\n     */\n    _defineProperty(this, \"columns\", void 0);\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"style\", void 0);\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"styleClass\", void 0);\n    /**\n     * Inline style of the table.\n     * @group Props\n     */\n    _defineProperty(this, \"tableStyle\", void 0);\n    /**\n     * Style class of the table.\n     * @group Props\n     */\n    _defineProperty(this, \"tableStyleClass\", void 0);\n    /**\n     * Whether the cell widths scale according to their content or not.\n     * @group Props\n     */\n    _defineProperty(this, \"autoLayout\", void 0);\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    _defineProperty(this, \"lazy\", false);\n    /**\n     * Whether to call lazy loading on initialization.\n     * @group Props\n     */\n    _defineProperty(this, \"lazyLoadOnInit\", true);\n    /**\n     * When specified as true, enables the pagination.\n     * @group Props\n     */\n    _defineProperty(this, \"paginator\", void 0);\n    /**\n     * Number of rows to display per page.\n     * @group Props\n     */\n    _defineProperty(this, \"rows\", void 0);\n    /**\n     * Index of the first row to be displayed.\n     * @group Props\n     */\n    _defineProperty(this, \"first\", 0);\n    /**\n     * Number of page links to display in paginator.\n     * @group Props\n     */\n    _defineProperty(this, \"pageLinks\", 5);\n    /**\n     * Array of integer/object values to display inside rows per page dropdown of paginator\n     * @group Props\n     */\n    _defineProperty(this, \"rowsPerPageOptions\", void 0);\n    /**\n     * Whether to show it even there is only one page.\n     * @group Props\n     */\n    _defineProperty(this, \"alwaysShowPaginator\", true);\n    /**\n     * Position of the paginator.\n     * @group Props\n     */\n    _defineProperty(this, \"paginatorPosition\", 'bottom');\n    /**\n     * Target element to attach the paginator dropdown overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    _defineProperty(this, \"paginatorDropdownAppendTo\", void 0);\n    /**\n     * Template of the current page report element. Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n     * @group Props\n     */\n    _defineProperty(this, \"currentPageReportTemplate\", '{currentPage} of {totalPages}');\n    /**\n     * Whether to display current page report.\n     * @group Props\n     */\n    _defineProperty(this, \"showCurrentPageReport\", void 0);\n    /**\n     * Whether to display a dropdown to navigate to any page.\n     * @group Props\n     */\n    _defineProperty(this, \"showJumpToPageDropdown\", void 0);\n    /**\n     * When enabled, icons are displayed on paginator to go first and last page.\n     * @group Props\n     */\n    _defineProperty(this, \"showFirstLastIcon\", true);\n    /**\n     * Whether to show page links.\n     * @group Props\n     */\n    _defineProperty(this, \"showPageLinks\", true);\n    /**\n     * Sort order to use when an unsorted column gets sorted by user interaction.\n     * @group Props\n     */\n    _defineProperty(this, \"defaultSortOrder\", 1);\n    /**\n     * Defines whether sorting works on single column or on multiple columns.\n     * @group Props\n     */\n    _defineProperty(this, \"sortMode\", 'single');\n    /**\n     * When true, resets paginator to first page after sorting.\n     * @group Props\n     */\n    _defineProperty(this, \"resetPageOnSort\", true);\n    /**\n     * Whether to use the default sorting or a custom one using sortFunction.\n     * @group Props\n     */\n    _defineProperty(this, \"customSort\", void 0);\n    /**\n     * Specifies the selection mode, valid values are \"single\" and \"multiple\".\n     * @group Props\n     */\n    _defineProperty(this, \"selectionMode\", void 0);\n    /**\n     * Selected row with a context menu.\n     * @group Props\n     */\n    _defineProperty(this, \"contextMenuSelection\", void 0);\n    /**\n     * Mode of the contet menu selection.\n     * @group Props\n     */\n    _defineProperty(this, \"contextMenuSelectionMode\", 'separate');\n    /**\n     * A property to uniquely identify a record in data.\n     * @group Props\n     */\n    _defineProperty(this, \"dataKey\", void 0);\n    /**\n     * Defines whether metaKey is should be considered for the selection. On touch enabled devices, metaKeySelection is turned off automatically.\n     * @group Props\n     */\n    _defineProperty(this, \"metaKeySelection\", void 0);\n    /**\n     * Algorithm to define if a row is selected, valid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields.\n     * @group Props\n     */\n    _defineProperty(this, \"compareSelectionBy\", 'deepEquals');\n    /**\n     * Adds hover effect to rows without the need for selectionMode.\n     * @group Props\n     */\n    _defineProperty(this, \"rowHover\", void 0);\n    /**\n     * Displays a loader to indicate data load is in progress.\n     * @group Props\n     */\n    _defineProperty(this, \"loading\", void 0);\n    /**\n     * The icon to show while indicating data load is in progress.\n     * @group Props\n     */\n    _defineProperty(this, \"loadingIcon\", void 0);\n    /**\n     * Whether to show the loading mask when loading property is true.\n     * @group Props\n     */\n    _defineProperty(this, \"showLoader\", true);\n    /**\n     * When specifies, enables horizontal and/or vertical scrolling.\n     * @group Props\n     */\n    _defineProperty(this, \"scrollable\", void 0);\n    /**\n     * Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size.\n     * @group Props\n     */\n    _defineProperty(this, \"scrollHeight\", void 0);\n    /**\n     * Whether the data should be loaded on demand during scroll.\n     * @group Props\n     */\n    _defineProperty(this, \"virtualScroll\", void 0);\n    /**\n     * Height of a row to use in calculations of virtual scrolling.\n     * @group Props\n     */\n    _defineProperty(this, \"virtualScrollItemSize\", void 0);\n    /**\n     * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    _defineProperty(this, \"virtualScrollOptions\", void 0);\n    /**\n     * The delay (in milliseconds) before triggering the virtual scroll. This determines the time gap between the user's scroll action and the actual rendering of the next set of items in the virtual scroll.\n     * @group Props\n     */\n    _defineProperty(this, \"virtualScrollDelay\", 150);\n    /**\n     * Width of the frozen columns container.\n     * @group Props\n     */\n    _defineProperty(this, \"frozenWidth\", void 0);\n    /**\n     * An array of objects to represent dynamic columns that are frozen.\n     * @group Props\n     */\n    _defineProperty(this, \"frozenColumns\", void 0);\n    /**\n     * When enabled, columns can be resized using drag and drop.\n     * @group Props\n     */\n    _defineProperty(this, \"resizableColumns\", void 0);\n    /**\n     * Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\".\n     * @group Props\n     */\n    _defineProperty(this, \"columnResizeMode\", 'fit');\n    /**\n     * When enabled, columns can be reordered using drag and drop.\n     * @group Props\n     */\n    _defineProperty(this, \"reorderableColumns\", void 0);\n    /**\n     * Local ng-template varilable of a ContextMenu.\n     * @group Props\n     */\n    _defineProperty(this, \"contextMenu\", void 0);\n    /**\n     * Function to optimize the dom operations by delegating to ngForTrackBy, default algorithm checks for object identity.\n     * @group Props\n     */\n    _defineProperty(this, \"rowTrackBy\", (index, item) => item);\n    /**\n     * An array of FilterMetadata objects to provide external filters.\n     * @group Props\n     */\n    _defineProperty(this, \"filters\", {});\n    /**\n     * An array of fields as string to use in global filtering.\n     * @group Props\n     */\n    _defineProperty(this, \"globalFilterFields\", void 0);\n    /**\n     * Delay in milliseconds before filtering the data.\n     * @group Props\n     */\n    _defineProperty(this, \"filterDelay\", 300);\n    /**\n     * Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.\n     * @group Props\n     */\n    _defineProperty(this, \"filterMode\", 'lenient');\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    _defineProperty(this, \"filterLocale\", void 0);\n    _defineProperty(this, \"_virtualRowHeight\", 28);\n    /**\n     * Callback to invoke on selected node change.\n     * @param {TreeTableNode} object - Node instance.\n     * @group Emits\n     */\n    _defineProperty(this, \"selectionChange\", new EventEmitter());\n    /**\n     * Callback to invoke on context menu selection change.\n     * @param {TreeTableNode} object - Node instance.\n     * @group Emits\n     */\n    _defineProperty(this, \"contextMenuSelectionChange\", new EventEmitter());\n    /**\n     * Callback to invoke when data is filtered.\n     * @param {TreeTableFilterEvent} event - Custom filter event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onFilter\", new EventEmitter());\n    /**\n     * Callback to invoke when a node is expanded.\n     * @param {TreeTableNode} object - Node instance.\n     * @group Emits\n     */\n    _defineProperty(this, \"onNodeExpand\", new EventEmitter());\n    /**\n     * Callback to invoke when a node is collapsed.\n     * @param {TreeTableNodeCollapseEvent} event - Node collapse event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onNodeCollapse\", new EventEmitter());\n    /**\n     * Callback to invoke when pagination occurs.\n     * @param {TreeTablePaginatorState} object - Paginator state.\n     * @group Emits\n     */\n    _defineProperty(this, \"onPage\", new EventEmitter());\n    /**\n     * Callback to invoke when a column gets sorted.\n     * @param {Object} Object - Sort data.\n     * @group Emits\n     */\n    _defineProperty(this, \"onSort\", new EventEmitter());\n    /**\n     * Callback to invoke when paging, sorting or filtering happens in lazy mode.\n     * @param {TreeTableLazyLoadEvent} event - Custom lazy load event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onLazyLoad\", new EventEmitter());\n    /**\n     * An event emitter to invoke on custom sorting, refer to sorting section for details.\n     * @param {TreeTableSortEvent} event - Custom sort event.\n     * @group Emits\n     */\n    _defineProperty(this, \"sortFunction\", new EventEmitter());\n    /**\n     * Callback to invoke when a column is resized.\n     * @param {TreeTableColResizeEvent} event - Custom column resize event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onColResize\", new EventEmitter());\n    /**\n     * Callback to invoke when a column is reordered.\n     * @param {TreeTableColumnReorderEvent} event - Custom column reorder.\n     * @group Emits\n     */\n    _defineProperty(this, \"onColReorder\", new EventEmitter());\n    /**\n     * Callback to invoke when a node is selected.\n     * @param {TreeTableNode} object - Node instance.\n     * @group Emits\n     */\n    _defineProperty(this, \"onNodeSelect\", new EventEmitter());\n    /**\n     * Callback to invoke when a node is unselected.\n     * @param {TreeTableNodeUnSelectEvent} event - Custom node unselect event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onNodeUnselect\", new EventEmitter());\n    /**\n     * Callback to invoke when a node is selected with right click.\n     * @param {TreeTableContextMenuSelectEvent} event - Custom context menu select event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onContextMenuSelect\", new EventEmitter());\n    /**\n     * Callback to invoke when state of header checkbox changes.\n     * @param {TreeTableHeaderCheckboxToggleEvent} event - Custom checkbox toggle event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onHeaderCheckboxToggle\", new EventEmitter());\n    /**\n     * Callback to invoke when a cell switches to edit mode.\n     * @param {TreeTableEditEvent} event - Custom edit event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onEditInit\", new EventEmitter());\n    /**\n     * Callback to invoke when cell edit is completed.\n     * @param {TreeTableEditEvent} event - Custom edit event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onEditComplete\", new EventEmitter());\n    /**\n     * Callback to invoke when cell edit is cancelled with escape key.\n     * @param {TreeTableEditEvent} event - Custom edit event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onEditCancel\", new EventEmitter());\n    _defineProperty(this, \"containerViewChild\", void 0);\n    _defineProperty(this, \"resizeHelperViewChild\", void 0);\n    _defineProperty(this, \"reorderIndicatorUpViewChild\", void 0);\n    _defineProperty(this, \"reorderIndicatorDownViewChild\", void 0);\n    _defineProperty(this, \"tableViewChild\", void 0);\n    _defineProperty(this, \"scrollableViewChild\", void 0);\n    _defineProperty(this, \"scrollableFrozenViewChild\", void 0);\n    _defineProperty(this, \"templates\", void 0);\n    _defineProperty(this, \"_value\", []);\n    _defineProperty(this, \"serializedValue\", void 0);\n    _defineProperty(this, \"_totalRecords\", 0);\n    _defineProperty(this, \"_multiSortMeta\", void 0);\n    _defineProperty(this, \"_sortField\", void 0);\n    _defineProperty(this, \"_sortOrder\", 1);\n    _defineProperty(this, \"filteredNodes\", void 0);\n    _defineProperty(this, \"filterTimeout\", void 0);\n    _defineProperty(this, \"colGroupTemplate\", void 0);\n    _defineProperty(this, \"captionTemplate\", void 0);\n    _defineProperty(this, \"headerTemplate\", void 0);\n    _defineProperty(this, \"bodyTemplate\", void 0);\n    _defineProperty(this, \"footerTemplate\", void 0);\n    _defineProperty(this, \"summaryTemplate\", void 0);\n    _defineProperty(this, \"emptyMessageTemplate\", void 0);\n    _defineProperty(this, \"paginatorLeftTemplate\", void 0);\n    _defineProperty(this, \"paginatorRightTemplate\", void 0);\n    _defineProperty(this, \"paginatorDropdownItemTemplate\", void 0);\n    _defineProperty(this, \"frozenHeaderTemplate\", void 0);\n    _defineProperty(this, \"frozenBodyTemplate\", void 0);\n    _defineProperty(this, \"frozenFooterTemplate\", void 0);\n    _defineProperty(this, \"frozenColGroupTemplate\", void 0);\n    _defineProperty(this, \"loadingIconTemplate\", void 0);\n    _defineProperty(this, \"reorderIndicatorUpIconTemplate\", void 0);\n    _defineProperty(this, \"reorderIndicatorDownIconTemplate\", void 0);\n    _defineProperty(this, \"sortIconTemplate\", void 0);\n    _defineProperty(this, \"checkboxIconTemplate\", void 0);\n    _defineProperty(this, \"headerCheckboxIconTemplate\", void 0);\n    _defineProperty(this, \"togglerIconTemplate\", void 0);\n    _defineProperty(this, \"paginatorFirstPageLinkIconTemplate\", void 0);\n    _defineProperty(this, \"paginatorLastPageLinkIconTemplate\", void 0);\n    _defineProperty(this, \"paginatorPreviousPageLinkIconTemplate\", void 0);\n    _defineProperty(this, \"paginatorNextPageLinkIconTemplate\", void 0);\n    _defineProperty(this, \"lastResizerHelperX\", void 0);\n    _defineProperty(this, \"reorderIconWidth\", void 0);\n    _defineProperty(this, \"reorderIconHeight\", void 0);\n    _defineProperty(this, \"draggedColumn\", void 0);\n    _defineProperty(this, \"dropPosition\", void 0);\n    _defineProperty(this, \"preventSelectionSetterPropagation\", void 0);\n    _defineProperty(this, \"_selection\", void 0);\n    _defineProperty(this, \"selectionKeys\", {});\n    _defineProperty(this, \"rowTouched\", void 0);\n    _defineProperty(this, \"editingCell\", void 0);\n    _defineProperty(this, \"editingCellData\", void 0);\n    _defineProperty(this, \"editingCellField\", void 0);\n    _defineProperty(this, \"editingCellClick\", void 0);\n    _defineProperty(this, \"documentEditListener\", void 0);\n    _defineProperty(this, \"initialized\", void 0);\n    _defineProperty(this, \"toggleRowIndex\", void 0);\n    this.document = document;\n    this.renderer = renderer;\n    this.el = el;\n    this.cd = cd;\n    this.zone = zone;\n    this.tableService = tableService;\n    this.filterService = filterService;\n  }\n  ngOnChanges(simpleChange) {\n    if (simpleChange.value) {\n      this._value = simpleChange.value.currentValue;\n      if (!this.lazy) {\n        this.totalRecords = this._value ? this._value.length : 0;\n        if (this.sortMode == 'single' && this.sortField) this.sortSingle();else if (this.sortMode == 'multiple' && this.multiSortMeta) this.sortMultiple();else if (this.hasFilter())\n          //sort already filters\n          this._filter();\n      }\n      this.updateSerializedValue();\n      this.tableService.onUIUpdate(this.value);\n    }\n    if (simpleChange.sortField) {\n      this._sortField = simpleChange.sortField.currentValue;\n      //avoid triggering lazy load prior to lazy initialization at onInit\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n    if (simpleChange.sortOrder) {\n      this._sortOrder = simpleChange.sortOrder.currentValue;\n      //avoid triggering lazy load prior to lazy initialization at onInit\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n    if (simpleChange.multiSortMeta) {\n      this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n      if (this.sortMode === 'multiple') {\n        this.sortMultiple();\n      }\n    }\n    if (simpleChange.selection) {\n      this._selection = simpleChange.selection.currentValue;\n      if (!this.preventSelectionSetterPropagation) {\n        this.updateSelectionKeys();\n        this.tableService.onSelectionChange();\n      }\n      this.preventSelectionSetterPropagation = false;\n    }\n  }\n  updateSerializedValue() {\n    this.serializedValue = [];\n    if (this.paginator) this.serializePageNodes();else this.serializeNodes(null, this.filteredNodes || this.value, 0, true);\n  }\n  serializeNodes(parent, nodes, level, visible) {\n    if (nodes && nodes.length) {\n      for (let node of nodes) {\n        node.parent = parent;\n        const rowNode = {\n          node: node,\n          parent: parent,\n          level: level,\n          visible: visible && (parent ? parent.expanded : true)\n        };\n        this.serializedValue.push(rowNode);\n        if (rowNode.visible && node.expanded) {\n          this.serializeNodes(node, node.children, level + 1, rowNode.visible);\n        }\n      }\n    }\n  }\n  serializePageNodes() {\n    let data = this.filteredNodes || this.value;\n    this.serializedValue = [];\n    if (data && data.length) {\n      const first = this.lazy ? 0 : this.first;\n      for (let i = first; i < first + this.rows; i++) {\n        let node = data[i];\n        if (node) {\n          this.serializedValue.push({\n            node: node,\n            parent: null,\n            level: 0,\n            visible: true\n          });\n          this.serializeNodes(node, node.children, 1, true);\n        }\n      }\n    }\n  }\n  updateSelectionKeys() {\n    if (this.dataKey && this._selection) {\n      this.selectionKeys = {};\n      if (Array.isArray(this._selection)) {\n        for (let node of this._selection) {\n          this.selectionKeys[String(ObjectUtils.resolveFieldData(node.data, this.dataKey))] = 1;\n        }\n      } else {\n        this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection.data, this.dataKey))] = 1;\n      }\n    }\n  }\n  onPageChange(event) {\n    this.first = event.first;\n    this.rows = event.rows;\n    if (this.lazy) this.onLazyLoad.emit(this.createLazyLoadMetadata());else this.serializePageNodes();\n    this.onPage.emit({\n      first: this.first,\n      rows: this.rows\n    });\n    this.tableService.onUIUpdate(this.value);\n    if (this.scrollable) {\n      this.resetScrollTop();\n    }\n  }\n  sort(event) {\n    let originalEvent = event.originalEvent;\n    if (this.sortMode === 'single') {\n      this._sortOrder = this.sortField === event.field ? this.sortOrder * -1 : this.defaultSortOrder;\n      this._sortField = event.field;\n      this.sortSingle();\n      if (this.resetPageOnSort && this.scrollable) {\n        this.resetScrollTop();\n      }\n    }\n    if (this.sortMode === 'multiple') {\n      let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n      let sortMeta = this.getSortMeta(event.field);\n      if (sortMeta) {\n        if (!metaKey) {\n          this._multiSortMeta = [{\n            field: event.field,\n            order: sortMeta.order * -1\n          }];\n          if (this.resetPageOnSort && this.scrollable) {\n            this.resetScrollTop();\n          }\n        } else {\n          sortMeta.order = sortMeta.order * -1;\n        }\n      } else {\n        if (!metaKey || !this.multiSortMeta) {\n          this._multiSortMeta = [];\n          if (this.resetPageOnSort && this.scrollable) {\n            this.resetScrollTop();\n          }\n        }\n        this.multiSortMeta.push({\n          field: event.field,\n          order: this.defaultSortOrder\n        });\n      }\n      this.sortMultiple();\n    }\n  }\n  sortSingle() {\n    if (this.sortField && this.sortOrder) {\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else if (this.value) {\n        this.sortNodes(this.value);\n        if (this.hasFilter()) {\n          this._filter();\n        }\n      }\n      let sortMeta = {\n        field: this.sortField,\n        order: this.sortOrder\n      };\n      this.onSort.emit(sortMeta);\n      this.tableService.onSort(sortMeta);\n      this.updateSerializedValue();\n    }\n  }\n  sortNodes(nodes) {\n    if (!nodes || nodes.length === 0) {\n      return;\n    }\n    if (this.customSort) {\n      this.sortFunction.emit({\n        data: nodes,\n        mode: this.sortMode,\n        field: this.sortField,\n        order: this.sortOrder\n      });\n    } else {\n      nodes.sort((node1, node2) => {\n        let value1 = ObjectUtils.resolveFieldData(node1.data, this.sortField);\n        let value2 = ObjectUtils.resolveFieldData(node2.data, this.sortField);\n        let result = null;\n        if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2, undefined, {\n          numeric: true\n        });else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n        return this.sortOrder * result;\n      });\n    }\n    for (let node of nodes) {\n      this.sortNodes(node.children);\n    }\n  }\n  sortMultiple() {\n    if (this.multiSortMeta) {\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else if (this.value) {\n        this.sortMultipleNodes(this.value);\n        if (this.hasFilter()) {\n          this._filter();\n        }\n      }\n      this.onSort.emit({\n        multisortmeta: this.multiSortMeta\n      });\n      this.updateSerializedValue();\n      this.tableService.onSort(this.multiSortMeta);\n    }\n  }\n  sortMultipleNodes(nodes) {\n    if (!nodes || nodes.length === 0) {\n      return;\n    }\n    if (this.customSort) {\n      this.sortFunction.emit({\n        data: this.value,\n        mode: this.sortMode,\n        multiSortMeta: this.multiSortMeta\n      });\n    } else {\n      nodes.sort((node1, node2) => {\n        return this.multisortField(node1, node2, this.multiSortMeta, 0);\n      });\n    }\n    for (let node of nodes) {\n      this.sortMultipleNodes(node.children);\n    }\n  }\n  multisortField(node1, node2, multiSortMeta, index) {\n    if (ObjectUtils.isEmpty(this.multiSortMeta) || ObjectUtils.isEmpty(multiSortMeta[index])) {\n      return 0;\n    }\n    let value1 = ObjectUtils.resolveFieldData(node1.data, multiSortMeta[index].field);\n    let value2 = ObjectUtils.resolveFieldData(node2.data, multiSortMeta[index].field);\n    let result = null;\n    if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;\n    if (typeof value1 == 'string' || value1 instanceof String) {\n      if (value1.localeCompare && value1 != value2) {\n        return multiSortMeta[index].order * value1.localeCompare(value2, undefined, {\n          numeric: true\n        });\n      }\n    } else {\n      result = value1 < value2 ? -1 : 1;\n    }\n    if (value1 == value2) {\n      return multiSortMeta.length - 1 > index ? this.multisortField(node1, node2, multiSortMeta, index + 1) : 0;\n    }\n    return multiSortMeta[index].order * result;\n  }\n  getSortMeta(field) {\n    if (this.multiSortMeta && this.multiSortMeta.length) {\n      for (let i = 0; i < this.multiSortMeta.length; i++) {\n        if (this.multiSortMeta[i].field === field) {\n          return this.multiSortMeta[i];\n        }\n      }\n    }\n    return null;\n  }\n  isSorted(field) {\n    if (this.sortMode === 'single') {\n      return this.sortField && this.sortField === field;\n    } else if (this.sortMode === 'multiple') {\n      let sorted = false;\n      if (this.multiSortMeta) {\n        for (let i = 0; i < this.multiSortMeta.length; i++) {\n          if (this.multiSortMeta[i].field == field) {\n            sorted = true;\n            break;\n          }\n        }\n      }\n      return sorted;\n    }\n  }\n  createLazyLoadMetadata() {\n    return {\n      first: this.first,\n      rows: this.rows,\n      sortField: this.sortField,\n      sortOrder: this.sortOrder,\n      filters: this.filters,\n      globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n      multiSortMeta: this.multiSortMeta,\n      forceUpdate: () => this.cd.detectChanges()\n    };\n  }\n  onLazyItemLoad(event) {\n    this.onLazyLoad.emit({\n      ...this.createLazyLoadMetadata(),\n      ...event,\n      rows: event.last - event.first\n    });\n  }\n  /**\n   * Resets scroll to top.\n   * @group Method\n   */\n  resetScrollTop() {\n    if (this.virtualScroll) this.scrollToVirtualIndex(0);else this.scrollTo({\n      top: 0\n    });\n  }\n  /**\n   * Scrolls to given index when using virtual scroll.\n   * @param {number} index - index of the element.\n   * @group Method\n   */\n  scrollToVirtualIndex(index) {\n    if (this.scrollableViewChild) {\n      this.scrollableViewChild.scrollToVirtualIndex(index);\n    }\n    if (this.scrollableFrozenViewChild) {\n      this.scrollableViewChild.scrollToVirtualIndex(index);\n    }\n  }\n  /**\n   * Scrolls to given index.\n   * @param {ScrollToOptions} options - Scroll options.\n   * @group Method\n   */\n  scrollTo(options) {\n    if (this.scrollableViewChild) {\n      this.scrollableViewChild.scrollTo(options);\n    }\n    if (this.scrollableFrozenViewChild) {\n      this.scrollableViewChild.scrollTo(options);\n    }\n  }\n  isEmpty() {\n    let data = this.filteredNodes || this.value;\n    return data == null || data.length == 0;\n  }\n  getBlockableElement() {\n    return this.el.nativeElement.children[0];\n  }\n  onColumnResizeBegin(event) {\n    let containerLeft = DomHandler.getOffset(this.containerViewChild?.nativeElement).left;\n    this.lastResizerHelperX = event.pageX - containerLeft + this.containerViewChild?.nativeElement.scrollLeft;\n    event.preventDefault();\n  }\n  onColumnResize(event) {\n    let containerLeft = DomHandler.getOffset(this.containerViewChild?.nativeElement).left;\n    DomHandler.addClass(this.containerViewChild?.nativeElement, 'p-unselectable-text');\n    this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild?.nativeElement.offsetHeight + 'px';\n    this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n    this.resizeHelperViewChild.nativeElement.style.left = event.pageX - containerLeft + this.containerViewChild?.nativeElement.scrollLeft + 'px';\n    this.resizeHelperViewChild.nativeElement.style.display = 'block';\n  }\n  onColumnResizeEnd(event, column) {\n    let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n    let columnWidth = column.offsetWidth;\n    let newColumnWidth = columnWidth + delta;\n    let minWidth = column.style.minWidth || 15;\n    if (columnWidth + delta > parseInt(minWidth)) {\n      if (this.columnResizeMode === 'fit') {\n        let nextColumn = column.nextElementSibling;\n        while (!nextColumn.offsetParent) {\n          nextColumn = nextColumn.nextElementSibling;\n        }\n        if (nextColumn) {\n          let nextColumnWidth = nextColumn.offsetWidth - delta;\n          let nextColumnMinWidth = nextColumn.style.minWidth || 15;\n          if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\n            if (this.scrollable) {\n              let scrollableView = this.findParentScrollableView(column);\n              let scrollableBodyTable = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-body table') || DomHandler.findSingle(scrollableView, '.p-scroller-viewport table');\n              let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\n              let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\n              let resizeColumnIndex = DomHandler.index(column);\n              this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n              this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n              this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n            } else {\n              column.style.width = newColumnWidth + 'px';\n              if (nextColumn) {\n                nextColumn.style.width = nextColumnWidth + 'px';\n              }\n            }\n          }\n        }\n      } else if (this.columnResizeMode === 'expand') {\n        if (this.scrollable) {\n          let scrollableView = this.findParentScrollableView(column);\n          let scrollableBody = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-body') || DomHandler.findSingle(scrollableView, '.p-scroller-viewport');\n          let scrollableHeader = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-header');\n          let scrollableFooter = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-footer');\n          let scrollableBodyTable = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-body table') || DomHandler.findSingle(scrollableView, '.p-scroller-viewport table');\n          let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\n          let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\n          scrollableBodyTable.style.width = scrollableBodyTable.offsetWidth + delta + 'px';\n          scrollableHeaderTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\n          if (scrollableFooterTable) {\n            scrollableFooterTable.style.width = scrollableFooterTable.offsetWidth + delta + 'px';\n          }\n          let resizeColumnIndex = DomHandler.index(column);\n          const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n          const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n          const isContainerInViewport = this.containerViewChild?.nativeElement.offsetWidth >= scrollableBodyTableWidth;\n          let setWidth = (container, table, width, isContainerInViewport) => {\n            if (container && table) {\n              container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto';\n              table.style.width = width + 'px';\n            }\n          };\n          setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n          setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n          setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n          this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n          this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n          this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n        } else {\n          this.tableViewChild.nativeElement.style.width = this.tableViewChild?.nativeElement.offsetWidth + delta + 'px';\n          column.style.width = newColumnWidth + 'px';\n          let containerWidth = this.tableViewChild?.nativeElement.style.width;\n          this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\n        }\n      }\n      this.onColResize.emit({\n        element: column,\n        delta: delta\n      });\n    }\n    this.resizeHelperViewChild.nativeElement.style.display = 'none';\n    DomHandler.removeClass(this.containerViewChild?.nativeElement, 'p-unselectable-text');\n  }\n  findParentScrollableView(column) {\n    if (column) {\n      let parent = column.parentElement;\n      while (parent && !DomHandler.hasClass(parent, 'p-treetable-scrollable-view')) {\n        parent = parent.parentElement;\n      }\n      return parent;\n    } else {\n      return null;\n    }\n  }\n  resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n    if (table) {\n      let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n      if (colGroup) {\n        let col = colGroup.children[resizeColumnIndex];\n        let nextCol = col.nextElementSibling;\n        col.style.width = newColumnWidth + 'px';\n        if (nextCol && nextColumnWidth) {\n          nextCol.style.width = nextColumnWidth + 'px';\n        }\n      } else {\n        throw 'Scrollable tables require a colgroup to support resizable columns';\n      }\n    }\n  }\n  onColumnDragStart(event, columnElement) {\n    this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild?.nativeElement);\n    this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild?.nativeElement);\n    this.draggedColumn = columnElement;\n    event.dataTransfer.setData('text', 'b'); // For firefox\n  }\n\n  onColumnDragEnter(event, dropHeader) {\n    if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n      event.preventDefault();\n      let containerOffset = DomHandler.getOffset(this.containerViewChild?.nativeElement);\n      let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n      if (this.draggedColumn != dropHeader) {\n        let targetLeft = dropHeaderOffset.left - containerOffset.left;\n        let targetTop = containerOffset.top - dropHeaderOffset.top;\n        let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n        this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n        this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n        if (event.pageX > columnCenter) {\n          this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.dropPosition = 1;\n        } else {\n          this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.dropPosition = -1;\n        }\n        this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n        this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n      } else {\n        event.dataTransfer.dropEffect = 'none';\n      }\n    }\n  }\n  onColumnDragLeave(event) {\n    if (this.reorderableColumns && this.draggedColumn) {\n      event.preventDefault();\n      this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n      this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n    }\n  }\n  onColumnDrop(event, dropColumn) {\n    event.preventDefault();\n    if (this.draggedColumn) {\n      let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'ttreorderablecolumn');\n      let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'ttreorderablecolumn');\n      let allowDrop = dragIndex != dropIndex;\n      if (allowDrop && (dropIndex - dragIndex == 1 && this.dropPosition === -1 || dragIndex - dropIndex == 1 && this.dropPosition === 1)) {\n        allowDrop = false;\n      }\n      if (allowDrop && dropIndex < dragIndex && this.dropPosition === 1) {\n        dropIndex = dropIndex + 1;\n      }\n      if (allowDrop && dropIndex > dragIndex && this.dropPosition === -1) {\n        dropIndex = dropIndex - 1;\n      }\n      if (allowDrop) {\n        ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n        this.onColReorder.emit({\n          dragIndex: dragIndex,\n          dropIndex: dropIndex,\n          columns: this.columns\n        });\n      }\n      this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n      this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n      this.draggedColumn.draggable = false;\n      this.draggedColumn = null;\n      this.dropPosition = null;\n    }\n  }\n  handleRowClick(event) {\n    let targetNode = event.originalEvent.target.nodeName;\n    if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || DomHandler.hasClass(event.originalEvent.target, 'p-clickable')) {\n      return;\n    }\n    if (this.selectionMode) {\n      this.preventSelectionSetterPropagation = true;\n      let rowNode = event.rowNode;\n      let selected = this.isSelected(rowNode.node);\n      let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n      let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowNode.node.data, this.dataKey)) : null;\n      if (metaSelection) {\n        let keyboardEvent = event.originalEvent;\n        let metaKey = keyboardEvent.metaKey || keyboardEvent.ctrlKey;\n        if (selected && metaKey) {\n          if (this.isSingleSelectionMode()) {\n            this._selection = null;\n            this.selectionKeys = {};\n            this.selectionChange.emit(null);\n          } else {\n            let selectionIndex = this.findIndexInSelection(rowNode.node);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            this.selectionChange.emit(this.selection);\n            if (dataKeyValue) {\n              delete this.selectionKeys[dataKeyValue];\n            }\n          }\n          this.onNodeUnselect.emit({\n            originalEvent: event.originalEvent,\n            node: rowNode.node,\n            type: 'row'\n          });\n        } else {\n          if (this.isSingleSelectionMode()) {\n            this._selection = rowNode.node;\n            this.selectionChange.emit(rowNode.node);\n            if (dataKeyValue) {\n              this.selectionKeys = {};\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          } else if (this.isMultipleSelectionMode()) {\n            if (metaKey) {\n              this._selection = this.selection || [];\n            } else {\n              this._selection = [];\n              this.selectionKeys = {};\n            }\n            this._selection = [...this.selection, rowNode.node];\n            this.selectionChange.emit(this.selection);\n            if (dataKeyValue) {\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          }\n          this.onNodeSelect.emit({\n            originalEvent: event.originalEvent,\n            node: rowNode.node,\n            type: 'row',\n            index: event.rowIndex\n          });\n        }\n      } else {\n        if (this.selectionMode === 'single') {\n          if (selected) {\n            this._selection = null;\n            this.selectionKeys = {};\n            this.selectionChange.emit(this.selection);\n            this.onNodeUnselect.emit({\n              originalEvent: event.originalEvent,\n              node: rowNode.node,\n              type: 'row'\n            });\n          } else {\n            this._selection = rowNode.node;\n            this.selectionChange.emit(this.selection);\n            this.onNodeSelect.emit({\n              originalEvent: event.originalEvent,\n              node: rowNode.node,\n              type: 'row',\n              index: event.rowIndex\n            });\n            if (dataKeyValue) {\n              this.selectionKeys = {};\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          }\n        } else if (this.selectionMode === 'multiple') {\n          if (selected) {\n            let selectionIndex = this.findIndexInSelection(rowNode.node);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            this.selectionChange.emit(this.selection);\n            this.onNodeUnselect.emit({\n              originalEvent: event.originalEvent,\n              node: rowNode.node,\n              type: 'row'\n            });\n            if (dataKeyValue) {\n              delete this.selectionKeys[dataKeyValue];\n            }\n          } else {\n            this._selection = this.selection ? [...this.selection, rowNode.node] : [rowNode.node];\n            this.selectionChange.emit(this.selection);\n            this.onNodeSelect.emit({\n              originalEvent: event.originalEvent,\n              node: rowNode.node,\n              type: 'row',\n              index: event.rowIndex\n            });\n            if (dataKeyValue) {\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          }\n        }\n      }\n      this.tableService.onSelectionChange();\n    }\n    this.rowTouched = false;\n  }\n  handleRowTouchEnd(event) {\n    this.rowTouched = true;\n  }\n  handleRowRightClick(event) {\n    if (this.contextMenu) {\n      const node = event.rowNode.node;\n      if (this.contextMenuSelectionMode === 'separate') {\n        this.contextMenuSelection = node;\n        this.contextMenuSelectionChange.emit(node);\n        this.onContextMenuSelect.emit({\n          originalEvent: event.originalEvent,\n          node: node\n        });\n        this.contextMenu.show(event.originalEvent);\n        this.tableService.onContextMenu(node);\n      } else if (this.contextMenuSelectionMode === 'joint') {\n        this.preventSelectionSetterPropagation = true;\n        let selected = this.isSelected(node);\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\n        if (!selected) {\n          if (this.isSingleSelectionMode()) {\n            this.selection = node;\n            this.selectionChange.emit(node);\n          } else if (this.isMultipleSelectionMode()) {\n            this.selection = [node];\n            this.selectionChange.emit(this.selection);\n          }\n          if (dataKeyValue) {\n            this.selectionKeys[dataKeyValue] = 1;\n          }\n        }\n        this.contextMenu.show(event.originalEvent);\n        this.onContextMenuSelect.emit({\n          originalEvent: event.originalEvent,\n          node: node\n        });\n      }\n    }\n  }\n  toggleNodeWithCheckbox(event) {\n    this.selection = this.selection || [];\n    this.preventSelectionSetterPropagation = true;\n    let node = event.rowNode.node;\n    let selected = this.isSelected(node);\n    if (selected) {\n      this.propagateSelectionDown(node, false);\n      if (event.rowNode.parent) {\n        this.propagateSelectionUp(node.parent, false);\n      }\n      this.selectionChange.emit(this.selection);\n      this.onNodeUnselect.emit({\n        originalEvent: event,\n        node: node\n      });\n    } else {\n      this.propagateSelectionDown(node, true);\n      if (event.rowNode.parent) {\n        this.propagateSelectionUp(node.parent, true);\n      }\n      this.selectionChange.emit(this.selection);\n      this.onNodeSelect.emit({\n        originalEvent: event,\n        node: node\n      });\n    }\n    this.tableService.onSelectionChange();\n  }\n  toggleNodesWithCheckbox(event, check) {\n    let data = this.filteredNodes || this.value;\n    this._selection = check && data ? data.slice() : [];\n    if (check) {\n      if (data && data.length) {\n        for (let node of data) {\n          this.propagateSelectionDown(node, true);\n        }\n      }\n    } else {\n      this._selection = [];\n      this.selectionKeys = {};\n    }\n    this.preventSelectionSetterPropagation = true;\n    this.selectionChange.emit(this._selection);\n    this.tableService.onSelectionChange();\n    this.onHeaderCheckboxToggle.emit({\n      originalEvent: event,\n      checked: check\n    });\n  }\n  propagateSelectionUp(node, select) {\n    if (node.children && node.children.length) {\n      let selectedChildCount = 0;\n      let childPartialSelected = false;\n      let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\n      for (let child of node.children) {\n        if (this.isSelected(child)) selectedChildCount++;else if (child.partialSelected) childPartialSelected = true;\n      }\n      if (select && selectedChildCount == node.children.length) {\n        this._selection = [...(this.selection || []), node];\n        node.partialSelected = false;\n        if (dataKeyValue) {\n          this.selectionKeys[dataKeyValue] = 1;\n        }\n      } else {\n        if (!select) {\n          let index = this.findIndexInSelection(node);\n          if (index >= 0) {\n            this._selection = this.selection.filter((val, i) => i != index);\n            if (dataKeyValue) {\n              delete this.selectionKeys[dataKeyValue];\n            }\n          }\n        }\n        if (childPartialSelected || selectedChildCount > 0 && selectedChildCount != node.children.length) node.partialSelected = true;else node.partialSelected = false;\n      }\n    }\n    let parent = node.parent;\n    if (parent) {\n      this.propagateSelectionUp(parent, select);\n    }\n  }\n  propagateSelectionDown(node, select) {\n    let index = this.findIndexInSelection(node);\n    let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\n    if (select && index == -1) {\n      this._selection = [...(this.selection || []), node];\n      if (dataKeyValue) {\n        this.selectionKeys[dataKeyValue] = 1;\n      }\n    } else if (!select && index > -1) {\n      this._selection = this.selection.filter((val, i) => i != index);\n      if (dataKeyValue) {\n        delete this.selectionKeys[dataKeyValue];\n      }\n    }\n    node.partialSelected = false;\n    if (node.children && node.children.length) {\n      for (let child of node.children) {\n        this.propagateSelectionDown(child, select);\n      }\n    }\n  }\n  isSelected(node) {\n    if (node && this.selection) {\n      if (this.dataKey) {\n        return this.selectionKeys[ObjectUtils.resolveFieldData(node.data, this.dataKey)] !== undefined;\n      } else {\n        if (Array.isArray(this.selection)) return this.findIndexInSelection(node) > -1;else return this.equals(node, this.selection);\n      }\n    }\n    return false;\n  }\n  findIndexInSelection(node) {\n    let index = -1;\n    if (this.selection && this.selection.length) {\n      for (let i = 0; i < this.selection.length; i++) {\n        if (this.equals(node, this.selection[i])) {\n          index = i;\n          break;\n        }\n      }\n    }\n    return index;\n  }\n  isSingleSelectionMode() {\n    return this.selectionMode === 'single';\n  }\n  isMultipleSelectionMode() {\n    return this.selectionMode === 'multiple';\n  }\n  equals(node1, node2) {\n    return this.compareSelectionBy === 'equals' ? node1 === node2 : ObjectUtils.equals(node1.data, node2.data, this.dataKey);\n  }\n  filter(value, field, matchMode) {\n    if (this.filterTimeout) {\n      clearTimeout(this.filterTimeout);\n    }\n    if (!this.isFilterBlank(value)) {\n      this.filters[field] = {\n        value: value,\n        matchMode: matchMode\n      };\n    } else if (this.filters[field]) {\n      delete this.filters[field];\n    }\n    this.filterTimeout = setTimeout(() => {\n      this._filter();\n      this.filterTimeout = null;\n    }, this.filterDelay);\n  }\n  filterGlobal(value, matchMode) {\n    this.filter(value, 'global', matchMode);\n  }\n  isFilterBlank(filter) {\n    if (filter !== null && filter !== undefined) {\n      if (typeof filter === 'string' && filter.trim().length == 0 || Array.isArray(filter) && filter.length == 0) return true;else return false;\n    }\n    return true;\n  }\n  _filter() {\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    } else {\n      if (!this.value) {\n        return;\n      }\n      if (!this.hasFilter()) {\n        this.filteredNodes = null;\n        if (this.paginator) {\n          this.totalRecords = this.value ? this.value.length : 0;\n        }\n      } else {\n        let globalFilterFieldsArray;\n        if (this.filters['global']) {\n          if (!this.columns && !this.globalFilterFields) throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');else globalFilterFieldsArray = this.globalFilterFields || this.columns;\n        }\n        this.filteredNodes = [];\n        const isStrictMode = this.filterMode === 'strict';\n        let isValueChanged = false;\n        for (let node of this.value) {\n          let copyNode = {\n            ...node\n          };\n          let localMatch = true;\n          let globalMatch = false;\n          let paramsWithoutNode;\n          for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n              let filterMeta = this.filters[prop];\n              let filterField = prop;\n              let filterValue = filterMeta.value;\n              let filterMatchMode = filterMeta.matchMode || 'startsWith';\n              let filterConstraint = this.filterService.filters[filterMatchMode];\n              paramsWithoutNode = {\n                filterField,\n                filterValue,\n                filterConstraint,\n                isStrictMode\n              };\n              if (isStrictMode && !(this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode)) || !isStrictMode && !(this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode))) {\n                localMatch = false;\n              }\n              if (!localMatch) {\n                break;\n              }\n            }\n          }\n          if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n            for (let j = 0; j < globalFilterFieldsArray.length; j++) {\n              let copyNodeForGlobal = {\n                ...copyNode\n              };\n              let filterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\n              let filterValue = this.filters['global'].value;\n              let filterConstraint = this.filterService.filters[this.filters['global'].matchMode];\n              paramsWithoutNode = {\n                filterField,\n                filterValue,\n                filterConstraint,\n                isStrictMode\n              };\n              if (isStrictMode && (this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode) || this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode)) || !isStrictMode && (this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode) || this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode))) {\n                globalMatch = true;\n                copyNode = copyNodeForGlobal;\n              }\n            }\n          }\n          let matches = localMatch;\n          if (this.filters['global']) {\n            matches = localMatch && globalMatch;\n          }\n          if (matches) {\n            this.filteredNodes.push(copyNode);\n          }\n          isValueChanged = isValueChanged || !localMatch || globalMatch || localMatch && this.filteredNodes.length > 0 || !globalMatch && this.filteredNodes.length === 0;\n        }\n        if (!isValueChanged) {\n          this.filteredNodes = null;\n        }\n        if (this.paginator) {\n          this.totalRecords = this.filteredNodes ? this.filteredNodes.length : this.value ? this.value.length : 0;\n        }\n      }\n    }\n    this.first = 0;\n    const filteredValue = this.filteredNodes || this.value;\n    this.onFilter.emit({\n      filters: this.filters,\n      filteredValue: filteredValue\n    });\n    this.tableService.onUIUpdate(filteredValue);\n    this.updateSerializedValue();\n    if (this.scrollable) {\n      this.resetScrollTop();\n    }\n  }\n  findFilteredNodes(node, paramsWithoutNode) {\n    if (node) {\n      let matched = false;\n      if (node.children) {\n        let childNodes = [...node.children];\n        node.children = [];\n        for (let childNode of childNodes) {\n          let copyChildNode = {\n            ...childNode\n          };\n          if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {\n            matched = true;\n            node.children.push(copyChildNode);\n          }\n        }\n      }\n      if (matched) {\n        return true;\n      }\n    }\n  }\n  isFilterMatched(node, filterOptions) {\n    let {\n      filterField,\n      filterValue,\n      filterConstraint,\n      isStrictMode\n    } = filterOptions;\n    let matched = false;\n    let dataFieldValue = ObjectUtils.resolveFieldData(node.data, filterField);\n    if (filterConstraint(dataFieldValue, filterValue, this.filterLocale)) {\n      matched = true;\n    }\n    if (!matched || isStrictMode && !this.isNodeLeaf(node)) {\n      matched = this.findFilteredNodes(node, {\n        filterField,\n        filterValue,\n        filterConstraint,\n        isStrictMode\n      }) || matched;\n    }\n    return matched;\n  }\n  isNodeLeaf(node) {\n    return node.leaf === false ? false : !(node.children && node.children.length);\n  }\n  hasFilter() {\n    let empty = true;\n    for (let prop in this.filters) {\n      if (this.filters.hasOwnProperty(prop)) {\n        empty = false;\n        break;\n      }\n    }\n    return !empty;\n  }\n  /**\n   * Clears the sort and paginator state.\n   * @group Method\n   */\n  reset() {\n    this._sortField = null;\n    this._sortOrder = 1;\n    this._multiSortMeta = null;\n    this.tableService.onSort(null);\n    this.filteredNodes = null;\n    this.filters = {};\n    this.first = 0;\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    } else {\n      this.totalRecords = this._value ? this._value.length : 0;\n    }\n  }\n  updateEditingCell(cell, data, field) {\n    this.editingCell = cell;\n    this.editingCellData = data;\n    this.editingCellField = field;\n    this.bindDocumentEditListener();\n  }\n  isEditingCellValid() {\n    return this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0;\n  }\n  bindDocumentEditListener() {\n    if (!this.documentEditListener) {\n      this.documentEditListener = this.renderer.listen(this.document, 'click', event => {\n        if (this.editingCell && !this.editingCellClick && this.isEditingCellValid()) {\n          DomHandler.removeClass(this.editingCell, 'p-cell-editing');\n          this.editingCell = null;\n          this.onEditComplete.emit({\n            field: this.editingCellField,\n            data: this.editingCellData\n          });\n          this.editingCellField = null;\n          this.editingCellData = null;\n          this.unbindDocumentEditListener();\n        }\n        this.editingCellClick = false;\n      });\n    }\n  }\n  unbindDocumentEditListener() {\n    if (this.documentEditListener) {\n      this.documentEditListener();\n      this.documentEditListener = null;\n    }\n  }\n  ngOnDestroy() {\n    this.unbindDocumentEditListener();\n    this.editingCell = null;\n    this.editingCellField = null;\n    this.editingCellData = null;\n    this.initialized = null;\n  }\n}\n_class2 = TreeTable;\n_defineProperty(TreeTable, \"\\u0275fac\", function _class2_Factory(t) {\n  return new (t || _class2)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(TreeTableService), i0.ɵɵdirectiveInject(i1.FilterService));\n});\n_defineProperty(TreeTable, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class2,\n  selectors: [[\"p-treeTable\"]],\n  contentQueries: function _class2_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function _class2_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resizeHelperViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorUpViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorDownViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollableViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollableFrozenViewChild = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    columns: \"columns\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    tableStyle: \"tableStyle\",\n    tableStyleClass: \"tableStyleClass\",\n    autoLayout: \"autoLayout\",\n    lazy: \"lazy\",\n    lazyLoadOnInit: \"lazyLoadOnInit\",\n    paginator: \"paginator\",\n    rows: \"rows\",\n    first: \"first\",\n    pageLinks: \"pageLinks\",\n    rowsPerPageOptions: \"rowsPerPageOptions\",\n    alwaysShowPaginator: \"alwaysShowPaginator\",\n    paginatorPosition: \"paginatorPosition\",\n    paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\",\n    currentPageReportTemplate: \"currentPageReportTemplate\",\n    showCurrentPageReport: \"showCurrentPageReport\",\n    showJumpToPageDropdown: \"showJumpToPageDropdown\",\n    showFirstLastIcon: \"showFirstLastIcon\",\n    showPageLinks: \"showPageLinks\",\n    defaultSortOrder: \"defaultSortOrder\",\n    sortMode: \"sortMode\",\n    resetPageOnSort: \"resetPageOnSort\",\n    customSort: \"customSort\",\n    selectionMode: \"selectionMode\",\n    contextMenuSelection: \"contextMenuSelection\",\n    contextMenuSelectionMode: \"contextMenuSelectionMode\",\n    dataKey: \"dataKey\",\n    metaKeySelection: \"metaKeySelection\",\n    compareSelectionBy: \"compareSelectionBy\",\n    rowHover: \"rowHover\",\n    loading: \"loading\",\n    loadingIcon: \"loadingIcon\",\n    showLoader: \"showLoader\",\n    scrollable: \"scrollable\",\n    scrollHeight: \"scrollHeight\",\n    virtualScroll: \"virtualScroll\",\n    virtualScrollItemSize: \"virtualScrollItemSize\",\n    virtualScrollOptions: \"virtualScrollOptions\",\n    virtualScrollDelay: \"virtualScrollDelay\",\n    frozenWidth: \"frozenWidth\",\n    frozenColumns: \"frozenColumns\",\n    resizableColumns: \"resizableColumns\",\n    columnResizeMode: \"columnResizeMode\",\n    reorderableColumns: \"reorderableColumns\",\n    contextMenu: \"contextMenu\",\n    rowTrackBy: \"rowTrackBy\",\n    filters: \"filters\",\n    globalFilterFields: \"globalFilterFields\",\n    filterDelay: \"filterDelay\",\n    filterMode: \"filterMode\",\n    filterLocale: \"filterLocale\",\n    totalRecords: \"totalRecords\",\n    sortField: \"sortField\",\n    sortOrder: \"sortOrder\",\n    multiSortMeta: \"multiSortMeta\",\n    selection: \"selection\",\n    value: \"value\",\n    virtualRowHeight: \"virtualRowHeight\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\",\n    contextMenuSelectionChange: \"contextMenuSelectionChange\",\n    onFilter: \"onFilter\",\n    onNodeExpand: \"onNodeExpand\",\n    onNodeCollapse: \"onNodeCollapse\",\n    onPage: \"onPage\",\n    onSort: \"onSort\",\n    onLazyLoad: \"onLazyLoad\",\n    sortFunction: \"sortFunction\",\n    onColResize: \"onColResize\",\n    onColReorder: \"onColReorder\",\n    onNodeSelect: \"onNodeSelect\",\n    onNodeUnselect: \"onNodeUnselect\",\n    onContextMenuSelect: \"onContextMenuSelect\",\n    onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\",\n    onEditInit: \"onEditInit\",\n    onEditComplete: \"onEditComplete\",\n    onEditCancel: \"onEditCancel\"\n  },\n  features: [i0.ɵɵProvidersFeature([TreeTableService]), i0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 20,\n  consts: [[\"data-scrollselectors\", \".p-treetable-scrollable-body\", 3, \"ngStyle\", \"ngClass\"], [\"container\", \"\"], [\"class\", \"p-treetable-loading\", 4, \"ngIf\"], [\"class\", \"p-treetable-header\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-treetable-wrapper\", 4, \"ngIf\"], [\"class\", \"p-treetable-scrollable-wrapper\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-treetable-footer\", 4, \"ngIf\"], [\"class\", \"p-column-resizer-helper\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"p-treetable-reorder-indicator-up\", \"style\", \"display: none;\", 4, \"ngIf\"], [\"class\", \"p-treetable-reorder-indicator-down\", \"style\", \"display: none;\", 4, \"ngIf\"], [1, \"p-treetable-loading\"], [1, \"p-treetable-loading-overlay\", \"p-component-overlay\"], [3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"spin\", \"styleClass\", 4, \"ngIf\"], [\"class\", \"p-treetable-loading-icon\", 4, \"ngIf\"], [3, \"spin\", \"styleClass\"], [1, \"p-treetable-loading-icon\"], [4, \"ngTemplateOutlet\"], [1, \"p-treetable-header\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\"], [\"pTemplate\", \"firstpagelinkicon\"], [\"pTemplate\", \"previouspagelinkicon\"], [\"pTemplate\", \"lastpagelinkicon\"], [\"pTemplate\", \"nextpagelinkicon\"], [1, \"p-treetable-wrapper\"], [3, \"ngClass\", \"ngStyle\"], [\"table\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-treetable-thead\"], [1, \"p-treetable-tbody\", 3, \"pTreeTableBody\", \"pTreeTableBodyTemplate\"], [1, \"p-treetable-tfoot\"], [1, \"p-treetable-scrollable-wrapper\"], [\"class\", \"p-treetable-scrollable-view p-treetable-frozen-view\", 3, \"ttScrollableView\", \"frozen\", \"ngStyle\", \"scrollHeight\", 4, \"ngIf\"], [1, \"p-treetable-scrollable-view\", 3, \"ttScrollableView\", \"frozen\", \"scrollHeight\", \"ngStyle\"], [\"scrollableView\", \"\"], [1, \"p-treetable-scrollable-view\", \"p-treetable-frozen-view\", 3, \"ttScrollableView\", \"frozen\", \"ngStyle\", \"scrollHeight\"], [\"scrollableFrozenView\", \"\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\"], [1, \"p-treetable-footer\"], [1, \"p-column-resizer-helper\", 2, \"display\", \"none\"], [\"resizeHelper\", \"\"], [1, \"p-treetable-reorder-indicator-up\", 2, \"display\", \"none\"], [\"reorderIndicatorUp\", \"\"], [1, \"p-treetable-reorder-indicator-down\", 2, \"display\", \"none\"], [\"reorderIndicatorDown\", \"\"]],\n  template: function _class2_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, _class2_div_2_Template, 4, 2, \"div\", 2);\n      i0.ɵɵtemplate(3, _class2_div_3_Template, 2, 1, \"div\", 3);\n      i0.ɵɵtemplate(4, _class2_p_paginator_4_Template, 5, 19, \"p-paginator\", 4);\n      i0.ɵɵtemplate(5, _class2_div_5_Template, 9, 16, \"div\", 5);\n      i0.ɵɵtemplate(6, _class2_div_6_Template, 4, 8, \"div\", 6);\n      i0.ɵɵtemplate(7, _class2_p_paginator_7_Template, 5, 19, \"p-paginator\", 7);\n      i0.ɵɵtemplate(8, _class2_div_8_Template, 2, 1, \"div\", 8);\n      i0.ɵɵtemplate(9, _class2_div_9_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(10, _class2_span_10_Template, 4, 2, \"span\", 10);\n      i0.ɵɵtemplate(11, _class2_span_11_Template, 4, 2, \"span\", 11);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunction5(14, _c10, ctx.rowHover || ctx.selectionMode === \"single\" || ctx.selectionMode === \"multiple\", ctx.autoLayout, ctx.resizableColumns, ctx.resizableColumns && ctx.columnResizeMode === \"fit\", ctx.scrollable && ctx.scrollHeight === \"flex\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading && ctx.showLoader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.captionTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"top\" || ctx.paginatorPosition == \"both\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.scrollable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.scrollable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"bottom\" || ctx.paginatorPosition == \"both\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.summaryTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.resizableColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n    }\n  },\n  dependencies: function () {\n    return [i2.NgClass, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, i3.Paginator, i1.PrimeTemplate, SpinnerIcon, ArrowDownIcon, ArrowUpIcon, TTScrollableView, TTBody];\n  },\n  styles: [\".p-treetable{position:relative}.p-treetable table{border-collapse:collapse;width:100%;table-layout:fixed}.p-treetable .p-sortable-column{cursor:pointer;-webkit-user-select:none;user-select:none}.p-treetable .p-sortable-column .p-column-title,.p-treetable .p-sortable-column .p-sortable-column-icon,.p-treetable .p-sortable-column .p-sortable-column-badge{vertical-align:middle}.p-treetable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-treetable-auto-layout>.p-treetable-wrapper{overflow-x:auto}.p-treetable-auto-layout>.p-treetable-wrapper>table{table-layout:auto}.p-treetable-hoverable-rows .p-treetable-tbody>tr{cursor:pointer}.p-treetable-toggler{cursor:pointer;-webkit-user-select:none;user-select:none;display:inline-flex;align-items:center;justify-content:center;vertical-align:middle;overflow:hidden;position:relative}p-treetabletoggler+p-treetablecheckbox .p-checkbox{vertical-align:middle}p-treetabletoggler+p-treetablecheckbox+span{vertical-align:middle}.p-treetable-scrollable-wrapper{position:relative}.p-treetable-scrollable-header,.p-treetable-scrollable-footer{overflow:hidden}.p-treetable-scrollable-body{overflow:auto;position:relative}.p-treetable-scrollable-body>table>.p-treetable-tbody>tr:first-child>td{border-top:0 none}.p-treetable-virtual-table{position:absolute}.p-treetable-frozen-view .p-treetable-scrollable-body{overflow:hidden}.p-treetable-frozen-view>.p-treetable-scrollable-body>table>.p-treetable-tbody>tr>td:last-child{border-right:0 none}.p-treetable-unfrozen-view{position:absolute;top:0}.p-treetable-flex-scrollable,.p-treetable-flex-scrollable .p-treetable-scrollable-wrapper,.p-treetable-flex-scrollable .p-treetable-scrollable-view{display:flex;flex-direction:column;flex:1;height:100%}.p-treetable-flex-scrollable .p-treetable-virtual-scrollable-body{flex:1}.p-treetable-resizable>.p-treetable-wrapper{overflow-x:auto}.p-treetable-resizable .p-treetable-thead>tr>th,.p-treetable-resizable .p-treetable-tfoot>tr>td,.p-treetable-resizable .p-treetable-tbody>tr>td{overflow:hidden}.p-treetable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-treetable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-treetable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-treetable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-treetable .p-row-editor-init,.p-treetable .p-row-editor-save,.p-treetable .p-row-editor-cancel,.p-treetable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-treetable-reorder-indicator-up,.p-treetable-reorder-indicator-down{position:absolute;display:none}[ttReorderableColumn]{cursor:move}.p-treetable .p-treetable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-treetable .p-scroller-loading{transform:none!important;min-height:0;position:sticky;top:0;left:0}\\n\"],\n  encapsulation: 2\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeTable, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTable',\n      template: `\n        <div\n            #container\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            data-scrollselectors=\".p-treetable-scrollable-body\"\n            [ngClass]=\"{\n                'p-treetable p-component': true,\n                'p-treetable-hoverable-rows': rowHover || selectionMode === 'single' || selectionMode === 'multiple',\n                'p-treetable-auto-layout': autoLayout,\n                'p-treetable-resizable': resizableColumns,\n                'p-treetable-resizable-fit': resizableColumns && columnResizeMode === 'fit',\n                'p-treetable-flex-scrollable': scrollable && scrollHeight === 'flex'\n            }\"\n        >\n            <div class=\"p-treetable-loading\" *ngIf=\"loading && showLoader\">\n                <div class=\"p-treetable-loading-overlay p-component-overlay\">\n                    <i *ngIf=\"loadingIcon\" [class]=\"'p-treetable-loading-icon pi-spin ' + loadingIcon\"></i>\n                    <ng-container *ngIf=\"!loadingIcon\">\n                        <SpinnerIcon *ngIf=\"!loadingIconTemplate\" [spin]=\"true\" [styleClass]=\"'p-treetable-loading-icon'\" />\n                        <span *ngIf=\"loadingIconTemplate\" class=\"p-treetable-loading-icon\">\n                            <ng-template *ngTemplateOutlet=\"loadingIconTemplate\"></ng-template>\n                        </span>\n                    </ng-container>\n                </div>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-treetable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-top\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n\n            <div class=\"p-treetable-wrapper\" *ngIf=\"!scrollable\">\n                <table #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <thead class=\"p-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot class=\"p-treetable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class=\"p-treetable-scrollable-wrapper\" *ngIf=\"scrollable\">\n                <div\n                    class=\"p-treetable-scrollable-view p-treetable-frozen-view\"\n                    *ngIf=\"frozenColumns || frozenBodyTemplate\"\n                    #scrollableFrozenView\n                    [ttScrollableView]=\"frozenColumns\"\n                    [frozen]=\"true\"\n                    [ngStyle]=\"{ width: frozenWidth }\"\n                    [scrollHeight]=\"scrollHeight\"\n                ></div>\n                <div class=\"p-treetable-scrollable-view\" #scrollableView [ttScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{ left: frozenWidth, width: 'calc(100% - ' + frozenWidth + ')' }\"></div>\n            </div>\n\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-bottom\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n            <div *ngIf=\"summaryTemplate\" class=\"p-treetable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"p-treetable-reorder-indicator-up\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowDownIcon *ngIf=\"!reorderIndicatorUpIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorUpIconTemplate\"></ng-template>\n            </span>\n            <span #reorderIndicatorDown class=\"p-treetable-reorder-indicator-down\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowUpIcon *ngIf=\"!reorderIndicatorDownIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorDownIconTemplate\"></ng-template>\n            </span>\n        </div>\n    `,\n      providers: [TreeTableService],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      },\n      styles: [\".p-treetable{position:relative}.p-treetable table{border-collapse:collapse;width:100%;table-layout:fixed}.p-treetable .p-sortable-column{cursor:pointer;-webkit-user-select:none;user-select:none}.p-treetable .p-sortable-column .p-column-title,.p-treetable .p-sortable-column .p-sortable-column-icon,.p-treetable .p-sortable-column .p-sortable-column-badge{vertical-align:middle}.p-treetable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-treetable-auto-layout>.p-treetable-wrapper{overflow-x:auto}.p-treetable-auto-layout>.p-treetable-wrapper>table{table-layout:auto}.p-treetable-hoverable-rows .p-treetable-tbody>tr{cursor:pointer}.p-treetable-toggler{cursor:pointer;-webkit-user-select:none;user-select:none;display:inline-flex;align-items:center;justify-content:center;vertical-align:middle;overflow:hidden;position:relative}p-treetabletoggler+p-treetablecheckbox .p-checkbox{vertical-align:middle}p-treetabletoggler+p-treetablecheckbox+span{vertical-align:middle}.p-treetable-scrollable-wrapper{position:relative}.p-treetable-scrollable-header,.p-treetable-scrollable-footer{overflow:hidden}.p-treetable-scrollable-body{overflow:auto;position:relative}.p-treetable-scrollable-body>table>.p-treetable-tbody>tr:first-child>td{border-top:0 none}.p-treetable-virtual-table{position:absolute}.p-treetable-frozen-view .p-treetable-scrollable-body{overflow:hidden}.p-treetable-frozen-view>.p-treetable-scrollable-body>table>.p-treetable-tbody>tr>td:last-child{border-right:0 none}.p-treetable-unfrozen-view{position:absolute;top:0}.p-treetable-flex-scrollable,.p-treetable-flex-scrollable .p-treetable-scrollable-wrapper,.p-treetable-flex-scrollable .p-treetable-scrollable-view{display:flex;flex-direction:column;flex:1;height:100%}.p-treetable-flex-scrollable .p-treetable-virtual-scrollable-body{flex:1}.p-treetable-resizable>.p-treetable-wrapper{overflow-x:auto}.p-treetable-resizable .p-treetable-thead>tr>th,.p-treetable-resizable .p-treetable-tfoot>tr>td,.p-treetable-resizable .p-treetable-tbody>tr>td{overflow:hidden}.p-treetable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-treetable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-treetable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-treetable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-treetable .p-row-editor-init,.p-treetable .p-row-editor-save,.p-treetable .p-row-editor-cancel,.p-treetable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-treetable-reorder-indicator-up,.p-treetable-reorder-indicator-down{position:absolute;display:none}[ttReorderableColumn]{cursor:move}.p-treetable .p-treetable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-treetable .p-scroller-loading{transform:none!important;min-height:0;position:sticky;top:0;left:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: TreeTableService\n    }, {\n      type: i1.FilterService\n    }];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    tableStyle: [{\n      type: Input\n    }],\n    tableStyleClass: [{\n      type: Input\n    }],\n    autoLayout: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    lazyLoadOnInit: [{\n      type: Input\n    }],\n    paginator: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    first: [{\n      type: Input\n    }],\n    pageLinks: [{\n      type: Input\n    }],\n    rowsPerPageOptions: [{\n      type: Input\n    }],\n    alwaysShowPaginator: [{\n      type: Input\n    }],\n    paginatorPosition: [{\n      type: Input\n    }],\n    paginatorDropdownAppendTo: [{\n      type: Input\n    }],\n    currentPageReportTemplate: [{\n      type: Input\n    }],\n    showCurrentPageReport: [{\n      type: Input\n    }],\n    showJumpToPageDropdown: [{\n      type: Input\n    }],\n    showFirstLastIcon: [{\n      type: Input\n    }],\n    showPageLinks: [{\n      type: Input\n    }],\n    defaultSortOrder: [{\n      type: Input\n    }],\n    sortMode: [{\n      type: Input\n    }],\n    resetPageOnSort: [{\n      type: Input\n    }],\n    customSort: [{\n      type: Input\n    }],\n    selectionMode: [{\n      type: Input\n    }],\n    contextMenuSelection: [{\n      type: Input\n    }],\n    contextMenuSelectionMode: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    metaKeySelection: [{\n      type: Input\n    }],\n    compareSelectionBy: [{\n      type: Input\n    }],\n    rowHover: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    showLoader: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    virtualScrollItemSize: [{\n      type: Input\n    }],\n    virtualScrollOptions: [{\n      type: Input\n    }],\n    virtualScrollDelay: [{\n      type: Input\n    }],\n    frozenWidth: [{\n      type: Input\n    }],\n    frozenColumns: [{\n      type: Input\n    }],\n    resizableColumns: [{\n      type: Input\n    }],\n    columnResizeMode: [{\n      type: Input\n    }],\n    reorderableColumns: [{\n      type: Input\n    }],\n    contextMenu: [{\n      type: Input\n    }],\n    rowTrackBy: [{\n      type: Input\n    }],\n    filters: [{\n      type: Input\n    }],\n    globalFilterFields: [{\n      type: Input\n    }],\n    filterDelay: [{\n      type: Input\n    }],\n    filterMode: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    totalRecords: [{\n      type: Input\n    }],\n    sortField: [{\n      type: Input\n    }],\n    sortOrder: [{\n      type: Input\n    }],\n    multiSortMeta: [{\n      type: Input\n    }],\n    selection: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    virtualRowHeight: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    contextMenuSelectionChange: [{\n      type: Output\n    }],\n    onFilter: [{\n      type: Output\n    }],\n    onNodeExpand: [{\n      type: Output\n    }],\n    onNodeCollapse: [{\n      type: Output\n    }],\n    onPage: [{\n      type: Output\n    }],\n    onSort: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    sortFunction: [{\n      type: Output\n    }],\n    onColResize: [{\n      type: Output\n    }],\n    onColReorder: [{\n      type: Output\n    }],\n    onNodeSelect: [{\n      type: Output\n    }],\n    onNodeUnselect: [{\n      type: Output\n    }],\n    onContextMenuSelect: [{\n      type: Output\n    }],\n    onHeaderCheckboxToggle: [{\n      type: Output\n    }],\n    onEditInit: [{\n      type: Output\n    }],\n    onEditComplete: [{\n      type: Output\n    }],\n    onEditCancel: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    resizeHelperViewChild: [{\n      type: ViewChild,\n      args: ['resizeHelper']\n    }],\n    reorderIndicatorUpViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorUp']\n    }],\n    reorderIndicatorDownViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorDown']\n    }],\n    tableViewChild: [{\n      type: ViewChild,\n      args: ['table']\n    }],\n    scrollableViewChild: [{\n      type: ViewChild,\n      args: ['scrollableView']\n    }],\n    scrollableFrozenViewChild: [{\n      type: ViewChild,\n      args: ['scrollableFrozenView']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass TTBody {\n  constructor(tt, treeTableService, cd) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"treeTableService\", void 0);\n    _defineProperty(this, \"cd\", void 0);\n    _defineProperty(this, \"columns\", void 0);\n    _defineProperty(this, \"template\", void 0);\n    _defineProperty(this, \"frozen\", void 0);\n    _defineProperty(this, \"serializedNodes\", void 0);\n    _defineProperty(this, \"scrollerOptions\", void 0);\n    _defineProperty(this, \"subscription\", void 0);\n    this.tt = tt;\n    this.treeTableService = treeTableService;\n    this.cd = cd;\n    this.subscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\n      if (this.tt.virtualScroll) {\n        this.cd.detectChanges();\n      }\n    });\n  }\n  getScrollerOption(option, options) {\n    if (this.tt.virtualScroll) {\n      options = options || this.scrollerOptions;\n      return options ? options[option] : null;\n    }\n    return null;\n  }\n  getRowIndex(rowIndex) {\n    const getItemOptions = this.getScrollerOption('getItemOptions');\n    return getItemOptions ? getItemOptions(rowIndex).index : rowIndex;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n_class3 = TTBody;\n_defineProperty(TTBody, \"\\u0275fac\", function _class3_Factory(t) {\n  return new (t || _class3)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n});\n_defineProperty(TTBody, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class3,\n  selectors: [[\"\", \"pTreeTableBody\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    columns: [\"pTreeTableBody\", \"columns\"],\n    template: [\"pTreeTableBodyTemplate\", \"template\"],\n    frozen: \"frozen\",\n    serializedNodes: \"serializedNodes\",\n    scrollerOptions: \"scrollerOptions\"\n  },\n  attrs: _c11,\n  decls: 2,\n  vars: 3,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function _class3_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, _class3_ng_template_0_Template, 1, 1, \"ng-template\", 0);\n      i0.ɵɵtemplate(1, _class3_ng_container_1_Template, 2, 5, \"ng-container\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.serializedNodes || ctx.tt.serializedValue)(\"ngForTrackBy\", ctx.tt.rowTrackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.tt.isEmpty());\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTBody, [{\n    type: Component,\n    args: [{\n      selector: '[pTreeTableBody]',\n      template: `\n        <ng-template ngFor let-serializedNode let-rowIndex=\"index\" [ngForOf]=\"serializedNodes || tt.serializedValue\" [ngForTrackBy]=\"tt.rowTrackBy\">\n            <ng-container *ngIf=\"serializedNode.visible\">\n                <ng-container *ngTemplateOutlet=\"template; context: { $implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns }\"></ng-container>\n            </ng-container>\n        </ng-template>\n        <ng-container *ngIf=\"tt.isEmpty()\">\n            <ng-container *ngTemplateOutlet=\"tt.emptyMessageTemplate; context: { $implicit: columns, frozen: frozen }\"></ng-container>\n        </ng-container>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }, {\n      type: TreeTableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    columns: [{\n      type: Input,\n      args: ['pTreeTableBody']\n    }],\n    template: [{\n      type: Input,\n      args: ['pTreeTableBodyTemplate']\n    }],\n    frozen: [{\n      type: Input\n    }],\n    serializedNodes: [{\n      type: Input\n    }],\n    scrollerOptions: [{\n      type: Input\n    }]\n  });\n})();\nclass TTScrollableView {\n  get scrollHeight() {\n    return this._scrollHeight;\n  }\n  set scrollHeight(val) {\n    this._scrollHeight = val;\n    if (val != null && (val.includes('%') || val.includes('calc'))) {\n      console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight=\"flex\" instead.');\n    }\n  }\n  constructor(platformId, renderer, tt, el, zone) {\n    _defineProperty(this, \"platformId\", void 0);\n    _defineProperty(this, \"renderer\", void 0);\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"el\", void 0);\n    _defineProperty(this, \"zone\", void 0);\n    _defineProperty(this, \"columns\", void 0);\n    _defineProperty(this, \"frozen\", void 0);\n    _defineProperty(this, \"scrollHeaderViewChild\", void 0);\n    _defineProperty(this, \"scrollHeaderBoxViewChild\", void 0);\n    _defineProperty(this, \"scrollBodyViewChild\", void 0);\n    _defineProperty(this, \"scrollTableViewChild\", void 0);\n    _defineProperty(this, \"scrollLoadingTableViewChild\", void 0);\n    _defineProperty(this, \"scrollFooterViewChild\", void 0);\n    _defineProperty(this, \"scrollFooterBoxViewChild\", void 0);\n    _defineProperty(this, \"scrollableAlignerViewChild\", void 0);\n    _defineProperty(this, \"scroller\", void 0);\n    _defineProperty(this, \"headerScrollListener\", void 0);\n    _defineProperty(this, \"bodyScrollListener\", void 0);\n    _defineProperty(this, \"footerScrollListener\", void 0);\n    _defineProperty(this, \"frozenSiblingBody\", void 0);\n    _defineProperty(this, \"totalRecordsSubscription\", void 0);\n    _defineProperty(this, \"_scrollHeight\", void 0);\n    _defineProperty(this, \"preventBodyScrollPropagation\", void 0);\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.tt = tt;\n    this.el = el;\n    this.zone = zone;\n  }\n  ngAfterViewInit() {\n    if (!this.frozen) {\n      if (this.tt.frozenColumns || this.tt.frozenBodyTemplate) {\n        DomHandler.addClass(this.el.nativeElement, 'p-treetable-unfrozen-view');\n      }\n      let frozenView = this.el.nativeElement.previousElementSibling;\n      if (frozenView) {\n        if (this.tt.virtualScroll) this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-scroller-viewport');else this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-treetable-scrollable-body');\n      }\n      let scrollBarWidth = DomHandler.calculateScrollbarWidth();\n      this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n      if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\n        this.scrollFooterBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n      }\n    } else {\n      if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {\n        this.scrollableAlignerViewChild.nativeElement.style.height = DomHandler.calculateScrollbarHeight() + 'px';\n      }\n    }\n    this.bindEvents();\n  }\n  bindEvents() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n          this.headerScrollListener = this.renderer.listen(this.scrollHeaderBoxViewChild?.nativeElement, 'scroll', this.onHeaderScroll.bind(this));\n        }\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n          this.footerScrollListener = this.renderer.listen(this.scrollFooterViewChild.nativeElement, 'scroll', this.onFooterScroll.bind(this));\n        }\n        if (!this.frozen) {\n          if (this.tt.virtualScroll) {\n            this.bodyScrollListener = this.renderer.listen((this.scroller?.getElementRef()).nativeElement, 'scroll', this.onBodyScroll.bind(this));\n          } else {\n            this.bodyScrollListener = this.renderer.listen(this.scrollBodyViewChild?.nativeElement, 'scroll', this.onBodyScroll.bind(this));\n          }\n        }\n      });\n    }\n  }\n  unbindEvents() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n        if (this.headerScrollListener) {\n          this.headerScrollListener();\n          this.headerScrollListener = null;\n        }\n      }\n      if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n        if (this.footerScrollListener) {\n          this.footerScrollListener();\n          this.footerScrollListener = null;\n        }\n      }\n      if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\n        if (this.bodyScrollListener) {\n          this.bodyScrollListener();\n          this.bodyScrollListener = null;\n        }\n      }\n      if (this.scroller && this.scroller.getElementRef()) {\n        if (this.bodyScrollListener) {\n          this.bodyScrollListener();\n          this.bodyScrollListener = null;\n        }\n      }\n    }\n  }\n  onHeaderScroll() {\n    const scrollLeft = this.scrollHeaderViewChild?.nativeElement.scrollLeft;\n    this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n    if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n      this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\n    }\n    this.preventBodyScrollPropagation = true;\n  }\n  onFooterScroll() {\n    const scrollLeft = this.scrollFooterViewChild?.nativeElement.scrollLeft;\n    this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n    if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n      this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\n    }\n    this.preventBodyScrollPropagation = true;\n  }\n  onBodyScroll(event) {\n    if (this.preventBodyScrollPropagation) {\n      this.preventBodyScrollPropagation = false;\n      return;\n    }\n    if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n      this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n    }\n    if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n      this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n    }\n    if (this.frozenSiblingBody) {\n      this.frozenSiblingBody.scrollTop = event.target.scrollTop;\n    }\n  }\n  scrollToVirtualIndex(index) {\n    if (this.scroller) {\n      this.scroller.scrollToIndex(index);\n    }\n  }\n  scrollTo(options) {\n    if (this.scroller) {\n      this.scroller.scrollTo(options);\n    } else {\n      if (this.scrollBodyViewChild?.nativeElement.scrollTo) {\n        this.scrollBodyViewChild.nativeElement.scrollTo(options);\n      } else {\n        this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;\n        this.scrollBodyViewChild.nativeElement.scrollTop = options.top;\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.unbindEvents();\n    this.frozenSiblingBody = null;\n  }\n}\n_class4 = TTScrollableView;\n_defineProperty(TTScrollableView, \"\\u0275fac\", function _class4_Factory(t) {\n  return new (t || _class4)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n});\n_defineProperty(TTScrollableView, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class4,\n  selectors: [[\"\", \"ttScrollableView\", \"\"]],\n  viewQuery: function _class4_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c14, 5);\n      i0.ɵɵviewQuery(_c15, 5);\n      i0.ɵɵviewQuery(_c16, 5);\n      i0.ɵɵviewQuery(_c17, 5);\n      i0.ɵɵviewQuery(_c18, 5);\n      i0.ɵɵviewQuery(_c19, 5);\n      i0.ɵɵviewQuery(_c20, 5);\n      i0.ɵɵviewQuery(_c21, 5);\n      i0.ɵɵviewQuery(_c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollHeaderViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollHeaderBoxViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollBodyViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollTableViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollLoadingTableViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollFooterViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollFooterBoxViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollableAlignerViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    columns: [\"ttScrollableView\", \"columns\"],\n    frozen: \"frozen\",\n    scrollHeight: \"scrollHeight\"\n  },\n  attrs: _c23,\n  decls: 13,\n  vars: 13,\n  consts: [[1, \"p-treetable-scrollable-header\"], [\"scrollHeader\", \"\"], [1, \"p-treetable-scrollable-header-box\"], [\"scrollHeaderBox\", \"\"], [1, \"p-treetable-scrollable-header-table\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-treetable-thead\"], [\"styleClass\", \"p-treetable-scrollable-body\", 3, \"items\", \"style\", \"scrollHeight\", \"itemSize\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [4, \"ngIf\"], [\"buildInItems\", \"\"], [\"class\", \"p-treetable-scrollable-footer\", 4, \"ngIf\"], [\"styleClass\", \"p-treetable-scrollable-body\", 3, \"items\", \"scrollHeight\", \"itemSize\", \"lazy\", \"options\", \"onLazyLoad\"], [\"scroller\", \"\"], [\"pTemplate\", \"content\"], [\"pTemplate\", \"loader\"], [1, \"p-treetable-scrollable-body\", 3, \"ngStyle\"], [\"scrollBody\", \"\"], [3, \"ngClass\", \"ngStyle\"], [\"scrollTable\", \"\"], [1, \"p-treetable-tbody\", 3, \"pTreeTableBody\", \"pTreeTableBodyTemplate\", \"serializedNodes\", \"frozen\"], [\"style\", \"background-color:transparent\", 4, \"ngIf\"], [2, \"background-color\", \"transparent\"], [\"scrollableAligner\", \"\"], [1, \"p-treetable-scrollable-footer\"], [\"scrollFooter\", \"\"], [1, \"p-treetable-scrollable-footer-box\"], [\"scrollFooterBox\", \"\"], [1, \"p-treetable-scrollable-footer-table\", 3, \"ngClass\", \"ngStyle\"], [1, \"p-treetable-tfoot\"]],\n  template: function _class4_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2, 3)(4, \"table\", 4);\n      i0.ɵɵtemplate(5, _class4_ng_container_5_Template, 1, 0, \"ng-container\", 5);\n      i0.ɵɵelementStart(6, \"thead\", 6);\n      i0.ɵɵtemplate(7, _class4_ng_container_7_Template, 1, 0, \"ng-container\", 5);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(8, _class4_p_scroller_8_Template, 4, 10, \"p-scroller\", 7);\n      i0.ɵɵtemplate(9, _class4_ng_container_9_Template, 4, 10, \"ng-container\", 8);\n      i0.ɵɵtemplate(10, _class4_ng_template_10_Template, 5, 15, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(12, _class4_div_12_Template, 8, 10, \"div\", 10);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", ctx.tt.tableStyleClass)(\"ngStyle\", ctx.tt.tableStyle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.tt.frozenColGroupTemplate || ctx.tt.colGroupTemplate : ctx.tt.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(9, _c7, ctx.columns));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.tt.frozenHeaderTemplate || ctx.tt.headerTemplate : ctx.tt.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(11, _c7, ctx.columns));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.tt.virtualScroll);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tt.virtualScroll);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.tt.footerTemplate);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, i1.PrimeTemplate, i4.Scroller, TTBody],\n  encapsulation: 2\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTScrollableView, [{\n    type: Component,\n    args: [{\n      selector: '[ttScrollableView]',\n      template: `\n        <div #scrollHeader class=\"p-treetable-scrollable-header\">\n            <div #scrollHeaderBox class=\"p-treetable-scrollable-header-box\">\n                <table class=\"p-treetable-scrollable-header-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt.colGroupTemplate : tt.colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <thead class=\"p-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenHeaderTemplate || tt.headerTemplate : tt.headerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </thead>\n                </table>\n            </div>\n        </div>\n\n        <p-scroller\n            *ngIf=\"tt.virtualScroll\"\n            #scroller\n            [items]=\"tt.serializedValue\"\n            styleClass=\"p-treetable-scrollable-body\"\n            [style]=\"{ height: tt.scrollHeight !== 'flex' ? tt.scrollHeight : undefined }\"\n            [scrollHeight]=\"scrollHeight !== 'flex' ? undefined : '100%'\"\n            [itemSize]=\"tt.virtualScrollItemSize || tt._virtualRowHeight\"\n            [lazy]=\"tt.lazy\"\n            (onLazyLoad)=\"tt.onLazyItemLoad($event)\"\n            [options]=\"tt.virtualScrollOptions\"\n        >\n            <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n            </ng-template>\n            <ng-container *ngIf=\"loaderTemplate\">\n                <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                    <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                </ng-template>\n            </ng-container>\n        </p-scroller>\n        <ng-container *ngIf=\"!tt.virtualScroll\">\n            <div #scrollBody class=\"p-treetable-scrollable-body\" [ngStyle]=\"{ 'max-height': tt.scrollHeight !== 'flex' ? scrollHeight : undefined, 'overflow-y': !frozen && tt.scrollHeight ? 'scroll' : undefined }\">\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: serializedValue, options: {} }\"></ng-container>\n            </div>\n        </ng-container>\n\n        <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n            <table #scrollTable [class]=\"tt.tableStyleClass\" [ngClass]=\"scrollerOptions.contentStyleClass\" [ngStyle]=\"tt.tableStyle\" [style]=\"scrollerOptions.contentStyle\">\n                <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt.colGroupTemplate : tt.colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                <tbody class=\"p-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate || tt.bodyTemplate : tt.bodyTemplate\" [serializedNodes]=\"items\" [frozen]=\"frozen\"></tbody>\n            </table>\n            <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n        </ng-template>\n\n        <div #scrollFooter *ngIf=\"tt.footerTemplate\" class=\"p-treetable-scrollable-footer\">\n            <div #scrollFooterBox class=\"p-treetable-scrollable-footer-box\">\n                <table class=\"p-treetable-scrollable-footer-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt.colGroupTemplate : tt.colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <tfoot class=\"p-treetable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenFooterTemplate || tt.footerTemplate : tt.footerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: TreeTable\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    columns: [{\n      type: Input,\n      args: ['ttScrollableView']\n    }],\n    frozen: [{\n      type: Input\n    }],\n    scrollHeaderViewChild: [{\n      type: ViewChild,\n      args: ['scrollHeader']\n    }],\n    scrollHeaderBoxViewChild: [{\n      type: ViewChild,\n      args: ['scrollHeaderBox']\n    }],\n    scrollBodyViewChild: [{\n      type: ViewChild,\n      args: ['scrollBody']\n    }],\n    scrollTableViewChild: [{\n      type: ViewChild,\n      args: ['scrollTable']\n    }],\n    scrollLoadingTableViewChild: [{\n      type: ViewChild,\n      args: ['loadingTable']\n    }],\n    scrollFooterViewChild: [{\n      type: ViewChild,\n      args: ['scrollFooter']\n    }],\n    scrollFooterBoxViewChild: [{\n      type: ViewChild,\n      args: ['scrollFooterBox']\n    }],\n    scrollableAlignerViewChild: [{\n      type: ViewChild,\n      args: ['scrollableAligner']\n    }],\n    scroller: [{\n      type: ViewChild,\n      args: ['scroller']\n    }],\n    scrollHeight: [{\n      type: Input\n    }]\n  });\n})();\nclass TTSortableColumn {\n  constructor(tt) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"field\", void 0);\n    _defineProperty(this, \"ttSortableColumnDisabled\", void 0);\n    _defineProperty(this, \"sorted\", void 0);\n    _defineProperty(this, \"subscription\", void 0);\n    this.tt = tt;\n    if (this.isEnabled()) {\n      this.subscription = this.tt.tableService.sortSource$.subscribe(sortMeta => {\n        this.updateSortState();\n      });\n    }\n  }\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.updateSortState();\n    }\n  }\n  updateSortState() {\n    this.sorted = this.tt.isSorted(this.field);\n  }\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.updateSortState();\n      this.tt.sort({\n        originalEvent: event,\n        field: this.field\n      });\n      DomHandler.clearSelection();\n    }\n  }\n  onEnterKey(event) {\n    this.onClick(event);\n  }\n  isEnabled() {\n    return this.ttSortableColumnDisabled !== true;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n_class5 = TTSortableColumn;\n_defineProperty(TTSortableColumn, \"\\u0275fac\", function _class5_Factory(t) {\n  return new (t || _class5)(i0.ɵɵdirectiveInject(TreeTable));\n});\n_defineProperty(TTSortableColumn, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _class5,\n  selectors: [[\"\", \"ttSortableColumn\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 6,\n  hostBindings: function _class5_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function _class5_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"keydown.enter\", function _class5_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKey($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? \"0\" : null)(\"role\", \"columnheader\");\n      i0.ɵɵclassProp(\"p-sortable-column\", ctx.isEnabled())(\"p-highlight\", ctx.sorted);\n    }\n  },\n  inputs: {\n    field: [\"ttSortableColumn\", \"field\"],\n    ttSortableColumnDisabled: \"ttSortableColumnDisabled\"\n  }\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTSortableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[ttSortableColumn]',\n      host: {\n        class: 'p-element',\n        '[class.p-sortable-column]': 'isEnabled()',\n        '[class.p-highlight]': 'sorted',\n        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n        '[attr.role]': '\"columnheader\"'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }];\n  }, {\n    field: [{\n      type: Input,\n      args: ['ttSortableColumn']\n    }],\n    ttSortableColumnDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onEnterKey: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }]\n  });\n})();\nclass TTSortIcon {\n  constructor(tt, cd) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"cd\", void 0);\n    _defineProperty(this, \"field\", void 0);\n    _defineProperty(this, \"ariaLabelDesc\", void 0);\n    _defineProperty(this, \"ariaLabelAsc\", void 0);\n    _defineProperty(this, \"subscription\", void 0);\n    _defineProperty(this, \"sortOrder\", void 0);\n    this.tt = tt;\n    this.cd = cd;\n    this.subscription = this.tt.tableService.sortSource$.subscribe(sortMeta => {\n      this.updateSortState();\n      this.cd.markForCheck();\n    });\n  }\n  ngOnInit() {\n    this.updateSortState();\n  }\n  onClick(event) {\n    event.preventDefault();\n  }\n  updateSortState() {\n    if (this.tt.sortMode === 'single') {\n      this.sortOrder = this.tt.isSorted(this.field) ? this.tt.sortOrder : 0;\n    } else if (this.tt.sortMode === 'multiple') {\n      let sortMeta = this.tt.getSortMeta(this.field);\n      this.sortOrder = sortMeta ? sortMeta.order : 0;\n    }\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n_class6 = TTSortIcon;\n_defineProperty(TTSortIcon, \"\\u0275fac\", function _class6_Factory(t) {\n  return new (t || _class6)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n});\n_defineProperty(TTSortIcon, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class6,\n  selectors: [[\"p-treeTableSortIcon\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    field: \"field\",\n    ariaLabelDesc: \"ariaLabelDesc\",\n    ariaLabelAsc: \"ariaLabelAsc\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"p-sortable-column-icon\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [3, \"styleClass\"], [1, \"p-sortable-column-icon\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function _class6_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, _class6_ng_container_0_Template, 4, 3, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, _class6_span_1_Template, 2, 4, \"span\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.tt.sortIconTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.tt.sortIconTemplate);\n    }\n  },\n  dependencies: function () {\n    return [i2.NgIf, i2.NgTemplateOutlet, SortAltIcon, SortAmountUpAltIcon, SortAmountDownIcon];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTSortIcon, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTableSortIcon',\n      template: ` <ng-container *ngIf=\"!tt.sortIconTemplate\">\n            <SortAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 0\" />\n            <SortAmountUpAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 1\" />\n            <SortAmountDownIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === -1\" />\n        </ng-container>\n        <span *ngIf=\"tt.sortIconTemplate\" class=\"p-sortable-column-icon\">\n            <ng-template *ngTemplateOutlet=\"tt.sortIconTemplate; context: { $implicit: sortOrder }\"></ng-template>\n        </span>`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    field: [{\n      type: Input\n    }],\n    ariaLabelDesc: [{\n      type: Input\n    }],\n    ariaLabelAsc: [{\n      type: Input\n    }]\n  });\n})();\nclass TTResizableColumn {\n  constructor(document, platformId, renderer, tt, el, zone) {\n    _defineProperty(this, \"document\", void 0);\n    _defineProperty(this, \"platformId\", void 0);\n    _defineProperty(this, \"renderer\", void 0);\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"el\", void 0);\n    _defineProperty(this, \"zone\", void 0);\n    _defineProperty(this, \"ttResizableColumnDisabled\", void 0);\n    _defineProperty(this, \"resizer\", void 0);\n    _defineProperty(this, \"resizerMouseDownListener\", void 0);\n    _defineProperty(this, \"documentMouseMoveListener\", void 0);\n    _defineProperty(this, \"documentMouseUpListener\", void 0);\n    this.document = document;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.tt = tt;\n    this.el = el;\n    this.zone = zone;\n  }\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.isEnabled()) {\n        DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n        this.resizer = this.renderer.createElement('span');\n        this.renderer.addClass(this.resizer, 'p-column-resizer');\n        this.renderer.appendChild(this.el.nativeElement, this.resizer);\n        this.zone.runOutsideAngular(() => {\n          this.resizerMouseDownListener = this.renderer.listen(this.resizer, 'mousedown', this.onMouseDown.bind(this));\n        });\n      }\n    }\n  }\n  bindDocumentEvents() {\n    this.zone.runOutsideAngular(() => {\n      this.documentMouseMoveListener = this.renderer.listen(this.document, 'mousemove', this.onDocumentMouseMove.bind(this));\n      this.documentMouseUpListener = this.renderer.listen(this.document, 'mouseup', this.onDocumentMouseUp.bind(this));\n    });\n  }\n  unbindDocumentEvents() {\n    if (this.documentMouseMoveListener) {\n      this.documentMouseMoveListener();\n      this.documentMouseMoveListener = null;\n    }\n    if (this.documentMouseUpListener) {\n      this.documentMouseUpListener();\n      this.documentMouseUpListener = null;\n    }\n  }\n  onMouseDown(event) {\n    this.tt.onColumnResizeBegin(event);\n    this.bindDocumentEvents();\n  }\n  onDocumentMouseMove(event) {\n    this.tt.onColumnResize(event);\n  }\n  onDocumentMouseUp(event) {\n    this.tt.onColumnResizeEnd(event, this.el.nativeElement);\n    this.unbindDocumentEvents();\n  }\n  isEnabled() {\n    return this.ttResizableColumnDisabled !== true;\n  }\n  ngOnDestroy() {\n    if (this.resizerMouseDownListener) {\n      this.resizerMouseDownListener();\n      this.resizerMouseDownListener = null;\n    }\n    this.unbindDocumentEvents();\n  }\n}\n_class7 = TTResizableColumn;\n_defineProperty(TTResizableColumn, \"\\u0275fac\", function _class7_Factory(t) {\n  return new (t || _class7)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n});\n_defineProperty(TTResizableColumn, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _class7,\n  selectors: [[\"\", \"ttResizableColumn\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    ttResizableColumnDisabled: \"ttResizableColumnDisabled\"\n  }\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTResizableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[ttResizableColumn]',\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: TreeTable\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    ttResizableColumnDisabled: [{\n      type: Input\n    }]\n  });\n})();\nclass TTReorderableColumn {\n  constructor(document, platformId, renderer, tt, el, zone) {\n    _defineProperty(this, \"document\", void 0);\n    _defineProperty(this, \"platformId\", void 0);\n    _defineProperty(this, \"renderer\", void 0);\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"el\", void 0);\n    _defineProperty(this, \"zone\", void 0);\n    _defineProperty(this, \"ttReorderableColumnDisabled\", void 0);\n    _defineProperty(this, \"dragStartListener\", void 0);\n    _defineProperty(this, \"dragOverListener\", void 0);\n    _defineProperty(this, \"dragEnterListener\", void 0);\n    _defineProperty(this, \"dragLeaveListener\", void 0);\n    _defineProperty(this, \"mouseDownListener\", void 0);\n    this.document = document;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.tt = tt;\n    this.el = el;\n    this.zone = zone;\n  }\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      this.bindEvents();\n    }\n  }\n  bindEvents() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        this.mouseDownListener = this.renderer.listen(this.el.nativeElement, 'mousedown', this.onMouseDown.bind(this));\n        this.dragStartListener = this.renderer.listen(this.el.nativeElement, 'dragstart', this.onDragStart.bind(this));\n        this.dragOverListener = this.renderer.listen(this.el.nativeElement, 'dragover', this.onDragEnter.bind(this));\n        this.dragEnterListener = this.renderer.listen(this.el.nativeElement, 'dragenter', this.onDragEnter.bind(this));\n        this.dragLeaveListener = this.renderer.listen(this.el.nativeElement, 'dragleave', this.onDragLeave.bind(this));\n      });\n    }\n  }\n  unbindEvents() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.mouseDownListener) {\n        this.mouseDownListener();\n        this.mouseDownListener = null;\n      }\n      if (this.dragOverListener) {\n        this.dragOverListener();\n        this.dragOverListener = null;\n      }\n      if (this.dragEnterListener) {\n        this.dragEnterListener();\n        this.dragEnterListener = null;\n      }\n      if (this.dragLeaveListener) {\n        this.dragLeaveListener();\n        this.dragLeaveListener = null;\n      }\n    }\n  }\n  onMouseDown(event) {\n    if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer')) this.el.nativeElement.draggable = false;else this.el.nativeElement.draggable = true;\n  }\n  onDragStart(event) {\n    this.tt.onColumnDragStart(event, this.el.nativeElement);\n  }\n  onDragOver(event) {\n    event.preventDefault();\n  }\n  onDragEnter(event) {\n    this.tt.onColumnDragEnter(event, this.el.nativeElement);\n  }\n  onDragLeave(event) {\n    this.tt.onColumnDragLeave(event);\n  }\n  onDrop(event) {\n    if (this.isEnabled()) {\n      this.tt.onColumnDrop(event, this.el.nativeElement);\n    }\n  }\n  isEnabled() {\n    return this.ttReorderableColumnDisabled !== true;\n  }\n  ngOnDestroy() {\n    this.unbindEvents();\n  }\n}\n_class8 = TTReorderableColumn;\n_defineProperty(TTReorderableColumn, \"\\u0275fac\", function _class8_Factory(t) {\n  return new (t || _class8)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n});\n_defineProperty(TTReorderableColumn, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _class8,\n  selectors: [[\"\", \"ttReorderableColumn\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function _class8_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"drop\", function _class8_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      });\n    }\n  },\n  inputs: {\n    ttReorderableColumnDisabled: \"ttReorderableColumnDisabled\"\n  }\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTReorderableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[ttReorderableColumn]',\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: TreeTable\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    ttReorderableColumnDisabled: [{\n      type: Input\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }]\n  });\n})();\nclass TTSelectableRow {\n  constructor(tt, tableService) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"tableService\", void 0);\n    _defineProperty(this, \"rowNode\", void 0);\n    _defineProperty(this, \"ttSelectableRowDisabled\", void 0);\n    _defineProperty(this, \"selected\", void 0);\n    _defineProperty(this, \"subscription\", void 0);\n    this.tt = tt;\n    this.tableService = tableService;\n    if (this.isEnabled()) {\n      this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n        this.selected = this.tt.isSelected(this.rowNode.node);\n      });\n    }\n  }\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.selected = this.tt.isSelected(this.rowNode.node);\n    }\n  }\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.tt.handleRowClick({\n        originalEvent: event,\n        rowNode: this.rowNode\n      });\n    }\n  }\n  onEnterKey(event) {\n    if (event.which === 13) {\n      this.onClick(event);\n    }\n  }\n  onTouchEnd(event) {\n    if (this.isEnabled()) {\n      this.tt.handleRowTouchEnd(event);\n    }\n  }\n  isEnabled() {\n    return this.ttSelectableRowDisabled !== true;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n_class9 = TTSelectableRow;\n_defineProperty(TTSelectableRow, \"\\u0275fac\", function _class9_Factory(t) {\n  return new (t || _class9)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService));\n});\n_defineProperty(TTSelectableRow, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _class9,\n  selectors: [[\"\", \"ttSelectableRow\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 2,\n  hostBindings: function _class9_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function _class9_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"keydown\", function _class9_keydown_HostBindingHandler($event) {\n        return ctx.onEnterKey($event);\n      })(\"touchend\", function _class9_touchend_HostBindingHandler($event) {\n        return ctx.onTouchEnd($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-highlight\", ctx.selected);\n    }\n  },\n  inputs: {\n    rowNode: [\"ttSelectableRow\", \"rowNode\"],\n    ttSelectableRowDisabled: \"ttSelectableRowDisabled\"\n  }\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTSelectableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[ttSelectableRow]',\n      host: {\n        class: 'p-element',\n        '[class.p-highlight]': 'selected'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }, {\n      type: TreeTableService\n    }];\n  }, {\n    rowNode: [{\n      type: Input,\n      args: ['ttSelectableRow']\n    }],\n    ttSelectableRowDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onEnterKey: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    onTouchEnd: [{\n      type: HostListener,\n      args: ['touchend', ['$event']]\n    }]\n  });\n})();\nclass TTSelectableRowDblClick {\n  constructor(tt, tableService) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"tableService\", void 0);\n    _defineProperty(this, \"rowNode\", void 0);\n    _defineProperty(this, \"ttSelectableRowDisabled\", void 0);\n    _defineProperty(this, \"selected\", void 0);\n    _defineProperty(this, \"subscription\", void 0);\n    this.tt = tt;\n    this.tableService = tableService;\n    if (this.isEnabled()) {\n      this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n        this.selected = this.tt.isSelected(this.rowNode.node);\n      });\n    }\n  }\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.selected = this.tt.isSelected(this.rowNode.node);\n    }\n  }\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.tt.handleRowClick({\n        originalEvent: event,\n        rowNode: this.rowNode\n      });\n    }\n  }\n  isEnabled() {\n    return this.ttSelectableRowDisabled !== true;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n_class10 = TTSelectableRowDblClick;\n_defineProperty(TTSelectableRowDblClick, \"\\u0275fac\", function _class10_Factory(t) {\n  return new (t || _class10)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService));\n});\n_defineProperty(TTSelectableRowDblClick, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _class10,\n  selectors: [[\"\", \"ttSelectableRowDblClick\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 2,\n  hostBindings: function _class10_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"dblclick\", function _class10_dblclick_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-highlight\", ctx.selected);\n    }\n  },\n  inputs: {\n    rowNode: [\"ttSelectableRowDblClick\", \"rowNode\"],\n    ttSelectableRowDisabled: \"ttSelectableRowDisabled\"\n  }\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTSelectableRowDblClick, [{\n    type: Directive,\n    args: [{\n      selector: '[ttSelectableRowDblClick]',\n      host: {\n        class: 'p-element',\n        '[class.p-highlight]': 'selected'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }, {\n      type: TreeTableService\n    }];\n  }, {\n    rowNode: [{\n      type: Input,\n      args: ['ttSelectableRowDblClick']\n    }],\n    ttSelectableRowDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['dblclick', ['$event']]\n    }]\n  });\n})();\nclass TTContextMenuRow {\n  constructor(tt, tableService, el) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"tableService\", void 0);\n    _defineProperty(this, \"el\", void 0);\n    _defineProperty(this, \"rowNode\", void 0);\n    _defineProperty(this, \"ttContextMenuRowDisabled\", void 0);\n    _defineProperty(this, \"selected\", void 0);\n    _defineProperty(this, \"subscription\", void 0);\n    this.tt = tt;\n    this.tableService = tableService;\n    this.el = el;\n    if (this.isEnabled()) {\n      this.subscription = this.tt.tableService.contextMenuSource$.subscribe(node => {\n        this.selected = this.tt.equals(this.rowNode.node, node);\n      });\n    }\n  }\n  onContextMenu(event) {\n    if (this.isEnabled()) {\n      this.tt.handleRowRightClick({\n        originalEvent: event,\n        rowNode: this.rowNode\n      });\n      this.el.nativeElement.focus();\n      event.preventDefault();\n    }\n  }\n  isEnabled() {\n    return this.ttContextMenuRowDisabled !== true;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n_class11 = TTContextMenuRow;\n_defineProperty(TTContextMenuRow, \"\\u0275fac\", function _class11_Factory(t) {\n  return new (t || _class11)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService), i0.ɵɵdirectiveInject(i0.ElementRef));\n});\n_defineProperty(TTContextMenuRow, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _class11,\n  selectors: [[\"\", \"ttContextMenuRow\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 3,\n  hostBindings: function _class11_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"contextmenu\", function _class11_contextmenu_HostBindingHandler($event) {\n        return ctx.onContextMenu($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n      i0.ɵɵclassProp(\"p-highlight-contextmenu\", ctx.selected);\n    }\n  },\n  inputs: {\n    rowNode: [\"ttContextMenuRow\", \"rowNode\"],\n    ttContextMenuRowDisabled: \"ttContextMenuRowDisabled\"\n  }\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTContextMenuRow, [{\n    type: Directive,\n    args: [{\n      selector: '[ttContextMenuRow]',\n      host: {\n        class: 'p-element',\n        '[class.p-highlight-contextmenu]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }, {\n      type: TreeTableService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    rowNode: [{\n      type: Input,\n      args: ['ttContextMenuRow']\n    }],\n    ttContextMenuRowDisabled: [{\n      type: Input\n    }],\n    onContextMenu: [{\n      type: HostListener,\n      args: ['contextmenu', ['$event']]\n    }]\n  });\n})();\nclass TTCheckbox {\n  constructor(tt, tableService, cd) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"tableService\", void 0);\n    _defineProperty(this, \"cd\", void 0);\n    _defineProperty(this, \"disabled\", void 0);\n    _defineProperty(this, \"rowNode\", void 0);\n    _defineProperty(this, \"checked\", void 0);\n    _defineProperty(this, \"focused\", void 0);\n    _defineProperty(this, \"subscription\", void 0);\n    this.tt = tt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.tt.isSelected(this.rowNode.node);\n      this.cd.markForCheck();\n    });\n  }\n  ngOnInit() {\n    this.checked = this.tt.isSelected(this.rowNode.node);\n  }\n  onClick(event) {\n    if (!this.disabled) {\n      this.tt.toggleNodeWithCheckbox({\n        originalEvent: event,\n        rowNode: this.rowNode\n      });\n    }\n    DomHandler.clearSelection();\n  }\n  onFocus() {\n    this.focused = true;\n  }\n  onBlur() {\n    this.focused = false;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n_class12 = TTCheckbox;\n_defineProperty(TTCheckbox, \"\\u0275fac\", function _class12_Factory(t) {\n  return new (t || _class12)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n});\n_defineProperty(TTCheckbox, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class12,\n  selectors: [[\"p-treeTableCheckbox\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    disabled: \"disabled\",\n    rowNode: [\"value\", \"rowNode\"]\n  },\n  decls: 7,\n  vars: 13,\n  consts: [[1, \"p-checkbox\", \"p-component\", 3, \"ngClass\", \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"focus\", \"blur\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [3, \"styleClass\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function _class12_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function _class12_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"input\", 2);\n      i0.ɵɵlistener(\"focus\", function _class12_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function _class12_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵtemplate(5, _class12_ng_container_5_Template, 3, 2, \"ng-container\", 5);\n      i0.ɵɵtemplate(6, _class12_span_6_Template, 2, 5, \"span\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c30, ctx.focused));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(8, _c31, ctx.checked, ctx.focused, ctx.rowNode.node.partialSelected, ctx.disabled));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tt.checkboxIconTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.tt.checkboxIconTemplate);\n    }\n  },\n  dependencies: function () {\n    return [i2.NgClass, i2.NgIf, i2.NgTemplateOutlet, CheckIcon, MinusIcon];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTableCheckbox',\n      template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{ 'p-checkbox-focused': focused }\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" />\n            </div>\n            <div #box [ngClass]=\"{ 'p-checkbox-box': true, 'p-highlight': checked, 'p-focus': focused, 'p-indeterminate': rowNode.node.partialSelected, 'p-disabled': disabled }\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <ng-container *ngIf=\"!tt.checkboxIconTemplate\">\n                    <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"checked\" />\n                    <MinusIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"rowNode.node.partialSelected\" />\n                </ng-container>\n                <span *ngIf=\"tt.checkboxIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"tt.checkboxIconTemplate; context: { $implicit: checked, partialSelected: rowNode.node.partialSelected }\"></ng-template>\n                </span>\n            </div>\n        </div>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }, {\n      type: TreeTableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    rowNode: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})();\nclass TTHeaderCheckbox {\n  constructor(tt, tableService, cd) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"tableService\", void 0);\n    _defineProperty(this, \"cd\", void 0);\n    _defineProperty(this, \"boxViewChild\", void 0);\n    _defineProperty(this, \"checked\", void 0);\n    _defineProperty(this, \"focused\", void 0);\n    _defineProperty(this, \"disabled\", void 0);\n    _defineProperty(this, \"selectionChangeSubscription\", void 0);\n    _defineProperty(this, \"valueChangeSubscription\", void 0);\n    this.tt = tt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.valueChangeSubscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\n      this.checked = this.updateCheckedState();\n    });\n    this.selectionChangeSubscription = this.tt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.updateCheckedState();\n    });\n  }\n  ngOnInit() {\n    this.checked = this.updateCheckedState();\n  }\n  onClick(event, checked) {\n    if (this.tt.value && this.tt.value.length > 0) {\n      this.tt.toggleNodesWithCheckbox(event, !checked);\n    }\n    DomHandler.clearSelection();\n  }\n  onFocus() {\n    this.focused = true;\n  }\n  onBlur() {\n    this.focused = false;\n  }\n  ngOnDestroy() {\n    if (this.selectionChangeSubscription) {\n      this.selectionChangeSubscription.unsubscribe();\n    }\n    if (this.valueChangeSubscription) {\n      this.valueChangeSubscription.unsubscribe();\n    }\n  }\n  updateCheckedState() {\n    this.cd.markForCheck();\n    let checked;\n    const data = this.tt.filteredNodes || this.tt.value;\n    if (data) {\n      for (let node of data) {\n        if (this.tt.isSelected(node)) {\n          checked = true;\n        } else {\n          checked = false;\n          break;\n        }\n      }\n    } else {\n      checked = false;\n    }\n    return checked;\n  }\n}\n_class13 = TTHeaderCheckbox;\n_defineProperty(TTHeaderCheckbox, \"\\u0275fac\", function _class13_Factory(t) {\n  return new (t || _class13)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n});\n_defineProperty(TTHeaderCheckbox, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class13,\n  selectors: [[\"p-treeTableHeaderCheckbox\"]],\n  viewQuery: function _class13_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c32, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.boxViewChild = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  decls: 8,\n  vars: 13,\n  consts: [[1, \"p-checkbox\", \"p-component\", 3, \"ngClass\", \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"cb\", \"\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [4, \"ngIf\"], [\"class\", \"p-checkbox-icon\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [3, \"styleClass\"], [1, \"p-checkbox-icon\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function _class13_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function _class13_Template_div_click_0_listener($event) {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onClick($event, _r0.checked));\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"input\", 2, 3);\n      i0.ɵɵlistener(\"focus\", function _class13_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function _class13_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 4, 5);\n      i0.ɵɵtemplate(6, _class13_ng_container_6_Template, 2, 1, \"ng-container\", 6);\n      i0.ɵɵtemplate(7, _class13_span_7_Template, 2, 4, \"span\", 7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c30, ctx.focused));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", !ctx.tt.value || ctx.tt.value.length === 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(9, _c33, ctx.checked, ctx.focused, !ctx.tt.value || ctx.tt.value.length === 0));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tt.headerCheckboxIconTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.tt.headerCheckboxIconTemplate);\n    }\n  },\n  dependencies: function () {\n    return [i2.NgClass, i2.NgIf, i2.NgTemplateOutlet, CheckIcon];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTHeaderCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTableHeaderCheckbox',\n      template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{ 'p-checkbox-focused': focused }\" (click)=\"onClick($event, cb.checked)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"!tt.value || tt.value.length === 0\" />\n            </div>\n            <div #box [ngClass]=\"{ 'p-checkbox-box': true, 'p-highlight': checked, 'p-focus': focused, 'p-disabled': !tt.value || tt.value.length === 0 }\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <ng-container *ngIf=\"!tt.headerCheckboxIconTemplate\">\n                    <CheckIcon *ngIf=\"checked\" [styleClass]=\"'p-checkbox-icon'\" />\n                </ng-container>\n                <span class=\"p-checkbox-icon\" *ngIf=\"tt.headerCheckboxIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"tt.headerCheckboxIconTemplate; context: { $implicit: checked }\"></ng-template>\n                </span>\n            </div>\n        </div>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }, {\n      type: TreeTableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    boxViewChild: [{\n      type: ViewChild,\n      args: ['box']\n    }]\n  });\n})();\nclass TTEditableColumn {\n  constructor(tt, el, zone) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"el\", void 0);\n    _defineProperty(this, \"zone\", void 0);\n    _defineProperty(this, \"data\", void 0);\n    _defineProperty(this, \"field\", void 0);\n    _defineProperty(this, \"ttEditableColumnDisabled\", void 0);\n    this.tt = tt;\n    this.el = el;\n    this.zone = zone;\n  }\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n    }\n  }\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.tt.editingCellClick = true;\n      if (this.tt.editingCell) {\n        if (this.tt.editingCell !== this.el.nativeElement) {\n          if (!this.tt.isEditingCellValid()) {\n            return;\n          }\n          DomHandler.removeClass(this.tt.editingCell, 'p-cell-editing');\n          this.openCell();\n        }\n      } else {\n        this.openCell();\n      }\n    }\n  }\n  openCell() {\n    this.tt.updateEditingCell(this.el.nativeElement, this.data, this.field);\n    DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n    this.tt.onEditInit.emit({\n      field: this.field,\n      data: this.data\n    });\n    this.tt.editingCellClick = true;\n    this.zone.runOutsideAngular(() => {\n      setTimeout(() => {\n        let focusable = DomHandler.findSingle(this.el.nativeElement, 'input, textarea');\n        if (focusable) {\n          focusable.focus();\n        }\n      }, 50);\n    });\n  }\n  closeEditingCell() {\n    DomHandler.removeClass(this.tt.editingCell, 'p-checkbox-icon');\n    this.tt.editingCell = null;\n    this.tt.unbindDocumentEditListener();\n  }\n  onKeyDown(event) {\n    if (this.isEnabled()) {\n      //enter\n      if (event.keyCode == 13) {\n        if (this.tt.isEditingCellValid()) {\n          DomHandler.removeClass(this.tt.editingCell, 'p-cell-editing');\n          this.closeEditingCell();\n          this.tt.onEditComplete.emit({\n            field: this.field,\n            data: this.data\n          });\n        }\n        event.preventDefault();\n      }\n      //escape\n      else if (event.keyCode == 27) {\n        if (this.tt.isEditingCellValid()) {\n          DomHandler.removeClass(this.tt.editingCell, 'p-cell-editing');\n          this.closeEditingCell();\n          this.tt.onEditCancel.emit({\n            field: this.field,\n            data: this.data\n          });\n        }\n        event.preventDefault();\n      }\n      //tab\n      else if (event.keyCode == 9) {\n        this.tt.onEditComplete.emit({\n          field: this.field,\n          data: this.data\n        });\n        if (event.shiftKey) this.moveToPreviousCell(event);else this.moveToNextCell(event);\n      }\n    }\n  }\n  findCell(element) {\n    if (element) {\n      let cell = element;\n      while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n        cell = cell.parentElement;\n      }\n      return cell;\n    } else {\n      return null;\n    }\n  }\n  moveToPreviousCell(event) {\n    let currentCell = this.findCell(event.target);\n    let row = currentCell.parentElement;\n    let targetCell = this.findPreviousEditableColumn(currentCell);\n    if (targetCell) {\n      DomHandler.invokeElementMethod(targetCell, 'click');\n      event.preventDefault();\n    }\n  }\n  moveToNextCell(event) {\n    let currentCell = this.findCell(event.target);\n    let row = currentCell.parentElement;\n    let targetCell = this.findNextEditableColumn(currentCell);\n    if (targetCell) {\n      DomHandler.invokeElementMethod(targetCell, 'click');\n      event.preventDefault();\n    }\n  }\n  findPreviousEditableColumn(cell) {\n    let prevCell = cell.previousElementSibling;\n    if (!prevCell) {\n      let previousRow = cell.parentElement ? cell.parentElement.previousElementSibling : null;\n      if (previousRow) {\n        prevCell = previousRow.lastElementChild;\n      }\n    }\n    if (prevCell) {\n      if (DomHandler.hasClass(prevCell, 'p-editable-column')) return prevCell;else return this.findPreviousEditableColumn(prevCell);\n    } else {\n      return null;\n    }\n  }\n  findNextEditableColumn(cell) {\n    let nextCell = cell.nextElementSibling;\n    if (!nextCell) {\n      let nextRow = cell.parentElement ? cell.parentElement.nextElementSibling : null;\n      if (nextRow) {\n        nextCell = nextRow.firstElementChild;\n      }\n    }\n    if (nextCell) {\n      if (DomHandler.hasClass(nextCell, 'p-editable-column')) return nextCell;else return this.findNextEditableColumn(nextCell);\n    } else {\n      return null;\n    }\n  }\n  isEnabled() {\n    return this.ttEditableColumnDisabled !== true;\n  }\n}\n_class14 = TTEditableColumn;\n_defineProperty(TTEditableColumn, \"\\u0275fac\", function _class14_Factory(t) {\n  return new (t || _class14)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n});\n_defineProperty(TTEditableColumn, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _class14,\n  selectors: [[\"\", \"ttEditableColumn\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function _class14_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function _class14_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"keydown\", function _class14_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    data: [\"ttEditableColumn\", \"data\"],\n    field: [\"ttEditableColumnField\", \"field\"],\n    ttEditableColumnDisabled: \"ttEditableColumnDisabled\"\n  }\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTEditableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[ttEditableColumn]',\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: ['ttEditableColumn']\n    }],\n    field: [{\n      type: Input,\n      args: ['ttEditableColumnField']\n    }],\n    ttEditableColumnDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\nclass TreeTableCellEditor {\n  constructor(tt, editableColumn) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"editableColumn\", void 0);\n    _defineProperty(this, \"templates\", void 0);\n    _defineProperty(this, \"inputTemplate\", void 0);\n    _defineProperty(this, \"outputTemplate\", void 0);\n    this.tt = tt;\n    this.editableColumn = editableColumn;\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'input':\n          this.inputTemplate = item.template;\n          break;\n        case 'output':\n          this.outputTemplate = item.template;\n          break;\n      }\n    });\n  }\n}\n_class15 = TreeTableCellEditor;\n_defineProperty(TreeTableCellEditor, \"\\u0275fac\", function _class15_Factory(t) {\n  return new (t || _class15)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TTEditableColumn));\n});\n_defineProperty(TreeTableCellEditor, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class15,\n  selectors: [[\"p-treeTableCellEditor\"]],\n  contentQueries: function _class15_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\"]],\n  template: function _class15_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, _class15_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, _class15_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.tt.editingCell === ctx.editableColumn.el.nativeElement);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tt.editingCell || ctx.tt.editingCell !== ctx.editableColumn.el.nativeElement);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeTableCellEditor, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTableCellEditor',\n      template: `\n        <ng-container *ngIf=\"tt.editingCell === editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!tt.editingCell || tt.editingCell !== editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }, {\n      type: TTEditableColumn\n    }];\n  }, {\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass TTRow {\n  constructor(tt, el, zone) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"el\", void 0);\n    _defineProperty(this, \"zone\", void 0);\n    _defineProperty(this, \"rowNode\", void 0);\n    this.tt = tt;\n    this.el = el;\n    this.zone = zone;\n  }\n  onKeyDown(event) {\n    switch (event.which) {\n      //down arrow\n      case 40:\n        let nextRow = this.el.nativeElement.nextElementSibling;\n        if (nextRow) {\n          nextRow.focus();\n        }\n        event.preventDefault();\n        break;\n      //down arrow\n      case 38:\n        let prevRow = this.el.nativeElement.previousElementSibling;\n        if (prevRow) {\n          prevRow.focus();\n        }\n        event.preventDefault();\n        break;\n      //left arrow\n      case 37:\n        if (this.rowNode.node.expanded) {\n          this.tt.toggleRowIndex = DomHandler.index(this.el.nativeElement);\n          this.rowNode.node.expanded = false;\n          this.tt.onNodeCollapse.emit({\n            originalEvent: event,\n            node: this.rowNode.node\n          });\n          this.tt.updateSerializedValue();\n          this.tt.tableService.onUIUpdate(this.tt.value);\n          this.restoreFocus();\n        }\n        break;\n      //right arrow\n      case 39:\n        if (!this.rowNode.node.expanded) {\n          this.tt.toggleRowIndex = DomHandler.index(this.el.nativeElement);\n          this.rowNode.node.expanded = true;\n          this.tt.onNodeExpand.emit({\n            originalEvent: event,\n            node: this.rowNode.node\n          });\n          this.tt.updateSerializedValue();\n          this.tt.tableService.onUIUpdate(this.tt.value);\n          this.restoreFocus();\n        }\n        break;\n    }\n  }\n  restoreFocus() {\n    this.zone.runOutsideAngular(() => {\n      setTimeout(() => {\n        let row = DomHandler.findSingle(this.tt.containerViewChild?.nativeElement, '.p-treetable-tbody').children[this.tt.toggleRowIndex];\n        if (row) {\n          row.focus();\n        }\n      }, 25);\n    });\n  }\n}\n_class16 = TTRow;\n_defineProperty(TTRow, \"\\u0275fac\", function _class16_Factory(t) {\n  return new (t || _class16)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n});\n_defineProperty(TTRow, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _class16,\n  selectors: [[\"\", \"ttRow\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 1,\n  hostBindings: function _class16_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function _class16_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", \"0\");\n    }\n  },\n  inputs: {\n    rowNode: [\"ttRow\", \"rowNode\"]\n  }\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTRow, [{\n    type: Directive,\n    args: [{\n      selector: '[ttRow]',\n      host: {\n        class: 'p-element',\n        '[attr.tabindex]': '\"0\"'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    rowNode: [{\n      type: Input,\n      args: ['ttRow']\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\nclass TreeTableToggler {\n  constructor(tt) {\n    _defineProperty(this, \"tt\", void 0);\n    _defineProperty(this, \"rowNode\", void 0);\n    this.tt = tt;\n  }\n  onClick(event) {\n    this.rowNode.node.expanded = !this.rowNode.node.expanded;\n    if (this.rowNode.node.expanded) {\n      this.tt.onNodeExpand.emit({\n        originalEvent: event,\n        node: this.rowNode.node\n      });\n    } else {\n      this.tt.onNodeCollapse.emit({\n        originalEvent: event,\n        node: this.rowNode.node\n      });\n    }\n    this.tt.updateSerializedValue();\n    this.tt.tableService.onUIUpdate(this.tt.value);\n    event.preventDefault();\n  }\n}\n_class17 = TreeTableToggler;\n_defineProperty(TreeTableToggler, \"\\u0275fac\", function _class17_Factory(t) {\n  return new (t || _class17)(i0.ɵɵdirectiveInject(TreeTable));\n});\n_defineProperty(TreeTableToggler, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class17,\n  selectors: [[\"p-treeTableToggler\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    rowNode: \"rowNode\"\n  },\n  decls: 3,\n  vars: 9,\n  consts: [[\"type\", \"button\", \"tabindex\", \"-1\", \"pRipple\", \"\", 1, \"p-treetable-toggler\", \"p-link\", 3, \"click\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function _class17_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function _class17_Template_button_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵtemplate(1, _class17_ng_container_1_Template, 3, 2, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, _class17_2_Template, 1, 0, null, 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"visibility\", ctx.rowNode.node.leaf === false || ctx.rowNode.node.children && ctx.rowNode.node.children.length ? \"visible\" : \"hidden\")(\"margin-left\", ctx.rowNode.level * 16 + \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tt.togglerIconTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.tt.togglerIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c7, ctx.rowNode.node.expanded));\n    }\n  },\n  dependencies: function () {\n    return [i2.NgIf, i2.NgTemplateOutlet, i5.Ripple, ChevronDownIcon, ChevronRightIcon];\n  },\n  encapsulation: 2\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeTableToggler, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTableToggler',\n      template: `\n        <button\n            type=\"button\"\n            class=\"p-treetable-toggler p-link\"\n            (click)=\"onClick($event)\"\n            tabindex=\"-1\"\n            pRipple\n            [style.visibility]=\"rowNode.node.leaf === false || (rowNode.node.children && rowNode.node.children.length) ? 'visible' : 'hidden'\"\n            [style.marginLeft]=\"rowNode.level * 16 + 'px'\"\n        >\n            <ng-container *ngIf=\"!tt.togglerIconTemplate\">\n                <ChevronDownIcon *ngIf=\"rowNode.node.expanded\" />\n                <ChevronRightIcon *ngIf=\"!rowNode.node.expanded\" />\n            </ng-container>\n            <ng-template *ngTemplateOutlet=\"tt.togglerIconTemplate; context: { $implicit: rowNode.node.expanded }\"></ng-template>\n        </button>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: TreeTable\n    }];\n  }, {\n    rowNode: [{\n      type: Input\n    }]\n  });\n})();\nclass TreeTableModule {}\n_class18 = TreeTableModule;\n_defineProperty(TreeTableModule, \"\\u0275fac\", function _class18_Factory(t) {\n  return new (t || _class18)();\n});\n_defineProperty(TreeTableModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: _class18\n}));\n_defineProperty(TreeTableModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, PaginatorModule, RippleModule, ScrollerModule, SpinnerIcon, ArrowDownIcon, ArrowUpIcon, SortAltIcon, SortAmountUpAltIcon, SortAmountDownIcon, CheckIcon, MinusIcon, ChevronDownIcon, ChevronRightIcon, SharedModule, ScrollerModule]\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeTableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, PaginatorModule, RippleModule, ScrollerModule, SpinnerIcon, ArrowDownIcon, ArrowUpIcon, SortAltIcon, SortAmountUpAltIcon, SortAmountDownIcon, CheckIcon, MinusIcon, ChevronDownIcon, ChevronRightIcon],\n      exports: [TreeTable, SharedModule, TreeTableToggler, TTSortableColumn, TTSortIcon, TTResizableColumn, TTRow, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor, ScrollerModule],\n      declarations: [TreeTable, TreeTableToggler, TTScrollableView, TTBody, TTSortableColumn, TTSortIcon, TTResizableColumn, TTRow, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TTBody, TTCheckbox, TTContextMenuRow, TTEditableColumn, TTHeaderCheckbox, TTReorderableColumn, TTResizableColumn, TTRow, TTScrollableView, TTSelectableRow, TTSelectableRowDblClick, TTSortIcon, TTSortableColumn, TreeTable, TreeTableCellEditor, TreeTableModule, TreeTableService, TreeTableToggler };","map":{"version":3,"names":["i2","DOCUMENT","isPlatformBrowser","CommonModule","i0","Injectable","EventEmitter","Component","ViewEncapsulation","Inject","Input","Output","ViewChild","ContentChildren","PLATFORM_ID","Directive","HostListener","ChangeDetectionStrategy","NgModule","i1","PrimeTemplate","SharedModule","DomHandler","i3","PaginatorModule","i5","RippleModule","i4","ScrollerModule","ObjectUtils","Subject","SortAmountDownIcon","ChevronRightIcon","ArrowDownIcon","ArrowUpIcon","CheckIcon","ChevronDownIcon","MinusIcon","SortAltIcon","SortAmountUpAltIcon","SpinnerIcon","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_class2_div_2_i_2_Template","rf","ctx","ɵɵelement","ctx_r11","ɵɵnextContext","ɵɵclassMap","loadingIcon","_class2_div_2_ng_container_3_SpinnerIcon_1_Template","ɵɵproperty","_class2_div_2_ng_container_3_span_2_1_ng_template_0_Template","_class2_div_2_ng_container_3_span_2_1_Template","ɵɵtemplate","_class2_div_2_ng_container_3_span_2_Template","ɵɵelementStart","ɵɵelementEnd","ctx_r14","ɵɵadvance","loadingIconTemplate","_class2_div_2_ng_container_3_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r12","_class2_div_2_Template","ctx_r1","_class2_div_3_ng_container_1_Template","ɵɵelementContainer","_class2_div_3_Template","ctx_r2","captionTemplate","_class2_p_paginator_4_1_ng_template_0_ng_container_0_Template","_class2_p_paginator_4_1_ng_template_0_Template","ctx_r22","paginatorFirstPageLinkIconTemplate","_class2_p_paginator_4_1_Template","_class2_p_paginator_4_2_ng_template_0_ng_container_0_Template","_class2_p_paginator_4_2_ng_template_0_Template","ctx_r24","paginatorPreviousPageLinkIconTemplate","_class2_p_paginator_4_2_Template","_class2_p_paginator_4_3_ng_template_0_ng_container_0_Template","_class2_p_paginator_4_3_ng_template_0_Template","ctx_r26","paginatorLastPageLinkIconTemplate","_class2_p_paginator_4_3_Template","_class2_p_paginator_4_4_ng_template_0_ng_container_0_Template","_class2_p_paginator_4_4_ng_template_0_Template","ctx_r28","paginatorNextPageLinkIconTemplate","_class2_p_paginator_4_4_Template","_class2_p_paginator_4_Template","_r31","ɵɵgetCurrentView","ɵɵlistener","_class2_p_paginator_4_Template_p_paginator_onPageChange_0_listener","$event","ɵɵrestoreView","ctx_r30","ɵɵresetView","onPageChange","ctx_r3","rows","first","totalRecords","pageLinks","alwaysShowPaginator","rowsPerPageOptions","paginatorLeftTemplate","paginatorRightTemplate","paginatorDropdownAppendTo","currentPageReportTemplate","showFirstLastIcon","paginatorDropdownItemTemplate","showCurrentPageReport","showJumpToPageDropdown","showPageLinks","_class2_div_5_ng_container_3_Template","_class2_div_5_ng_container_5_Template","_class2_div_5_ng_container_8_Template","_c7","a0","$implicit","_class2_div_5_Template","ctx_r4","tableStyleClass","tableStyle","colGroupTemplate","ɵɵpureFunction1","columns","headerTemplate","bodyTemplate","footerTemplate","_c8","width","_class2_div_6_div_1_Template","ctx_r36","frozenColumns","frozenWidth","scrollHeight","_c9","a1","left","_class2_div_6_Template","ctx_r5","frozenBodyTemplate","ɵɵpureFunction2","_class2_p_paginator_7_1_ng_template_0_ng_container_0_Template","_class2_p_paginator_7_1_ng_template_0_Template","ctx_r43","_class2_p_paginator_7_1_Template","_class2_p_paginator_7_2_ng_template_0_ng_container_0_Template","_class2_p_paginator_7_2_ng_template_0_Template","ctx_r45","_class2_p_paginator_7_2_Template","_class2_p_paginator_7_3_ng_template_0_ng_container_0_Template","_class2_p_paginator_7_3_ng_template_0_Template","ctx_r47","_class2_p_paginator_7_3_Template","_class2_p_paginator_7_4_ng_template_0_ng_container_0_Template","_class2_p_paginator_7_4_ng_template_0_Template","ctx_r49","_class2_p_paginator_7_4_Template","_class2_p_paginator_7_Template","_r52","_class2_p_paginator_7_Template_p_paginator_onPageChange_0_listener","ctx_r51","ctx_r6","_class2_div_8_ng_container_1_Template","_class2_div_8_Template","ctx_r7","summaryTemplate","_class2_div_9_Template","_class2_span_10_ArrowDownIcon_2_Template","_class2_span_10_3_ng_template_0_Template","_class2_span_10_3_Template","_class2_span_10_Template","ctx_r9","reorderIndicatorUpIconTemplate","_class2_span_11_ArrowUpIcon_2_Template","_class2_span_11_3_ng_template_0_Template","_class2_span_11_3_Template","_class2_span_11_Template","ctx_r10","reorderIndicatorDownIconTemplate","_c10","a2","a3","a4","a5","_c11","_class3_ng_template_0_ng_container_0_ng_container_1_Template","_c12","node","rowData","_class3_ng_template_0_ng_container_0_Template","serializedNode_r2","template","ɵɵpureFunction4","data","_class3_ng_template_0_Template","visible","_class3_ng_container_1_ng_container_1_Template","_c13","frozen","_class3_ng_container_1_Template","tt","emptyMessageTemplate","_c14","_c15","_c16","_c17","_c18","_c19","_c20","_c21","_c22","_c23","_class4_ng_container_5_Template","_class4_ng_container_7_Template","_class4_p_scroller_8_ng_template_2_ng_container_0_Template","_c24","options","_class4_p_scroller_8_ng_template_2_Template","items_r12","scrollerOptions_r13","_r6","ɵɵreference","_class4_p_scroller_8_ng_container_3_ng_template_1_ng_container_0_Template","_c25","_class4_p_scroller_8_ng_container_3_ng_template_1_Template","scrollerOptions_r16","ctx_r15","loaderTemplate","_class4_p_scroller_8_ng_container_3_Template","_c26","height","_class4_p_scroller_8_Template","_r19","_class4_p_scroller_8_Template_p_scroller_onLazyLoad_0_listener","ctx_r18","onLazyItemLoad","ɵɵstyleMap","undefined","serializedValue","virtualScrollItemSize","_virtualRowHeight","lazy","virtualScrollOptions","_class4_ng_container_9_ng_container_3_Template","_c27","_c28","_class4_ng_container_9_Template","ɵɵpureFunction0","_class4_ng_template_10_ng_container_2_Template","_class4_ng_template_10_div_4_Template","_class4_ng_template_10_Template","items_r22","scrollerOptions_r23","contentStyle","contentStyleClass","frozenColGroupTemplate","_class4_div_12_ng_container_5_Template","_class4_div_12_ng_container_7_Template","_class4_div_12_Template","ctx_r8","frozenFooterTemplate","_class6_ng_container_0_SortAltIcon_1_Template","_class6_ng_container_0_SortAmountUpAltIcon_2_Template","_class6_ng_container_0_SortAmountDownIcon_3_Template","_class6_ng_container_0_Template","ctx_r0","sortOrder","_class6_span_1_1_ng_template_0_Template","_class6_span_1_1_Template","_class6_span_1_Template","sortIconTemplate","_class12_ng_container_5_CheckIcon_1_Template","_class12_ng_container_5_MinusIcon_2_Template","_class12_ng_container_5_Template","checked","rowNode","partialSelected","_class12_span_6_1_ng_template_0_Template","_class12_span_6_1_Template","_c29","_class12_span_6_Template","checkboxIconTemplate","_c30","_c31","_c32","_class13_ng_container_6_CheckIcon_1_Template","_class13_ng_container_6_Template","_class13_span_7_1_ng_template_0_Template","_class13_span_7_1_Template","_class13_span_7_Template","headerCheckboxIconTemplate","_c33","_class15_ng_container_0_ng_container_1_Template","_class15_ng_container_0_Template","inputTemplate","_class15_ng_container_1_ng_container_1_Template","_class15_ng_container_1_Template","outputTemplate","_class17_ng_container_1_ChevronDownIcon_1_Template","_class17_ng_container_1_ChevronRightIcon_2_Template","_class17_ng_container_1_Template","expanded","_class17_2_ng_template_0_Template","_class17_2_Template","TreeTableService","constructor","_defineProperty","sortSource","asObservable","selectionSource","contextMenuSource","uiUpdateSource","totalRecordsSource","onSort","sortMeta","next","onSelectionChange","onContextMenu","onUIUpdate","value","onTotalRecordsChange","_class","_class_Factory","t","ɵɵdefineInjectable","token","factory","ɵfac","ngDevMode","ɵsetClassMetadata","type","TreeTable","_totalRecords","val","tableService","sortField","_sortField","_sortOrder","multiSortMeta","_multiSortMeta","selection","_selection","_value","virtualRowHeight","console","warn","ngOnInit","lazyLoadOnInit","virtualScroll","onLazyLoad","emit","createLazyLoadMetadata","initialized","ngAfterContentInit","templates","forEach","item","getType","frozenHeaderTemplate","togglerIconTemplate","document","renderer","el","cd","zone","filterService","index","ngOnChanges","simpleChange","currentValue","length","sortMode","sortSingle","sortMultiple","hasFilter","_filter","updateSerializedValue","preventSelectionSetterPropagation","updateSelectionKeys","paginator","serializePageNodes","serializeNodes","filteredNodes","parent","nodes","level","push","children","i","dataKey","selectionKeys","Array","isArray","String","resolveFieldData","event","onPage","scrollable","resetScrollTop","sort","originalEvent","field","defaultSortOrder","resetPageOnSort","metaKey","ctrlKey","getSortMeta","order","sortNodes","customSort","sortFunction","mode","node1","node2","value1","value2","result","localeCompare","numeric","sortMultipleNodes","multisortmeta","multisortField","isEmpty","isSorted","sorted","filters","globalFilter","forceUpdate","detectChanges","last","scrollToVirtualIndex","scrollTo","top","scrollableViewChild","scrollableFrozenViewChild","getBlockableElement","nativeElement","onColumnResizeBegin","containerLeft","getOffset","containerViewChild","lastResizerHelperX","pageX","scrollLeft","preventDefault","onColumnResize","addClass","resizeHelperViewChild","style","offsetHeight","display","onColumnResizeEnd","column","delta","offsetLeft","columnWidth","offsetWidth","newColumnWidth","minWidth","parseInt","columnResizeMode","nextColumn","nextElementSibling","offsetParent","nextColumnWidth","nextColumnMinWidth","scrollableView","findParentScrollableView","scrollableBodyTable","findSingle","scrollableHeaderTable","scrollableFooterTable","resizeColumnIndex","resizeColGroup","scrollableBody","scrollableHeader","scrollableFooter","scrollableBodyTableWidth","scrollableHeaderTableWidth","isContainerInViewport","setWidth","container","table","calculateScrollbarWidth","tableViewChild","containerWidth","onColResize","element","removeClass","parentElement","hasClass","colGroup","nodeName","col","nextCol","onColumnDragStart","columnElement","reorderIconWidth","getHiddenElementOuterWidth","reorderIndicatorUpViewChild","reorderIconHeight","getHiddenElementOuterHeight","reorderIndicatorDownViewChild","draggedColumn","dataTransfer","setData","onColumnDragEnter","dropHeader","reorderableColumns","containerOffset","dropHeaderOffset","targetLeft","targetTop","columnCenter","Math","ceil","dropPosition","dropEffect","onColumnDragLeave","onColumnDrop","dropColumn","dragIndex","indexWithinGroup","dropIndex","allowDrop","reorderArray","onColReorder","draggable","handleRowClick","targetNode","target","selectionMode","selected","isSelected","metaSelection","rowTouched","metaKeySelection","dataKeyValue","keyboardEvent","isSingleSelectionMode","selectionChange","selectionIndex","findIndexInSelection","filter","onNodeUnselect","isMultipleSelectionMode","onNodeSelect","rowIndex","handleRowTouchEnd","handleRowRightClick","contextMenu","contextMenuSelectionMode","contextMenuSelection","contextMenuSelectionChange","onContextMenuSelect","show","toggleNodeWithCheckbox","propagateSelectionDown","propagateSelectionUp","toggleNodesWithCheckbox","check","slice","onHeaderCheckboxToggle","select","selectedChildCount","childPartialSelected","child","equals","compareSelectionBy","matchMode","filterTimeout","clearTimeout","isFilterBlank","setTimeout","filterDelay","filterGlobal","trim","globalFilterFieldsArray","globalFilterFields","Error","isStrictMode","filterMode","isValueChanged","copyNode","localMatch","globalMatch","paramsWithoutNode","prop","hasOwnProperty","filterMeta","filterField","filterValue","filterMatchMode","filterConstraint","findFilteredNodes","isFilterMatched","j","copyNodeForGlobal","matches","filteredValue","onFilter","matched","childNodes","childNode","copyChildNode","filterOptions","dataFieldValue","filterLocale","isNodeLeaf","leaf","empty","reset","updateEditingCell","cell","editingCell","editingCellData","editingCellField","bindDocumentEditListener","isEditingCellValid","find","documentEditListener","listen","editingCellClick","onEditComplete","unbindDocumentEditListener","ngOnDestroy","_class2","_class2_Factory","ɵɵdirectiveInject","Renderer2","ElementRef","ChangeDetectorRef","NgZone","FilterService","ɵɵdefineComponent","selectors","contentQueries","_class2_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","_class2_Query","ɵɵviewQuery","hostAttrs","inputs","styleClass","autoLayout","paginatorPosition","rowHover","loading","showLoader","virtualScrollDelay","resizableColumns","rowTrackBy","outputs","onNodeExpand","onNodeCollapse","onEditInit","onEditCancel","features","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","decls","vars","consts","_class2_Template","ɵɵpureFunction5","dependencies","NgClass","NgIf","NgTemplateOutlet","NgStyle","Paginator","TTScrollableView","TTBody","styles","encapsulation","args","selector","providers","None","host","class","Document","decorators","treeTableService","subscription","uiUpdateSource$","subscribe","getScrollerOption","option","scrollerOptions","getRowIndex","getItemOptions","unsubscribe","_class3","_class3_Factory","serializedNodes","attrs","_class3_Template","NgForOf","_scrollHeight","includes","log","platformId","ngAfterViewInit","frozenView","previousElementSibling","frozenSiblingBody","scrollBarWidth","scrollHeaderBoxViewChild","paddingRight","scrollFooterBoxViewChild","scrollableAlignerViewChild","calculateScrollbarHeight","bindEvents","runOutsideAngular","scrollHeaderViewChild","headerScrollListener","onHeaderScroll","bind","scrollFooterViewChild","footerScrollListener","onFooterScroll","bodyScrollListener","scroller","getElementRef","onBodyScroll","scrollBodyViewChild","unbindEvents","preventBodyScrollPropagation","marginLeft","scrollTop","scrollToIndex","_class4","_class4_Factory","_class4_Query","scrollTableViewChild","scrollLoadingTableViewChild","_class4_Template","ɵɵtemplateRefExtractor","Scroller","TTSortableColumn","isEnabled","sortSource$","updateSortState","onClick","clearSelection","onEnterKey","ttSortableColumnDisabled","_class5","_class5_Factory","ɵɵdefineDirective","hostVars","hostBindings","_class5_HostBindings","_class5_click_HostBindingHandler","_class5_keydown_enter_HostBindingHandler","ɵɵattribute","ɵɵclassProp","TTSortIcon","markForCheck","_class6","_class6_Factory","ariaLabelDesc","ariaLabelAsc","_class6_Template","changeDetection","OnPush","TTResizableColumn","resizer","createElement","appendChild","resizerMouseDownListener","onMouseDown","bindDocumentEvents","documentMouseMoveListener","onDocumentMouseMove","documentMouseUpListener","onDocumentMouseUp","unbindDocumentEvents","ttResizableColumnDisabled","_class7","_class7_Factory","TTReorderableColumn","mouseDownListener","dragStartListener","onDragStart","dragOverListener","onDragEnter","dragEnterListener","dragLeaveListener","onDragLeave","onDragOver","onDrop","ttReorderableColumnDisabled","_class8","_class8_Factory","_class8_HostBindings","_class8_drop_HostBindingHandler","TTSelectableRow","selectionSource$","which","onTouchEnd","ttSelectableRowDisabled","_class9","_class9_Factory","_class9_HostBindings","_class9_click_HostBindingHandler","_class9_keydown_HostBindingHandler","_class9_touchend_HostBindingHandler","TTSelectableRowDblClick","_class10","_class10_Factory","_class10_HostBindings","_class10_dblclick_HostBindingHandler","TTContextMenuRow","contextMenuSource$","focus","ttContextMenuRowDisabled","_class11","_class11_Factory","_class11_HostBindings","_class11_contextmenu_HostBindingHandler","TTCheckbox","disabled","onFocus","focused","onBlur","_class12","_class12_Factory","_class12_Template","_class12_Template_div_click_0_listener","_class12_Template_input_focus_2_listener","_class12_Template_input_blur_2_listener","TTHeaderCheckbox","valueChangeSubscription","updateCheckedState","selectionChangeSubscription","_class13","_class13_Factory","_class13_Query","boxViewChild","_class13_Template","_r7","_class13_Template_div_click_0_listener","_r0","_class13_Template_input_focus_2_listener","_class13_Template_input_blur_2_listener","ɵɵpureFunction3","TTEditableColumn","openCell","focusable","closeEditingCell","onKeyDown","keyCode","shiftKey","moveToPreviousCell","moveToNextCell","findCell","currentCell","row","targetCell","findPreviousEditableColumn","invokeElementMethod","findNextEditableColumn","prevCell","previousRow","lastElementChild","nextCell","nextRow","firstElementChild","ttEditableColumnDisabled","_class14","_class14_Factory","_class14_HostBindings","_class14_click_HostBindingHandler","_class14_keydown_HostBindingHandler","TreeTableCellEditor","editableColumn","_class15","_class15_Factory","_class15_ContentQueries","_class15_Template","TTRow","prevRow","toggleRowIndex","restoreFocus","_class16","_class16_Factory","_class16_HostBindings","_class16_keydown_HostBindingHandler","TreeTableToggler","_class17","_class17_Factory","_class17_Template","_class17_Template_button_click_0_listener","ɵɵstyleProp","Ripple","TreeTableModule","_class18","_class18_Factory","ɵɵdefineNgModule","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/var/www/gabriel/angular/node_modules/primeng/fesm2022/primeng-treetable.mjs"],"sourcesContent":["import * as i2 from '@angular/common';\nimport { DOCUMENT, isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewEncapsulation, Inject, Input, Output, ViewChild, ContentChildren, PLATFORM_ID, Directive, HostListener, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport * as i3 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport * as i5 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i4 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport { ObjectUtils } from 'primeng/utils';\nimport { Subject } from 'rxjs';\nimport { SortAmountDownIcon } from 'primeng/icons/sortamountdown';\nimport { ChevronRightIcon } from 'primeng/icons/chevronright';\nimport { ArrowDownIcon } from 'primeng/icons/arrowdown';\nimport { ArrowUpIcon } from 'primeng/icons/arrowup';\nimport { CheckIcon } from 'primeng/icons/check';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nimport { MinusIcon } from 'primeng/icons/minus';\nimport { SortAltIcon } from 'primeng/icons/sortalt';\nimport { SortAmountUpAltIcon } from 'primeng/icons/sortamountupalt';\nimport { SpinnerIcon } from 'primeng/icons/spinner';\n\nclass TreeTableService {\n    sortSource = new Subject();\n    selectionSource = new Subject();\n    contextMenuSource = new Subject();\n    uiUpdateSource = new Subject();\n    totalRecordsSource = new Subject();\n    sortSource$ = this.sortSource.asObservable();\n    selectionSource$ = this.selectionSource.asObservable();\n    contextMenuSource$ = this.contextMenuSource.asObservable();\n    uiUpdateSource$ = this.uiUpdateSource.asObservable();\n    totalRecordsSource$ = this.totalRecordsSource.asObservable();\n    onSort(sortMeta) {\n        this.sortSource.next(sortMeta);\n    }\n    onSelectionChange() {\n        this.selectionSource.next(null);\n    }\n    onContextMenu(node) {\n        this.contextMenuSource.next(node);\n    }\n    onUIUpdate(value) {\n        this.uiUpdateSource.next(value);\n    }\n    onTotalRecordsChange(value) {\n        this.totalRecordsSource.next(value);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTableService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTableService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTableService, decorators: [{\n            type: Injectable\n        }] });\n/**\n * TreeTable is used to display hierarchical data in tabular format.\n * @group Components\n */\nclass TreeTable {\n    document;\n    renderer;\n    el;\n    cd;\n    zone;\n    tableService;\n    filterService;\n    /**\n     * An array of objects to represent dynamic columns.\n     * @group Props\n     */\n    columns;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Inline style of the table.\n     * @group Props\n     */\n    tableStyle;\n    /**\n     * Style class of the table.\n     * @group Props\n     */\n    tableStyleClass;\n    /**\n     * Whether the cell widths scale according to their content or not.\n     * @group Props\n     */\n    autoLayout;\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    lazy = false;\n    /**\n     * Whether to call lazy loading on initialization.\n     * @group Props\n     */\n    lazyLoadOnInit = true;\n    /**\n     * When specified as true, enables the pagination.\n     * @group Props\n     */\n    paginator;\n    /**\n     * Number of rows to display per page.\n     * @group Props\n     */\n    rows;\n    /**\n     * Index of the first row to be displayed.\n     * @group Props\n     */\n    first = 0;\n    /**\n     * Number of page links to display in paginator.\n     * @group Props\n     */\n    pageLinks = 5;\n    /**\n     * Array of integer/object values to display inside rows per page dropdown of paginator\n     * @group Props\n     */\n    rowsPerPageOptions;\n    /**\n     * Whether to show it even there is only one page.\n     * @group Props\n     */\n    alwaysShowPaginator = true;\n    /**\n     * Position of the paginator.\n     * @group Props\n     */\n    paginatorPosition = 'bottom';\n    /**\n     * Target element to attach the paginator dropdown overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    paginatorDropdownAppendTo;\n    /**\n     * Template of the current page report element. Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n     * @group Props\n     */\n    currentPageReportTemplate = '{currentPage} of {totalPages}';\n    /**\n     * Whether to display current page report.\n     * @group Props\n     */\n    showCurrentPageReport;\n    /**\n     * Whether to display a dropdown to navigate to any page.\n     * @group Props\n     */\n    showJumpToPageDropdown;\n    /**\n     * When enabled, icons are displayed on paginator to go first and last page.\n     * @group Props\n     */\n    showFirstLastIcon = true;\n    /**\n     * Whether to show page links.\n     * @group Props\n     */\n    showPageLinks = true;\n    /**\n     * Sort order to use when an unsorted column gets sorted by user interaction.\n     * @group Props\n     */\n    defaultSortOrder = 1;\n    /**\n     * Defines whether sorting works on single column or on multiple columns.\n     * @group Props\n     */\n    sortMode = 'single';\n    /**\n     * When true, resets paginator to first page after sorting.\n     * @group Props\n     */\n    resetPageOnSort = true;\n    /**\n     * Whether to use the default sorting or a custom one using sortFunction.\n     * @group Props\n     */\n    customSort;\n    /**\n     * Specifies the selection mode, valid values are \"single\" and \"multiple\".\n     * @group Props\n     */\n    selectionMode;\n    /**\n     * Selected row with a context menu.\n     * @group Props\n     */\n    contextMenuSelection;\n    /**\n     * Mode of the contet menu selection.\n     * @group Props\n     */\n    contextMenuSelectionMode = 'separate';\n    /**\n     * A property to uniquely identify a record in data.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * Defines whether metaKey is should be considered for the selection. On touch enabled devices, metaKeySelection is turned off automatically.\n     * @group Props\n     */\n    metaKeySelection;\n    /**\n     * Algorithm to define if a row is selected, valid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields.\n     * @group Props\n     */\n    compareSelectionBy = 'deepEquals';\n    /**\n     * Adds hover effect to rows without the need for selectionMode.\n     * @group Props\n     */\n    rowHover;\n    /**\n     * Displays a loader to indicate data load is in progress.\n     * @group Props\n     */\n    loading;\n    /**\n     * The icon to show while indicating data load is in progress.\n     * @group Props\n     */\n    loadingIcon;\n    /**\n     * Whether to show the loading mask when loading property is true.\n     * @group Props\n     */\n    showLoader = true;\n    /**\n     * When specifies, enables horizontal and/or vertical scrolling.\n     * @group Props\n     */\n    scrollable;\n    /**\n     * Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size.\n     * @group Props\n     */\n    scrollHeight;\n    /**\n     * Whether the data should be loaded on demand during scroll.\n     * @group Props\n     */\n    virtualScroll;\n    /**\n     * Height of a row to use in calculations of virtual scrolling.\n     * @group Props\n     */\n    virtualScrollItemSize;\n    /**\n     * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    virtualScrollOptions;\n    /**\n     * The delay (in milliseconds) before triggering the virtual scroll. This determines the time gap between the user's scroll action and the actual rendering of the next set of items in the virtual scroll.\n     * @group Props\n     */\n    virtualScrollDelay = 150;\n    /**\n     * Width of the frozen columns container.\n     * @group Props\n     */\n    frozenWidth;\n    /**\n     * An array of objects to represent dynamic columns that are frozen.\n     * @group Props\n     */\n    frozenColumns;\n    /**\n     * When enabled, columns can be resized using drag and drop.\n     * @group Props\n     */\n    resizableColumns;\n    /**\n     * Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\".\n     * @group Props\n     */\n    columnResizeMode = 'fit';\n    /**\n     * When enabled, columns can be reordered using drag and drop.\n     * @group Props\n     */\n    reorderableColumns;\n    /**\n     * Local ng-template varilable of a ContextMenu.\n     * @group Props\n     */\n    contextMenu;\n    /**\n     * Function to optimize the dom operations by delegating to ngForTrackBy, default algorithm checks for object identity.\n     * @group Props\n     */\n    rowTrackBy = (index, item) => item;\n    /**\n     * An array of FilterMetadata objects to provide external filters.\n     * @group Props\n     */\n    filters = {};\n    /**\n     * An array of fields as string to use in global filtering.\n     * @group Props\n     */\n    globalFilterFields;\n    /**\n     * Delay in milliseconds before filtering the data.\n     * @group Props\n     */\n    filterDelay = 300;\n    /**\n     * Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.\n     * @group Props\n     */\n    filterMode = 'lenient';\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    filterLocale;\n    /**\n     * Number of total records, defaults to length of value when not defined.\n     * @group Props\n     */\n    get totalRecords() {\n        return this._totalRecords;\n    }\n    set totalRecords(val) {\n        this._totalRecords = val;\n        this.tableService.onTotalRecordsChange(this._totalRecords);\n    }\n    /**\n     * Name of the field to sort data by default.\n     * @group Props\n     */\n    get sortField() {\n        return this._sortField;\n    }\n    set sortField(val) {\n        this._sortField = val;\n    }\n    /**\n     * Order to sort when default sorting is enabled.\n     * @defaultValue 1\n     * @group Props\n     */\n    get sortOrder() {\n        return this._sortOrder;\n    }\n    set sortOrder(val) {\n        this._sortOrder = val;\n    }\n    /**\n     * An array of SortMeta objects to sort the data by default in multiple sort mode.\n     * @defaultValue null\n     * @group Props\n     */\n    get multiSortMeta() {\n        return this._multiSortMeta;\n    }\n    set multiSortMeta(val) {\n        this._multiSortMeta = val;\n    }\n    /**\n     * Selected row in single mode or an array of values in multiple mode.\n     * @defaultValue null\n     * @group Props\n     */\n    get selection() {\n        return this._selection;\n    }\n    set selection(val) {\n        this._selection = val;\n    }\n    /**\n     * An array of objects to display.\n     * @defaultValue null\n     * @group Props\n     */\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n    }\n    /**\n     * Indicates the height of rows to be scrolled.\n     * @defaultValue 28\n     * @group Props\n     * @deprecated use virtualScrollItemSize property instead.\n     */\n    get virtualRowHeight() {\n        return this._virtualRowHeight;\n    }\n    set virtualRowHeight(val) {\n        this._virtualRowHeight = val;\n        console.warn('The virtualRowHeight property is deprecated, use virtualScrollItemSize property instead.');\n    }\n    _virtualRowHeight = 28;\n    /**\n     * Callback to invoke on selected node change.\n     * @param {TreeTableNode} object - Node instance.\n     * @group Emits\n     */\n    selectionChange = new EventEmitter();\n    /**\n     * Callback to invoke on context menu selection change.\n     * @param {TreeTableNode} object - Node instance.\n     * @group Emits\n     */\n    contextMenuSelectionChange = new EventEmitter();\n    /**\n     * Callback to invoke when data is filtered.\n     * @param {TreeTableFilterEvent} event - Custom filter event.\n     * @group Emits\n     */\n    onFilter = new EventEmitter();\n    /**\n     * Callback to invoke when a node is expanded.\n     * @param {TreeTableNode} object - Node instance.\n     * @group Emits\n     */\n    onNodeExpand = new EventEmitter();\n    /**\n     * Callback to invoke when a node is collapsed.\n     * @param {TreeTableNodeCollapseEvent} event - Node collapse event.\n     * @group Emits\n     */\n    onNodeCollapse = new EventEmitter();\n    /**\n     * Callback to invoke when pagination occurs.\n     * @param {TreeTablePaginatorState} object - Paginator state.\n     * @group Emits\n     */\n    onPage = new EventEmitter();\n    /**\n     * Callback to invoke when a column gets sorted.\n     * @param {Object} Object - Sort data.\n     * @group Emits\n     */\n    onSort = new EventEmitter();\n    /**\n     * Callback to invoke when paging, sorting or filtering happens in lazy mode.\n     * @param {TreeTableLazyLoadEvent} event - Custom lazy load event.\n     * @group Emits\n     */\n    onLazyLoad = new EventEmitter();\n    /**\n     * An event emitter to invoke on custom sorting, refer to sorting section for details.\n     * @param {TreeTableSortEvent} event - Custom sort event.\n     * @group Emits\n     */\n    sortFunction = new EventEmitter();\n    /**\n     * Callback to invoke when a column is resized.\n     * @param {TreeTableColResizeEvent} event - Custom column resize event.\n     * @group Emits\n     */\n    onColResize = new EventEmitter();\n    /**\n     * Callback to invoke when a column is reordered.\n     * @param {TreeTableColumnReorderEvent} event - Custom column reorder.\n     * @group Emits\n     */\n    onColReorder = new EventEmitter();\n    /**\n     * Callback to invoke when a node is selected.\n     * @param {TreeTableNode} object - Node instance.\n     * @group Emits\n     */\n    onNodeSelect = new EventEmitter();\n    /**\n     * Callback to invoke when a node is unselected.\n     * @param {TreeTableNodeUnSelectEvent} event - Custom node unselect event.\n     * @group Emits\n     */\n    onNodeUnselect = new EventEmitter();\n    /**\n     * Callback to invoke when a node is selected with right click.\n     * @param {TreeTableContextMenuSelectEvent} event - Custom context menu select event.\n     * @group Emits\n     */\n    onContextMenuSelect = new EventEmitter();\n    /**\n     * Callback to invoke when state of header checkbox changes.\n     * @param {TreeTableHeaderCheckboxToggleEvent} event - Custom checkbox toggle event.\n     * @group Emits\n     */\n    onHeaderCheckboxToggle = new EventEmitter();\n    /**\n     * Callback to invoke when a cell switches to edit mode.\n     * @param {TreeTableEditEvent} event - Custom edit event.\n     * @group Emits\n     */\n    onEditInit = new EventEmitter();\n    /**\n     * Callback to invoke when cell edit is completed.\n     * @param {TreeTableEditEvent} event - Custom edit event.\n     * @group Emits\n     */\n    onEditComplete = new EventEmitter();\n    /**\n     * Callback to invoke when cell edit is cancelled with escape key.\n     * @param {TreeTableEditEvent} event - Custom edit event.\n     * @group Emits\n     */\n    onEditCancel = new EventEmitter();\n    containerViewChild;\n    resizeHelperViewChild;\n    reorderIndicatorUpViewChild;\n    reorderIndicatorDownViewChild;\n    tableViewChild;\n    scrollableViewChild;\n    scrollableFrozenViewChild;\n    templates;\n    _value = [];\n    serializedValue;\n    _totalRecords = 0;\n    _multiSortMeta;\n    _sortField;\n    _sortOrder = 1;\n    filteredNodes;\n    filterTimeout;\n    colGroupTemplate;\n    captionTemplate;\n    headerTemplate;\n    bodyTemplate;\n    footerTemplate;\n    summaryTemplate;\n    emptyMessageTemplate;\n    paginatorLeftTemplate;\n    paginatorRightTemplate;\n    paginatorDropdownItemTemplate;\n    frozenHeaderTemplate;\n    frozenBodyTemplate;\n    frozenFooterTemplate;\n    frozenColGroupTemplate;\n    loadingIconTemplate;\n    reorderIndicatorUpIconTemplate;\n    reorderIndicatorDownIconTemplate;\n    sortIconTemplate;\n    checkboxIconTemplate;\n    headerCheckboxIconTemplate;\n    togglerIconTemplate;\n    paginatorFirstPageLinkIconTemplate;\n    paginatorLastPageLinkIconTemplate;\n    paginatorPreviousPageLinkIconTemplate;\n    paginatorNextPageLinkIconTemplate;\n    lastResizerHelperX;\n    reorderIconWidth;\n    reorderIconHeight;\n    draggedColumn;\n    dropPosition;\n    preventSelectionSetterPropagation;\n    _selection;\n    selectionKeys = {};\n    rowTouched;\n    editingCell;\n    editingCellData;\n    editingCellField;\n    editingCellClick;\n    documentEditListener;\n    initialized;\n    toggleRowIndex;\n    ngOnInit() {\n        if (this.lazy && this.lazyLoadOnInit && !this.virtualScroll) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        this.initialized = true;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'caption':\n                    this.captionTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'body':\n                    this.bodyTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'summary':\n                    this.summaryTemplate = item.template;\n                    break;\n                case 'colgroup':\n                    this.colGroupTemplate = item.template;\n                    break;\n                case 'emptymessage':\n                    this.emptyMessageTemplate = item.template;\n                    break;\n                case 'paginatorleft':\n                    this.paginatorLeftTemplate = item.template;\n                    break;\n                case 'paginatorright':\n                    this.paginatorRightTemplate = item.template;\n                    break;\n                case 'paginatordropdownitem':\n                    this.paginatorDropdownItemTemplate = item.template;\n                    break;\n                case 'frozenheader':\n                    this.frozenHeaderTemplate = item.template;\n                    break;\n                case 'frozenbody':\n                    this.frozenBodyTemplate = item.template;\n                    break;\n                case 'frozenfooter':\n                    this.frozenFooterTemplate = item.template;\n                    break;\n                case 'frozencolgroup':\n                    this.frozenColGroupTemplate = item.template;\n                    break;\n                case 'loadingicon':\n                    this.loadingIconTemplate = item.template;\n                    break;\n                case 'reorderindicatorupicon':\n                    this.reorderIndicatorUpIconTemplate = item.template;\n                    break;\n                case 'reorderindicatordownicon':\n                    this.reorderIndicatorDownIconTemplate = item.template;\n                    break;\n                case 'sorticon':\n                    this.sortIconTemplate = item.template;\n                    break;\n                case 'checkboxicon':\n                    this.checkboxIconTemplate = item.template;\n                    break;\n                case 'headercheckboxicon':\n                    this.headerCheckboxIconTemplate = item.template;\n                    break;\n                case 'togglericon':\n                    this.togglerIconTemplate = item.template;\n                    break;\n                case 'paginatorfirstpagelinkicon':\n                    this.paginatorFirstPageLinkIconTemplate = item.template;\n                    break;\n                case 'paginatorlastpagelinkicon':\n                    this.paginatorLastPageLinkIconTemplate = item.template;\n                    break;\n                case 'paginatorpreviouspagelinkicon':\n                    this.paginatorPreviousPageLinkIconTemplate = item.template;\n                    break;\n                case 'paginatornextpagelinkicon':\n                    this.paginatorNextPageLinkIconTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    constructor(document, renderer, el, cd, zone, tableService, filterService) {\n        this.document = document;\n        this.renderer = renderer;\n        this.el = el;\n        this.cd = cd;\n        this.zone = zone;\n        this.tableService = tableService;\n        this.filterService = filterService;\n    }\n    ngOnChanges(simpleChange) {\n        if (simpleChange.value) {\n            this._value = simpleChange.value.currentValue;\n            if (!this.lazy) {\n                this.totalRecords = this._value ? this._value.length : 0;\n                if (this.sortMode == 'single' && this.sortField)\n                    this.sortSingle();\n                else if (this.sortMode == 'multiple' && this.multiSortMeta)\n                    this.sortMultiple();\n                else if (this.hasFilter())\n                    //sort already filters\n                    this._filter();\n            }\n            this.updateSerializedValue();\n            this.tableService.onUIUpdate(this.value);\n        }\n        if (simpleChange.sortField) {\n            this._sortField = simpleChange.sortField.currentValue;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.sortOrder) {\n            this._sortOrder = simpleChange.sortOrder.currentValue;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.multiSortMeta) {\n            this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n            if (this.sortMode === 'multiple') {\n                this.sortMultiple();\n            }\n        }\n        if (simpleChange.selection) {\n            this._selection = simpleChange.selection.currentValue;\n            if (!this.preventSelectionSetterPropagation) {\n                this.updateSelectionKeys();\n                this.tableService.onSelectionChange();\n            }\n            this.preventSelectionSetterPropagation = false;\n        }\n    }\n    updateSerializedValue() {\n        this.serializedValue = [];\n        if (this.paginator)\n            this.serializePageNodes();\n        else\n            this.serializeNodes(null, this.filteredNodes || this.value, 0, true);\n    }\n    serializeNodes(parent, nodes, level, visible) {\n        if (nodes && nodes.length) {\n            for (let node of nodes) {\n                node.parent = parent;\n                const rowNode = {\n                    node: node,\n                    parent: parent,\n                    level: level,\n                    visible: visible && (parent ? parent.expanded : true)\n                };\n                this.serializedValue.push(rowNode);\n                if (rowNode.visible && node.expanded) {\n                    this.serializeNodes(node, node.children, level + 1, rowNode.visible);\n                }\n            }\n        }\n    }\n    serializePageNodes() {\n        let data = this.filteredNodes || this.value;\n        this.serializedValue = [];\n        if (data && data.length) {\n            const first = this.lazy ? 0 : this.first;\n            for (let i = first; i < first + this.rows; i++) {\n                let node = data[i];\n                if (node) {\n                    this.serializedValue.push({\n                        node: node,\n                        parent: null,\n                        level: 0,\n                        visible: true\n                    });\n                    this.serializeNodes(node, node.children, 1, true);\n                }\n            }\n        }\n    }\n    updateSelectionKeys() {\n        if (this.dataKey && this._selection) {\n            this.selectionKeys = {};\n            if (Array.isArray(this._selection)) {\n                for (let node of this._selection) {\n                    this.selectionKeys[String(ObjectUtils.resolveFieldData(node.data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection.data, this.dataKey))] = 1;\n            }\n        }\n    }\n    onPageChange(event) {\n        this.first = event.first;\n        this.rows = event.rows;\n        if (this.lazy)\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        else\n            this.serializePageNodes();\n        this.onPage.emit({\n            first: this.first,\n            rows: this.rows\n        });\n        this.tableService.onUIUpdate(this.value);\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n    sort(event) {\n        let originalEvent = event.originalEvent;\n        if (this.sortMode === 'single') {\n            this._sortOrder = this.sortField === event.field ? this.sortOrder * -1 : this.defaultSortOrder;\n            this._sortField = event.field;\n            this.sortSingle();\n            if (this.resetPageOnSort && this.scrollable) {\n                this.resetScrollTop();\n            }\n        }\n        if (this.sortMode === 'multiple') {\n            let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n            let sortMeta = this.getSortMeta(event.field);\n            if (sortMeta) {\n                if (!metaKey) {\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }];\n                    if (this.resetPageOnSort && this.scrollable) {\n                        this.resetScrollTop();\n                    }\n                }\n                else {\n                    sortMeta.order = sortMeta.order * -1;\n                }\n            }\n            else {\n                if (!metaKey || !this.multiSortMeta) {\n                    this._multiSortMeta = [];\n                    if (this.resetPageOnSort && this.scrollable) {\n                        this.resetScrollTop();\n                    }\n                }\n                this.multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\n            }\n            this.sortMultiple();\n        }\n    }\n    sortSingle() {\n        if (this.sortField && this.sortOrder) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                this.sortNodes(this.value);\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            let sortMeta = {\n                field: this.sortField,\n                order: this.sortOrder\n            };\n            this.onSort.emit(sortMeta);\n            this.tableService.onSort(sortMeta);\n            this.updateSerializedValue();\n        }\n    }\n    sortNodes(nodes) {\n        if (!nodes || nodes.length === 0) {\n            return;\n        }\n        if (this.customSort) {\n            this.sortFunction.emit({\n                data: nodes,\n                mode: this.sortMode,\n                field: this.sortField,\n                order: this.sortOrder\n            });\n        }\n        else {\n            nodes.sort((node1, node2) => {\n                let value1 = ObjectUtils.resolveFieldData(node1.data, this.sortField);\n                let value2 = ObjectUtils.resolveFieldData(node2.data, this.sortField);\n                let result = null;\n                if (value1 == null && value2 != null)\n                    result = -1;\n                else if (value1 != null && value2 == null)\n                    result = 1;\n                else if (value1 == null && value2 == null)\n                    result = 0;\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\n                    result = value1.localeCompare(value2, undefined, { numeric: true });\n                else\n                    result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n                return this.sortOrder * result;\n            });\n        }\n        for (let node of nodes) {\n            this.sortNodes(node.children);\n        }\n    }\n    sortMultiple() {\n        if (this.multiSortMeta) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                this.sortMultipleNodes(this.value);\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            this.onSort.emit({\n                multisortmeta: this.multiSortMeta\n            });\n            this.updateSerializedValue();\n            this.tableService.onSort(this.multiSortMeta);\n        }\n    }\n    sortMultipleNodes(nodes) {\n        if (!nodes || nodes.length === 0) {\n            return;\n        }\n        if (this.customSort) {\n            this.sortFunction.emit({\n                data: this.value,\n                mode: this.sortMode,\n                multiSortMeta: this.multiSortMeta\n            });\n        }\n        else {\n            nodes.sort((node1, node2) => {\n                return this.multisortField(node1, node2, this.multiSortMeta, 0);\n            });\n        }\n        for (let node of nodes) {\n            this.sortMultipleNodes(node.children);\n        }\n    }\n    multisortField(node1, node2, multiSortMeta, index) {\n        if (ObjectUtils.isEmpty(this.multiSortMeta) || ObjectUtils.isEmpty(multiSortMeta[index])) {\n            return 0;\n        }\n        let value1 = ObjectUtils.resolveFieldData(node1.data, multiSortMeta[index].field);\n        let value2 = ObjectUtils.resolveFieldData(node2.data, multiSortMeta[index].field);\n        let result = null;\n        if (value1 == null && value2 != null)\n            result = -1;\n        else if (value1 != null && value2 == null)\n            result = 1;\n        else if (value1 == null && value2 == null)\n            result = 0;\n        if (typeof value1 == 'string' || value1 instanceof String) {\n            if (value1.localeCompare && value1 != value2) {\n                return multiSortMeta[index].order * value1.localeCompare(value2, undefined, { numeric: true });\n            }\n        }\n        else {\n            result = value1 < value2 ? -1 : 1;\n        }\n        if (value1 == value2) {\n            return multiSortMeta.length - 1 > index ? this.multisortField(node1, node2, multiSortMeta, index + 1) : 0;\n        }\n        return multiSortMeta[index].order * result;\n    }\n    getSortMeta(field) {\n        if (this.multiSortMeta && this.multiSortMeta.length) {\n            for (let i = 0; i < this.multiSortMeta.length; i++) {\n                if (this.multiSortMeta[i].field === field) {\n                    return this.multiSortMeta[i];\n                }\n            }\n        }\n        return null;\n    }\n    isSorted(field) {\n        if (this.sortMode === 'single') {\n            return this.sortField && this.sortField === field;\n        }\n        else if (this.sortMode === 'multiple') {\n            let sorted = false;\n            if (this.multiSortMeta) {\n                for (let i = 0; i < this.multiSortMeta.length; i++) {\n                    if (this.multiSortMeta[i].field == field) {\n                        sorted = true;\n                        break;\n                    }\n                }\n            }\n            return sorted;\n        }\n    }\n    createLazyLoadMetadata() {\n        return {\n            first: this.first,\n            rows: this.rows,\n            sortField: this.sortField,\n            sortOrder: this.sortOrder,\n            filters: this.filters,\n            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n            multiSortMeta: this.multiSortMeta,\n            forceUpdate: () => this.cd.detectChanges()\n        };\n    }\n    onLazyItemLoad(event) {\n        this.onLazyLoad.emit({\n            ...this.createLazyLoadMetadata(),\n            ...event,\n            rows: event.last - event.first\n        });\n    }\n    /**\n     * Resets scroll to top.\n     * @group Method\n     */\n    resetScrollTop() {\n        if (this.virtualScroll)\n            this.scrollToVirtualIndex(0);\n        else\n            this.scrollTo({ top: 0 });\n    }\n    /**\n     * Scrolls to given index when using virtual scroll.\n     * @param {number} index - index of the element.\n     * @group Method\n     */\n    scrollToVirtualIndex(index) {\n        if (this.scrollableViewChild) {\n            this.scrollableViewChild.scrollToVirtualIndex(index);\n        }\n        if (this.scrollableFrozenViewChild) {\n            this.scrollableViewChild.scrollToVirtualIndex(index);\n        }\n    }\n    /**\n     * Scrolls to given index.\n     * @param {ScrollToOptions} options - Scroll options.\n     * @group Method\n     */\n    scrollTo(options) {\n        if (this.scrollableViewChild) {\n            this.scrollableViewChild.scrollTo(options);\n        }\n        if (this.scrollableFrozenViewChild) {\n            this.scrollableViewChild.scrollTo(options);\n        }\n    }\n    isEmpty() {\n        let data = this.filteredNodes || this.value;\n        return data == null || data.length == 0;\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    onColumnResizeBegin(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild?.nativeElement).left;\n        this.lastResizerHelperX = event.pageX - containerLeft + this.containerViewChild?.nativeElement.scrollLeft;\n        event.preventDefault();\n    }\n    onColumnResize(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild?.nativeElement).left;\n        DomHandler.addClass(this.containerViewChild?.nativeElement, 'p-unselectable-text');\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild?.nativeElement.offsetHeight + 'px';\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n        this.resizeHelperViewChild.nativeElement.style.left = event.pageX - containerLeft + this.containerViewChild?.nativeElement.scrollLeft + 'px';\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\n    }\n    onColumnResizeEnd(event, column) {\n        let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n        let columnWidth = column.offsetWidth;\n        let newColumnWidth = columnWidth + delta;\n        let minWidth = column.style.minWidth || 15;\n        if (columnWidth + delta > parseInt(minWidth)) {\n            if (this.columnResizeMode === 'fit') {\n                let nextColumn = column.nextElementSibling;\n                while (!nextColumn.offsetParent) {\n                    nextColumn = nextColumn.nextElementSibling;\n                }\n                if (nextColumn) {\n                    let nextColumnWidth = nextColumn.offsetWidth - delta;\n                    let nextColumnMinWidth = nextColumn.style.minWidth || 15;\n                    if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\n                        if (this.scrollable) {\n                            let scrollableView = this.findParentScrollableView(column);\n                            let scrollableBodyTable = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-body table') || DomHandler.findSingle(scrollableView, '.p-scroller-viewport table');\n                            let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\n                            let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\n                            let resizeColumnIndex = DomHandler.index(column);\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                        }\n                        else {\n                            column.style.width = newColumnWidth + 'px';\n                            if (nextColumn) {\n                                nextColumn.style.width = nextColumnWidth + 'px';\n                            }\n                        }\n                    }\n                }\n            }\n            else if (this.columnResizeMode === 'expand') {\n                if (this.scrollable) {\n                    let scrollableView = this.findParentScrollableView(column);\n                    let scrollableBody = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-body') || DomHandler.findSingle(scrollableView, '.p-scroller-viewport');\n                    let scrollableHeader = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-header');\n                    let scrollableFooter = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-footer');\n                    let scrollableBodyTable = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-body table') || DomHandler.findSingle(scrollableView, '.p-scroller-viewport table');\n                    let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\n                    let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\n                    scrollableBodyTable.style.width = scrollableBodyTable.offsetWidth + delta + 'px';\n                    scrollableHeaderTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\n                    if (scrollableFooterTable) {\n                        scrollableFooterTable.style.width = scrollableFooterTable.offsetWidth + delta + 'px';\n                    }\n                    let resizeColumnIndex = DomHandler.index(column);\n                    const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n                    const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n                    const isContainerInViewport = this.containerViewChild?.nativeElement.offsetWidth >= scrollableBodyTableWidth;\n                    let setWidth = (container, table, width, isContainerInViewport) => {\n                        if (container && table) {\n                            container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto';\n                            table.style.width = width + 'px';\n                        }\n                    };\n                    setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n                    setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n                    setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n                    this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n                    this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n                    this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n                }\n                else {\n                    this.tableViewChild.nativeElement.style.width = this.tableViewChild?.nativeElement.offsetWidth + delta + 'px';\n                    column.style.width = newColumnWidth + 'px';\n                    let containerWidth = this.tableViewChild?.nativeElement.style.width;\n                    this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\n                }\n            }\n            this.onColResize.emit({\n                element: column,\n                delta: delta\n            });\n        }\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\n        DomHandler.removeClass(this.containerViewChild?.nativeElement, 'p-unselectable-text');\n    }\n    findParentScrollableView(column) {\n        if (column) {\n            let parent = column.parentElement;\n            while (parent && !DomHandler.hasClass(parent, 'p-treetable-scrollable-view')) {\n                parent = parent.parentElement;\n            }\n            return parent;\n        }\n        else {\n            return null;\n        }\n    }\n    resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n        if (table) {\n            let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n            if (colGroup) {\n                let col = colGroup.children[resizeColumnIndex];\n                let nextCol = col.nextElementSibling;\n                col.style.width = newColumnWidth + 'px';\n                if (nextCol && nextColumnWidth) {\n                    nextCol.style.width = nextColumnWidth + 'px';\n                }\n            }\n            else {\n                throw 'Scrollable tables require a colgroup to support resizable columns';\n            }\n        }\n    }\n    onColumnDragStart(event, columnElement) {\n        this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild?.nativeElement);\n        this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild?.nativeElement);\n        this.draggedColumn = columnElement;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n    }\n    onColumnDragEnter(event, dropHeader) {\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n            event.preventDefault();\n            let containerOffset = DomHandler.getOffset(this.containerViewChild?.nativeElement);\n            let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n            if (this.draggedColumn != dropHeader) {\n                let targetLeft = dropHeaderOffset.left - containerOffset.left;\n                let targetTop = containerOffset.top - dropHeaderOffset.top;\n                let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n                if (event.pageX > columnCenter) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n                    this.dropPosition = 1;\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n                    this.dropPosition = -1;\n                }\n                this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n                this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n            }\n            else {\n                event.dataTransfer.dropEffect = 'none';\n            }\n        }\n    }\n    onColumnDragLeave(event) {\n        if (this.reorderableColumns && this.draggedColumn) {\n            event.preventDefault();\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        }\n    }\n    onColumnDrop(event, dropColumn) {\n        event.preventDefault();\n        if (this.draggedColumn) {\n            let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'ttreorderablecolumn');\n            let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'ttreorderablecolumn');\n            let allowDrop = dragIndex != dropIndex;\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\n                allowDrop = false;\n            }\n            if (allowDrop && dropIndex < dragIndex && this.dropPosition === 1) {\n                dropIndex = dropIndex + 1;\n            }\n            if (allowDrop && dropIndex > dragIndex && this.dropPosition === -1) {\n                dropIndex = dropIndex - 1;\n            }\n            if (allowDrop) {\n                ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n                this.onColReorder.emit({\n                    dragIndex: dragIndex,\n                    dropIndex: dropIndex,\n                    columns: this.columns\n                });\n            }\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n            this.draggedColumn.draggable = false;\n            this.draggedColumn = null;\n            this.dropPosition = null;\n        }\n    }\n    handleRowClick(event) {\n        let targetNode = event.originalEvent.target.nodeName;\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || DomHandler.hasClass(event.originalEvent.target, 'p-clickable')) {\n            return;\n        }\n        if (this.selectionMode) {\n            this.preventSelectionSetterPropagation = true;\n            let rowNode = event.rowNode;\n            let selected = this.isSelected(rowNode.node);\n            let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n            let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowNode.node.data, this.dataKey)) : null;\n            if (metaSelection) {\n                let keyboardEvent = event.originalEvent;\n                let metaKey = keyboardEvent.metaKey || keyboardEvent.ctrlKey;\n                if (selected && metaKey) {\n                    if (this.isSingleSelectionMode()) {\n                        this._selection = null;\n                        this.selectionKeys = {};\n                        this.selectionChange.emit(null);\n                    }\n                    else {\n                        let selectionIndex = this.findIndexInSelection(rowNode.node);\n                        this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                        this.selectionChange.emit(this.selection);\n                        if (dataKeyValue) {\n                            delete this.selectionKeys[dataKeyValue];\n                        }\n                    }\n                    this.onNodeUnselect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row' });\n                }\n                else {\n                    if (this.isSingleSelectionMode()) {\n                        this._selection = rowNode.node;\n                        this.selectionChange.emit(rowNode.node);\n                        if (dataKeyValue) {\n                            this.selectionKeys = {};\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        if (metaKey) {\n                            this._selection = this.selection || [];\n                        }\n                        else {\n                            this._selection = [];\n                            this.selectionKeys = {};\n                        }\n                        this._selection = [...this.selection, rowNode.node];\n                        this.selectionChange.emit(this.selection);\n                        if (dataKeyValue) {\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                    this.onNodeSelect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex });\n                }\n            }\n            else {\n                if (this.selectionMode === 'single') {\n                    if (selected) {\n                        this._selection = null;\n                        this.selectionKeys = {};\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeUnselect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row' });\n                    }\n                    else {\n                        this._selection = rowNode.node;\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeSelect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex });\n                        if (dataKeyValue) {\n                            this.selectionKeys = {};\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                }\n                else if (this.selectionMode === 'multiple') {\n                    if (selected) {\n                        let selectionIndex = this.findIndexInSelection(rowNode.node);\n                        this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeUnselect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row' });\n                        if (dataKeyValue) {\n                            delete this.selectionKeys[dataKeyValue];\n                        }\n                    }\n                    else {\n                        this._selection = this.selection ? [...this.selection, rowNode.node] : [rowNode.node];\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeSelect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex });\n                        if (dataKeyValue) {\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                }\n            }\n            this.tableService.onSelectionChange();\n        }\n        this.rowTouched = false;\n    }\n    handleRowTouchEnd(event) {\n        this.rowTouched = true;\n    }\n    handleRowRightClick(event) {\n        if (this.contextMenu) {\n            const node = event.rowNode.node;\n            if (this.contextMenuSelectionMode === 'separate') {\n                this.contextMenuSelection = node;\n                this.contextMenuSelectionChange.emit(node);\n                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, node: node });\n                this.contextMenu.show(event.originalEvent);\n                this.tableService.onContextMenu(node);\n            }\n            else if (this.contextMenuSelectionMode === 'joint') {\n                this.preventSelectionSetterPropagation = true;\n                let selected = this.isSelected(node);\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\n                if (!selected) {\n                    if (this.isSingleSelectionMode()) {\n                        this.selection = node;\n                        this.selectionChange.emit(node);\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        this.selection = [node];\n                        this.selectionChange.emit(this.selection);\n                    }\n                    if (dataKeyValue) {\n                        this.selectionKeys[dataKeyValue] = 1;\n                    }\n                }\n                this.contextMenu.show(event.originalEvent);\n                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, node: node });\n            }\n        }\n    }\n    toggleNodeWithCheckbox(event) {\n        this.selection = this.selection || [];\n        this.preventSelectionSetterPropagation = true;\n        let node = event.rowNode.node;\n        let selected = this.isSelected(node);\n        if (selected) {\n            this.propagateSelectionDown(node, false);\n            if (event.rowNode.parent) {\n                this.propagateSelectionUp(node.parent, false);\n            }\n            this.selectionChange.emit(this.selection);\n            this.onNodeUnselect.emit({ originalEvent: event, node: node });\n        }\n        else {\n            this.propagateSelectionDown(node, true);\n            if (event.rowNode.parent) {\n                this.propagateSelectionUp(node.parent, true);\n            }\n            this.selectionChange.emit(this.selection);\n            this.onNodeSelect.emit({ originalEvent: event, node: node });\n        }\n        this.tableService.onSelectionChange();\n    }\n    toggleNodesWithCheckbox(event, check) {\n        let data = this.filteredNodes || this.value;\n        this._selection = check && data ? data.slice() : [];\n        if (check) {\n            if (data && data.length) {\n                for (let node of data) {\n                    this.propagateSelectionDown(node, true);\n                }\n            }\n        }\n        else {\n            this._selection = [];\n            this.selectionKeys = {};\n        }\n        this.preventSelectionSetterPropagation = true;\n        this.selectionChange.emit(this._selection);\n        this.tableService.onSelectionChange();\n        this.onHeaderCheckboxToggle.emit({ originalEvent: event, checked: check });\n    }\n    propagateSelectionUp(node, select) {\n        if (node.children && node.children.length) {\n            let selectedChildCount = 0;\n            let childPartialSelected = false;\n            let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\n            for (let child of node.children) {\n                if (this.isSelected(child))\n                    selectedChildCount++;\n                else if (child.partialSelected)\n                    childPartialSelected = true;\n            }\n            if (select && selectedChildCount == node.children.length) {\n                this._selection = [...(this.selection || []), node];\n                node.partialSelected = false;\n                if (dataKeyValue) {\n                    this.selectionKeys[dataKeyValue] = 1;\n                }\n            }\n            else {\n                if (!select) {\n                    let index = this.findIndexInSelection(node);\n                    if (index >= 0) {\n                        this._selection = this.selection.filter((val, i) => i != index);\n                        if (dataKeyValue) {\n                            delete this.selectionKeys[dataKeyValue];\n                        }\n                    }\n                }\n                if (childPartialSelected || (selectedChildCount > 0 && selectedChildCount != node.children.length))\n                    node.partialSelected = true;\n                else\n                    node.partialSelected = false;\n            }\n        }\n        let parent = node.parent;\n        if (parent) {\n            this.propagateSelectionUp(parent, select);\n        }\n    }\n    propagateSelectionDown(node, select) {\n        let index = this.findIndexInSelection(node);\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\n        if (select && index == -1) {\n            this._selection = [...(this.selection || []), node];\n            if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n            }\n        }\n        else if (!select && index > -1) {\n            this._selection = this.selection.filter((val, i) => i != index);\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n        }\n        node.partialSelected = false;\n        if (node.children && node.children.length) {\n            for (let child of node.children) {\n                this.propagateSelectionDown(child, select);\n            }\n        }\n    }\n    isSelected(node) {\n        if (node && this.selection) {\n            if (this.dataKey) {\n                return this.selectionKeys[ObjectUtils.resolveFieldData(node.data, this.dataKey)] !== undefined;\n            }\n            else {\n                if (Array.isArray(this.selection))\n                    return this.findIndexInSelection(node) > -1;\n                else\n                    return this.equals(node, this.selection);\n            }\n        }\n        return false;\n    }\n    findIndexInSelection(node) {\n        let index = -1;\n        if (this.selection && this.selection.length) {\n            for (let i = 0; i < this.selection.length; i++) {\n                if (this.equals(node, this.selection[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    isSingleSelectionMode() {\n        return this.selectionMode === 'single';\n    }\n    isMultipleSelectionMode() {\n        return this.selectionMode === 'multiple';\n    }\n    equals(node1, node2) {\n        return this.compareSelectionBy === 'equals' ? node1 === node2 : ObjectUtils.equals(node1.data, node2.data, this.dataKey);\n    }\n    filter(value, field, matchMode) {\n        if (this.filterTimeout) {\n            clearTimeout(this.filterTimeout);\n        }\n        if (!this.isFilterBlank(value)) {\n            this.filters[field] = { value: value, matchMode: matchMode };\n        }\n        else if (this.filters[field]) {\n            delete this.filters[field];\n        }\n        this.filterTimeout = setTimeout(() => {\n            this._filter();\n            this.filterTimeout = null;\n        }, this.filterDelay);\n    }\n    filterGlobal(value, matchMode) {\n        this.filter(value, 'global', matchMode);\n    }\n    isFilterBlank(filter) {\n        if (filter !== null && filter !== undefined) {\n            if ((typeof filter === 'string' && filter.trim().length == 0) || (Array.isArray(filter) && filter.length == 0))\n                return true;\n            else\n                return false;\n        }\n        return true;\n    }\n    _filter() {\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            if (!this.value) {\n                return;\n            }\n            if (!this.hasFilter()) {\n                this.filteredNodes = null;\n                if (this.paginator) {\n                    this.totalRecords = this.value ? this.value.length : 0;\n                }\n            }\n            else {\n                let globalFilterFieldsArray;\n                if (this.filters['global']) {\n                    if (!this.columns && !this.globalFilterFields)\n                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');\n                    else\n                        globalFilterFieldsArray = this.globalFilterFields || this.columns;\n                }\n                this.filteredNodes = [];\n                const isStrictMode = this.filterMode === 'strict';\n                let isValueChanged = false;\n                for (let node of this.value) {\n                    let copyNode = { ...node };\n                    let localMatch = true;\n                    let globalMatch = false;\n                    let paramsWithoutNode;\n                    for (let prop in this.filters) {\n                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n                            let filterMeta = this.filters[prop];\n                            let filterField = prop;\n                            let filterValue = filterMeta.value;\n                            let filterMatchMode = filterMeta.matchMode || 'startsWith';\n                            let filterConstraint = this.filterService.filters[filterMatchMode];\n                            paramsWithoutNode = { filterField, filterValue, filterConstraint, isStrictMode };\n                            if ((isStrictMode && !(this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode))) ||\n                                (!isStrictMode && !(this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode)))) {\n                                localMatch = false;\n                            }\n                            if (!localMatch) {\n                                break;\n                            }\n                        }\n                    }\n                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n                        for (let j = 0; j < globalFilterFieldsArray.length; j++) {\n                            let copyNodeForGlobal = { ...copyNode };\n                            let filterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\n                            let filterValue = this.filters['global'].value;\n                            let filterConstraint = this.filterService.filters[this.filters['global'].matchMode];\n                            paramsWithoutNode = { filterField, filterValue, filterConstraint, isStrictMode };\n                            if ((isStrictMode && (this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode) || this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode))) ||\n                                (!isStrictMode && (this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode) || this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode)))) {\n                                globalMatch = true;\n                                copyNode = copyNodeForGlobal;\n                            }\n                        }\n                    }\n                    let matches = localMatch;\n                    if (this.filters['global']) {\n                        matches = localMatch && globalMatch;\n                    }\n                    if (matches) {\n                        this.filteredNodes.push(copyNode);\n                    }\n                    isValueChanged = isValueChanged || !localMatch || globalMatch || (localMatch && this.filteredNodes.length > 0) || (!globalMatch && this.filteredNodes.length === 0);\n                }\n                if (!isValueChanged) {\n                    this.filteredNodes = null;\n                }\n                if (this.paginator) {\n                    this.totalRecords = this.filteredNodes ? this.filteredNodes.length : this.value ? this.value.length : 0;\n                }\n            }\n        }\n        this.first = 0;\n        const filteredValue = this.filteredNodes || this.value;\n        this.onFilter.emit({\n            filters: this.filters,\n            filteredValue: filteredValue\n        });\n        this.tableService.onUIUpdate(filteredValue);\n        this.updateSerializedValue();\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n    findFilteredNodes(node, paramsWithoutNode) {\n        if (node) {\n            let matched = false;\n            if (node.children) {\n                let childNodes = [...node.children];\n                node.children = [];\n                for (let childNode of childNodes) {\n                    let copyChildNode = { ...childNode };\n                    if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {\n                        matched = true;\n                        node.children.push(copyChildNode);\n                    }\n                }\n            }\n            if (matched) {\n                return true;\n            }\n        }\n    }\n    isFilterMatched(node, filterOptions) {\n        let { filterField, filterValue, filterConstraint, isStrictMode } = filterOptions;\n        let matched = false;\n        let dataFieldValue = ObjectUtils.resolveFieldData(node.data, filterField);\n        if (filterConstraint(dataFieldValue, filterValue, this.filterLocale)) {\n            matched = true;\n        }\n        if (!matched || (isStrictMode && !this.isNodeLeaf(node))) {\n            matched = this.findFilteredNodes(node, { filterField, filterValue, filterConstraint, isStrictMode }) || matched;\n        }\n        return matched;\n    }\n    isNodeLeaf(node) {\n        return node.leaf === false ? false : !(node.children && node.children.length);\n    }\n    hasFilter() {\n        let empty = true;\n        for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop)) {\n                empty = false;\n                break;\n            }\n        }\n        return !empty;\n    }\n    /**\n     * Clears the sort and paginator state.\n     * @group Method\n     */\n    reset() {\n        this._sortField = null;\n        this._sortOrder = 1;\n        this._multiSortMeta = null;\n        this.tableService.onSort(null);\n        this.filteredNodes = null;\n        this.filters = {};\n        this.first = 0;\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            this.totalRecords = this._value ? this._value.length : 0;\n        }\n    }\n    updateEditingCell(cell, data, field) {\n        this.editingCell = cell;\n        this.editingCellData = data;\n        this.editingCellField = field;\n        this.bindDocumentEditListener();\n    }\n    isEditingCellValid() {\n        return this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0;\n    }\n    bindDocumentEditListener() {\n        if (!this.documentEditListener) {\n            this.documentEditListener = this.renderer.listen(this.document, 'click', (event) => {\n                if (this.editingCell && !this.editingCellClick && this.isEditingCellValid()) {\n                    DomHandler.removeClass(this.editingCell, 'p-cell-editing');\n                    this.editingCell = null;\n                    this.onEditComplete.emit({ field: this.editingCellField, data: this.editingCellData });\n                    this.editingCellField = null;\n                    this.editingCellData = null;\n                    this.unbindDocumentEditListener();\n                }\n                this.editingCellClick = false;\n            });\n        }\n    }\n    unbindDocumentEditListener() {\n        if (this.documentEditListener) {\n            this.documentEditListener();\n            this.documentEditListener = null;\n        }\n    }\n    ngOnDestroy() {\n        this.unbindDocumentEditListener();\n        this.editingCell = null;\n        this.editingCellField = null;\n        this.editingCellData = null;\n        this.initialized = null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTable, deps: [{ token: DOCUMENT }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: TreeTableService }, { token: i1.FilterService }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TreeTable, selector: \"p-treeTable\", inputs: { columns: \"columns\", style: \"style\", styleClass: \"styleClass\", tableStyle: \"tableStyle\", tableStyleClass: \"tableStyleClass\", autoLayout: \"autoLayout\", lazy: \"lazy\", lazyLoadOnInit: \"lazyLoadOnInit\", paginator: \"paginator\", rows: \"rows\", first: \"first\", pageLinks: \"pageLinks\", rowsPerPageOptions: \"rowsPerPageOptions\", alwaysShowPaginator: \"alwaysShowPaginator\", paginatorPosition: \"paginatorPosition\", paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\", currentPageReportTemplate: \"currentPageReportTemplate\", showCurrentPageReport: \"showCurrentPageReport\", showJumpToPageDropdown: \"showJumpToPageDropdown\", showFirstLastIcon: \"showFirstLastIcon\", showPageLinks: \"showPageLinks\", defaultSortOrder: \"defaultSortOrder\", sortMode: \"sortMode\", resetPageOnSort: \"resetPageOnSort\", customSort: \"customSort\", selectionMode: \"selectionMode\", contextMenuSelection: \"contextMenuSelection\", contextMenuSelectionMode: \"contextMenuSelectionMode\", dataKey: \"dataKey\", metaKeySelection: \"metaKeySelection\", compareSelectionBy: \"compareSelectionBy\", rowHover: \"rowHover\", loading: \"loading\", loadingIcon: \"loadingIcon\", showLoader: \"showLoader\", scrollable: \"scrollable\", scrollHeight: \"scrollHeight\", virtualScroll: \"virtualScroll\", virtualScrollItemSize: \"virtualScrollItemSize\", virtualScrollOptions: \"virtualScrollOptions\", virtualScrollDelay: \"virtualScrollDelay\", frozenWidth: \"frozenWidth\", frozenColumns: \"frozenColumns\", resizableColumns: \"resizableColumns\", columnResizeMode: \"columnResizeMode\", reorderableColumns: \"reorderableColumns\", contextMenu: \"contextMenu\", rowTrackBy: \"rowTrackBy\", filters: \"filters\", globalFilterFields: \"globalFilterFields\", filterDelay: \"filterDelay\", filterMode: \"filterMode\", filterLocale: \"filterLocale\", totalRecords: \"totalRecords\", sortField: \"sortField\", sortOrder: \"sortOrder\", multiSortMeta: \"multiSortMeta\", selection: \"selection\", value: \"value\", virtualRowHeight: \"virtualRowHeight\" }, outputs: { selectionChange: \"selectionChange\", contextMenuSelectionChange: \"contextMenuSelectionChange\", onFilter: \"onFilter\", onNodeExpand: \"onNodeExpand\", onNodeCollapse: \"onNodeCollapse\", onPage: \"onPage\", onSort: \"onSort\", onLazyLoad: \"onLazyLoad\", sortFunction: \"sortFunction\", onColResize: \"onColResize\", onColReorder: \"onColReorder\", onNodeSelect: \"onNodeSelect\", onNodeUnselect: \"onNodeUnselect\", onContextMenuSelect: \"onContextMenuSelect\", onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\", onEditInit: \"onEditInit\", onEditComplete: \"onEditComplete\", onEditCancel: \"onEditCancel\" }, host: { classAttribute: \"p-element\" }, providers: [TreeTableService], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"resizeHelperViewChild\", first: true, predicate: [\"resizeHelper\"], descendants: true }, { propertyName: \"reorderIndicatorUpViewChild\", first: true, predicate: [\"reorderIndicatorUp\"], descendants: true }, { propertyName: \"reorderIndicatorDownViewChild\", first: true, predicate: [\"reorderIndicatorDown\"], descendants: true }, { propertyName: \"tableViewChild\", first: true, predicate: [\"table\"], descendants: true }, { propertyName: \"scrollableViewChild\", first: true, predicate: [\"scrollableView\"], descendants: true }, { propertyName: \"scrollableFrozenViewChild\", first: true, predicate: [\"scrollableFrozenView\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n        <div\n            #container\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            data-scrollselectors=\".p-treetable-scrollable-body\"\n            [ngClass]=\"{\n                'p-treetable p-component': true,\n                'p-treetable-hoverable-rows': rowHover || selectionMode === 'single' || selectionMode === 'multiple',\n                'p-treetable-auto-layout': autoLayout,\n                'p-treetable-resizable': resizableColumns,\n                'p-treetable-resizable-fit': resizableColumns && columnResizeMode === 'fit',\n                'p-treetable-flex-scrollable': scrollable && scrollHeight === 'flex'\n            }\"\n        >\n            <div class=\"p-treetable-loading\" *ngIf=\"loading && showLoader\">\n                <div class=\"p-treetable-loading-overlay p-component-overlay\">\n                    <i *ngIf=\"loadingIcon\" [class]=\"'p-treetable-loading-icon pi-spin ' + loadingIcon\"></i>\n                    <ng-container *ngIf=\"!loadingIcon\">\n                        <SpinnerIcon *ngIf=\"!loadingIconTemplate\" [spin]=\"true\" [styleClass]=\"'p-treetable-loading-icon'\" />\n                        <span *ngIf=\"loadingIconTemplate\" class=\"p-treetable-loading-icon\">\n                            <ng-template *ngTemplateOutlet=\"loadingIconTemplate\"></ng-template>\n                        </span>\n                    </ng-container>\n                </div>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-treetable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-top\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n\n            <div class=\"p-treetable-wrapper\" *ngIf=\"!scrollable\">\n                <table #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <thead class=\"p-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot class=\"p-treetable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class=\"p-treetable-scrollable-wrapper\" *ngIf=\"scrollable\">\n                <div\n                    class=\"p-treetable-scrollable-view p-treetable-frozen-view\"\n                    *ngIf=\"frozenColumns || frozenBodyTemplate\"\n                    #scrollableFrozenView\n                    [ttScrollableView]=\"frozenColumns\"\n                    [frozen]=\"true\"\n                    [ngStyle]=\"{ width: frozenWidth }\"\n                    [scrollHeight]=\"scrollHeight\"\n                ></div>\n                <div class=\"p-treetable-scrollable-view\" #scrollableView [ttScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{ left: frozenWidth, width: 'calc(100% - ' + frozenWidth + ')' }\"></div>\n            </div>\n\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-bottom\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n            <div *ngIf=\"summaryTemplate\" class=\"p-treetable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"p-treetable-reorder-indicator-up\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowDownIcon *ngIf=\"!reorderIndicatorUpIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorUpIconTemplate\"></ng-template>\n            </span>\n            <span #reorderIndicatorDown class=\"p-treetable-reorder-indicator-down\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowUpIcon *ngIf=\"!reorderIndicatorDownIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorDownIconTemplate\"></ng-template>\n            </span>\n        </div>\n    `, isInline: true, styles: [\".p-treetable{position:relative}.p-treetable table{border-collapse:collapse;width:100%;table-layout:fixed}.p-treetable .p-sortable-column{cursor:pointer;-webkit-user-select:none;user-select:none}.p-treetable .p-sortable-column .p-column-title,.p-treetable .p-sortable-column .p-sortable-column-icon,.p-treetable .p-sortable-column .p-sortable-column-badge{vertical-align:middle}.p-treetable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-treetable-auto-layout>.p-treetable-wrapper{overflow-x:auto}.p-treetable-auto-layout>.p-treetable-wrapper>table{table-layout:auto}.p-treetable-hoverable-rows .p-treetable-tbody>tr{cursor:pointer}.p-treetable-toggler{cursor:pointer;-webkit-user-select:none;user-select:none;display:inline-flex;align-items:center;justify-content:center;vertical-align:middle;overflow:hidden;position:relative}p-treetabletoggler+p-treetablecheckbox .p-checkbox{vertical-align:middle}p-treetabletoggler+p-treetablecheckbox+span{vertical-align:middle}.p-treetable-scrollable-wrapper{position:relative}.p-treetable-scrollable-header,.p-treetable-scrollable-footer{overflow:hidden}.p-treetable-scrollable-body{overflow:auto;position:relative}.p-treetable-scrollable-body>table>.p-treetable-tbody>tr:first-child>td{border-top:0 none}.p-treetable-virtual-table{position:absolute}.p-treetable-frozen-view .p-treetable-scrollable-body{overflow:hidden}.p-treetable-frozen-view>.p-treetable-scrollable-body>table>.p-treetable-tbody>tr>td:last-child{border-right:0 none}.p-treetable-unfrozen-view{position:absolute;top:0}.p-treetable-flex-scrollable,.p-treetable-flex-scrollable .p-treetable-scrollable-wrapper,.p-treetable-flex-scrollable .p-treetable-scrollable-view{display:flex;flex-direction:column;flex:1;height:100%}.p-treetable-flex-scrollable .p-treetable-virtual-scrollable-body{flex:1}.p-treetable-resizable>.p-treetable-wrapper{overflow-x:auto}.p-treetable-resizable .p-treetable-thead>tr>th,.p-treetable-resizable .p-treetable-tfoot>tr>td,.p-treetable-resizable .p-treetable-tbody>tr>td{overflow:hidden}.p-treetable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-treetable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-treetable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-treetable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-treetable .p-row-editor-init,.p-treetable .p-row-editor-save,.p-treetable .p-row-editor-cancel,.p-treetable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-treetable-reorder-indicator-up,.p-treetable-reorder-indicator-down{position:absolute;display:none}[ttReorderableColumn]{cursor:move}.p-treetable .p-treetable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-treetable .p-scroller-loading{transform:none!important;min-height:0;position:sticky;top:0;left:0}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i2.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i0.forwardRef(function () { return i3.Paginator; }), selector: \"p-paginator\", inputs: [\"pageLinkSize\", \"style\", \"styleClass\", \"alwaysShow\", \"dropdownAppendTo\", \"templateLeft\", \"templateRight\", \"appendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showCurrentPageReport\", \"showFirstLastIcon\", \"totalRecords\", \"rows\", \"rowsPerPageOptions\", \"showJumpToPageDropdown\", \"showJumpToPageInput\", \"showPageLinks\", \"dropdownItemTemplate\", \"first\"], outputs: [\"onPageChange\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.PrimeTemplate; }), selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"component\", type: i0.forwardRef(function () { return SpinnerIcon; }), selector: \"SpinnerIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return ArrowDownIcon; }), selector: \"ArrowDownIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return ArrowUpIcon; }), selector: \"ArrowUpIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return TTScrollableView; }), selector: \"[ttScrollableView]\", inputs: [\"ttScrollableView\", \"frozen\", \"scrollHeight\"] }, { kind: \"component\", type: i0.forwardRef(function () { return TTBody; }), selector: \"[pTreeTableBody]\", inputs: [\"pTreeTableBody\", \"pTreeTableBodyTemplate\", \"frozen\", \"serializedNodes\", \"scrollerOptions\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-treeTable', template: `\n        <div\n            #container\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            data-scrollselectors=\".p-treetable-scrollable-body\"\n            [ngClass]=\"{\n                'p-treetable p-component': true,\n                'p-treetable-hoverable-rows': rowHover || selectionMode === 'single' || selectionMode === 'multiple',\n                'p-treetable-auto-layout': autoLayout,\n                'p-treetable-resizable': resizableColumns,\n                'p-treetable-resizable-fit': resizableColumns && columnResizeMode === 'fit',\n                'p-treetable-flex-scrollable': scrollable && scrollHeight === 'flex'\n            }\"\n        >\n            <div class=\"p-treetable-loading\" *ngIf=\"loading && showLoader\">\n                <div class=\"p-treetable-loading-overlay p-component-overlay\">\n                    <i *ngIf=\"loadingIcon\" [class]=\"'p-treetable-loading-icon pi-spin ' + loadingIcon\"></i>\n                    <ng-container *ngIf=\"!loadingIcon\">\n                        <SpinnerIcon *ngIf=\"!loadingIconTemplate\" [spin]=\"true\" [styleClass]=\"'p-treetable-loading-icon'\" />\n                        <span *ngIf=\"loadingIconTemplate\" class=\"p-treetable-loading-icon\">\n                            <ng-template *ngTemplateOutlet=\"loadingIconTemplate\"></ng-template>\n                        </span>\n                    </ng-container>\n                </div>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-treetable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-top\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n\n            <div class=\"p-treetable-wrapper\" *ngIf=\"!scrollable\">\n                <table #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <thead class=\"p-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot class=\"p-treetable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class=\"p-treetable-scrollable-wrapper\" *ngIf=\"scrollable\">\n                <div\n                    class=\"p-treetable-scrollable-view p-treetable-frozen-view\"\n                    *ngIf=\"frozenColumns || frozenBodyTemplate\"\n                    #scrollableFrozenView\n                    [ttScrollableView]=\"frozenColumns\"\n                    [frozen]=\"true\"\n                    [ngStyle]=\"{ width: frozenWidth }\"\n                    [scrollHeight]=\"scrollHeight\"\n                ></div>\n                <div class=\"p-treetable-scrollable-view\" #scrollableView [ttScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{ left: frozenWidth, width: 'calc(100% - ' + frozenWidth + ')' }\"></div>\n            </div>\n\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-bottom\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n            <div *ngIf=\"summaryTemplate\" class=\"p-treetable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"p-treetable-reorder-indicator-up\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowDownIcon *ngIf=\"!reorderIndicatorUpIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorUpIconTemplate\"></ng-template>\n            </span>\n            <span #reorderIndicatorDown class=\"p-treetable-reorder-indicator-down\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowUpIcon *ngIf=\"!reorderIndicatorDownIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorDownIconTemplate\"></ng-template>\n            </span>\n        </div>\n    `, providers: [TreeTableService], encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\".p-treetable{position:relative}.p-treetable table{border-collapse:collapse;width:100%;table-layout:fixed}.p-treetable .p-sortable-column{cursor:pointer;-webkit-user-select:none;user-select:none}.p-treetable .p-sortable-column .p-column-title,.p-treetable .p-sortable-column .p-sortable-column-icon,.p-treetable .p-sortable-column .p-sortable-column-badge{vertical-align:middle}.p-treetable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-treetable-auto-layout>.p-treetable-wrapper{overflow-x:auto}.p-treetable-auto-layout>.p-treetable-wrapper>table{table-layout:auto}.p-treetable-hoverable-rows .p-treetable-tbody>tr{cursor:pointer}.p-treetable-toggler{cursor:pointer;-webkit-user-select:none;user-select:none;display:inline-flex;align-items:center;justify-content:center;vertical-align:middle;overflow:hidden;position:relative}p-treetabletoggler+p-treetablecheckbox .p-checkbox{vertical-align:middle}p-treetabletoggler+p-treetablecheckbox+span{vertical-align:middle}.p-treetable-scrollable-wrapper{position:relative}.p-treetable-scrollable-header,.p-treetable-scrollable-footer{overflow:hidden}.p-treetable-scrollable-body{overflow:auto;position:relative}.p-treetable-scrollable-body>table>.p-treetable-tbody>tr:first-child>td{border-top:0 none}.p-treetable-virtual-table{position:absolute}.p-treetable-frozen-view .p-treetable-scrollable-body{overflow:hidden}.p-treetable-frozen-view>.p-treetable-scrollable-body>table>.p-treetable-tbody>tr>td:last-child{border-right:0 none}.p-treetable-unfrozen-view{position:absolute;top:0}.p-treetable-flex-scrollable,.p-treetable-flex-scrollable .p-treetable-scrollable-wrapper,.p-treetable-flex-scrollable .p-treetable-scrollable-view{display:flex;flex-direction:column;flex:1;height:100%}.p-treetable-flex-scrollable .p-treetable-virtual-scrollable-body{flex:1}.p-treetable-resizable>.p-treetable-wrapper{overflow-x:auto}.p-treetable-resizable .p-treetable-thead>tr>th,.p-treetable-resizable .p-treetable-tfoot>tr>td,.p-treetable-resizable .p-treetable-tbody>tr>td{overflow:hidden}.p-treetable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-treetable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-treetable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-treetable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-treetable .p-row-editor-init,.p-treetable .p-row-editor-save,.p-treetable .p-row-editor-cancel,.p-treetable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-treetable-reorder-indicator-up,.p-treetable-reorder-indicator-down{position:absolute;display:none}[ttReorderableColumn]{cursor:move}.p-treetable .p-treetable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-treetable .p-scroller-loading{transform:none!important;min-height:0;position:sticky;top:0;left:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: TreeTableService }, { type: i1.FilterService }]; }, propDecorators: { columns: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], tableStyle: [{\n                type: Input\n            }], tableStyleClass: [{\n                type: Input\n            }], autoLayout: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], lazyLoadOnInit: [{\n                type: Input\n            }], paginator: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], first: [{\n                type: Input\n            }], pageLinks: [{\n                type: Input\n            }], rowsPerPageOptions: [{\n                type: Input\n            }], alwaysShowPaginator: [{\n                type: Input\n            }], paginatorPosition: [{\n                type: Input\n            }], paginatorDropdownAppendTo: [{\n                type: Input\n            }], currentPageReportTemplate: [{\n                type: Input\n            }], showCurrentPageReport: [{\n                type: Input\n            }], showJumpToPageDropdown: [{\n                type: Input\n            }], showFirstLastIcon: [{\n                type: Input\n            }], showPageLinks: [{\n                type: Input\n            }], defaultSortOrder: [{\n                type: Input\n            }], sortMode: [{\n                type: Input\n            }], resetPageOnSort: [{\n                type: Input\n            }], customSort: [{\n                type: Input\n            }], selectionMode: [{\n                type: Input\n            }], contextMenuSelection: [{\n                type: Input\n            }], contextMenuSelectionMode: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], metaKeySelection: [{\n                type: Input\n            }], compareSelectionBy: [{\n                type: Input\n            }], rowHover: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], loadingIcon: [{\n                type: Input\n            }], showLoader: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], virtualScrollItemSize: [{\n                type: Input\n            }], virtualScrollOptions: [{\n                type: Input\n            }], virtualScrollDelay: [{\n                type: Input\n            }], frozenWidth: [{\n                type: Input\n            }], frozenColumns: [{\n                type: Input\n            }], resizableColumns: [{\n                type: Input\n            }], columnResizeMode: [{\n                type: Input\n            }], reorderableColumns: [{\n                type: Input\n            }], contextMenu: [{\n                type: Input\n            }], rowTrackBy: [{\n                type: Input\n            }], filters: [{\n                type: Input\n            }], globalFilterFields: [{\n                type: Input\n            }], filterDelay: [{\n                type: Input\n            }], filterMode: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], totalRecords: [{\n                type: Input\n            }], sortField: [{\n                type: Input\n            }], sortOrder: [{\n                type: Input\n            }], multiSortMeta: [{\n                type: Input\n            }], selection: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], virtualRowHeight: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], contextMenuSelectionChange: [{\n                type: Output\n            }], onFilter: [{\n                type: Output\n            }], onNodeExpand: [{\n                type: Output\n            }], onNodeCollapse: [{\n                type: Output\n            }], onPage: [{\n                type: Output\n            }], onSort: [{\n                type: Output\n            }], onLazyLoad: [{\n                type: Output\n            }], sortFunction: [{\n                type: Output\n            }], onColResize: [{\n                type: Output\n            }], onColReorder: [{\n                type: Output\n            }], onNodeSelect: [{\n                type: Output\n            }], onNodeUnselect: [{\n                type: Output\n            }], onContextMenuSelect: [{\n                type: Output\n            }], onHeaderCheckboxToggle: [{\n                type: Output\n            }], onEditInit: [{\n                type: Output\n            }], onEditComplete: [{\n                type: Output\n            }], onEditCancel: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], resizeHelperViewChild: [{\n                type: ViewChild,\n                args: ['resizeHelper']\n            }], reorderIndicatorUpViewChild: [{\n                type: ViewChild,\n                args: ['reorderIndicatorUp']\n            }], reorderIndicatorDownViewChild: [{\n                type: ViewChild,\n                args: ['reorderIndicatorDown']\n            }], tableViewChild: [{\n                type: ViewChild,\n                args: ['table']\n            }], scrollableViewChild: [{\n                type: ViewChild,\n                args: ['scrollableView']\n            }], scrollableFrozenViewChild: [{\n                type: ViewChild,\n                args: ['scrollableFrozenView']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass TTBody {\n    tt;\n    treeTableService;\n    cd;\n    columns;\n    template;\n    frozen;\n    serializedNodes;\n    scrollerOptions;\n    subscription;\n    constructor(tt, treeTableService, cd) {\n        this.tt = tt;\n        this.treeTableService = treeTableService;\n        this.cd = cd;\n        this.subscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\n            if (this.tt.virtualScroll) {\n                this.cd.detectChanges();\n            }\n        });\n    }\n    getScrollerOption(option, options) {\n        if (this.tt.virtualScroll) {\n            options = options || this.scrollerOptions;\n            return options ? options[option] : null;\n        }\n        return null;\n    }\n    getRowIndex(rowIndex) {\n        const getItemOptions = this.getScrollerOption('getItemOptions');\n        return getItemOptions ? getItemOptions(rowIndex).index : rowIndex;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTBody, deps: [{ token: TreeTable }, { token: TreeTableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTBody, selector: \"[pTreeTableBody]\", inputs: { columns: [\"pTreeTableBody\", \"columns\"], template: [\"pTreeTableBodyTemplate\", \"template\"], frozen: \"frozen\", serializedNodes: \"serializedNodes\", scrollerOptions: \"scrollerOptions\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <ng-template ngFor let-serializedNode let-rowIndex=\"index\" [ngForOf]=\"serializedNodes || tt.serializedValue\" [ngForTrackBy]=\"tt.rowTrackBy\">\n            <ng-container *ngIf=\"serializedNode.visible\">\n                <ng-container *ngTemplateOutlet=\"template; context: { $implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns }\"></ng-container>\n            </ng-container>\n        </ng-template>\n        <ng-container *ngIf=\"tt.isEmpty()\">\n            <ng-container *ngTemplateOutlet=\"tt.emptyMessageTemplate; context: { $implicit: columns, frozen: frozen }\"></ng-container>\n        </ng-container>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTBody, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[pTreeTableBody]',\n                    template: `\n        <ng-template ngFor let-serializedNode let-rowIndex=\"index\" [ngForOf]=\"serializedNodes || tt.serializedValue\" [ngForTrackBy]=\"tt.rowTrackBy\">\n            <ng-container *ngIf=\"serializedNode.visible\">\n                <ng-container *ngTemplateOutlet=\"template; context: { $implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns }\"></ng-container>\n            </ng-container>\n        </ng-template>\n        <ng-container *ngIf=\"tt.isEmpty()\">\n            <ng-container *ngTemplateOutlet=\"tt.emptyMessageTemplate; context: { $implicit: columns, frozen: frozen }\"></ng-container>\n        </ng-container>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }, { type: TreeTableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { columns: [{\n                type: Input,\n                args: ['pTreeTableBody']\n            }], template: [{\n                type: Input,\n                args: ['pTreeTableBodyTemplate']\n            }], frozen: [{\n                type: Input\n            }], serializedNodes: [{\n                type: Input\n            }], scrollerOptions: [{\n                type: Input\n            }] } });\nclass TTScrollableView {\n    platformId;\n    renderer;\n    tt;\n    el;\n    zone;\n    columns;\n    frozen;\n    scrollHeaderViewChild;\n    scrollHeaderBoxViewChild;\n    scrollBodyViewChild;\n    scrollTableViewChild;\n    scrollLoadingTableViewChild;\n    scrollFooterViewChild;\n    scrollFooterBoxViewChild;\n    scrollableAlignerViewChild;\n    scroller;\n    headerScrollListener;\n    bodyScrollListener;\n    footerScrollListener;\n    frozenSiblingBody;\n    totalRecordsSubscription;\n    _scrollHeight;\n    preventBodyScrollPropagation;\n    get scrollHeight() {\n        return this._scrollHeight;\n    }\n    set scrollHeight(val) {\n        this._scrollHeight = val;\n        if (val != null && (val.includes('%') || val.includes('calc'))) {\n            console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight=\"flex\" instead.');\n        }\n    }\n    constructor(platformId, renderer, tt, el, zone) {\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.tt = tt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (!this.frozen) {\n            if (this.tt.frozenColumns || this.tt.frozenBodyTemplate) {\n                DomHandler.addClass(this.el.nativeElement, 'p-treetable-unfrozen-view');\n            }\n            let frozenView = this.el.nativeElement.previousElementSibling;\n            if (frozenView) {\n                if (this.tt.virtualScroll)\n                    this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-scroller-viewport');\n                else\n                    this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-treetable-scrollable-body');\n            }\n            let scrollBarWidth = DomHandler.calculateScrollbarWidth();\n            this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n            if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\n                this.scrollFooterBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n            }\n        }\n        else {\n            if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {\n                this.scrollableAlignerViewChild.nativeElement.style.height = DomHandler.calculateScrollbarHeight() + 'px';\n            }\n        }\n        this.bindEvents();\n    }\n    bindEvents() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.zone.runOutsideAngular(() => {\n                if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n                    this.headerScrollListener = this.renderer.listen(this.scrollHeaderBoxViewChild?.nativeElement, 'scroll', this.onHeaderScroll.bind(this));\n                }\n                if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n                    this.footerScrollListener = this.renderer.listen(this.scrollFooterViewChild.nativeElement, 'scroll', this.onFooterScroll.bind(this));\n                }\n                if (!this.frozen) {\n                    if (this.tt.virtualScroll) {\n                        this.bodyScrollListener = this.renderer.listen((this.scroller?.getElementRef()).nativeElement, 'scroll', this.onBodyScroll.bind(this));\n                    }\n                    else {\n                        this.bodyScrollListener = this.renderer.listen(this.scrollBodyViewChild?.nativeElement, 'scroll', this.onBodyScroll.bind(this));\n                    }\n                }\n            });\n        }\n    }\n    unbindEvents() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n                if (this.headerScrollListener) {\n                    this.headerScrollListener();\n                    this.headerScrollListener = null;\n                }\n            }\n            if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n                if (this.footerScrollListener) {\n                    this.footerScrollListener();\n                    this.footerScrollListener = null;\n                }\n            }\n            if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\n                if (this.bodyScrollListener) {\n                    this.bodyScrollListener();\n                    this.bodyScrollListener = null;\n                }\n            }\n            if (this.scroller && this.scroller.getElementRef()) {\n                if (this.bodyScrollListener) {\n                    this.bodyScrollListener();\n                    this.bodyScrollListener = null;\n                }\n            }\n        }\n    }\n    onHeaderScroll() {\n        const scrollLeft = this.scrollHeaderViewChild?.nativeElement.scrollLeft;\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n        this.preventBodyScrollPropagation = true;\n    }\n    onFooterScroll() {\n        const scrollLeft = this.scrollFooterViewChild?.nativeElement.scrollLeft;\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n        this.preventBodyScrollPropagation = true;\n    }\n    onBodyScroll(event) {\n        if (this.preventBodyScrollPropagation) {\n            this.preventBodyScrollPropagation = false;\n            return;\n        }\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n        }\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n        }\n        if (this.frozenSiblingBody) {\n            this.frozenSiblingBody.scrollTop = event.target.scrollTop;\n        }\n    }\n    scrollToVirtualIndex(index) {\n        if (this.scroller) {\n            this.scroller.scrollToIndex(index);\n        }\n    }\n    scrollTo(options) {\n        if (this.scroller) {\n            this.scroller.scrollTo(options);\n        }\n        else {\n            if (this.scrollBodyViewChild?.nativeElement.scrollTo) {\n                this.scrollBodyViewChild.nativeElement.scrollTo(options);\n            }\n            else {\n                this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;\n                this.scrollBodyViewChild.nativeElement.scrollTop = options.top;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        this.frozenSiblingBody = null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTScrollableView, deps: [{ token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: TreeTable }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTScrollableView, selector: \"[ttScrollableView]\", inputs: { columns: [\"ttScrollableView\", \"columns\"], frozen: \"frozen\", scrollHeight: \"scrollHeight\" }, host: { classAttribute: \"p-element\" }, viewQueries: [{ propertyName: \"scrollHeaderViewChild\", first: true, predicate: [\"scrollHeader\"], descendants: true }, { propertyName: \"scrollHeaderBoxViewChild\", first: true, predicate: [\"scrollHeaderBox\"], descendants: true }, { propertyName: \"scrollBodyViewChild\", first: true, predicate: [\"scrollBody\"], descendants: true }, { propertyName: \"scrollTableViewChild\", first: true, predicate: [\"scrollTable\"], descendants: true }, { propertyName: \"scrollLoadingTableViewChild\", first: true, predicate: [\"loadingTable\"], descendants: true }, { propertyName: \"scrollFooterViewChild\", first: true, predicate: [\"scrollFooter\"], descendants: true }, { propertyName: \"scrollFooterBoxViewChild\", first: true, predicate: [\"scrollFooterBox\"], descendants: true }, { propertyName: \"scrollableAlignerViewChild\", first: true, predicate: [\"scrollableAligner\"], descendants: true }, { propertyName: \"scroller\", first: true, predicate: [\"scroller\"], descendants: true }], ngImport: i0, template: `\n        <div #scrollHeader class=\"p-treetable-scrollable-header\">\n            <div #scrollHeaderBox class=\"p-treetable-scrollable-header-box\">\n                <table class=\"p-treetable-scrollable-header-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt.colGroupTemplate : tt.colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <thead class=\"p-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenHeaderTemplate || tt.headerTemplate : tt.headerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </thead>\n                </table>\n            </div>\n        </div>\n\n        <p-scroller\n            *ngIf=\"tt.virtualScroll\"\n            #scroller\n            [items]=\"tt.serializedValue\"\n            styleClass=\"p-treetable-scrollable-body\"\n            [style]=\"{ height: tt.scrollHeight !== 'flex' ? tt.scrollHeight : undefined }\"\n            [scrollHeight]=\"scrollHeight !== 'flex' ? undefined : '100%'\"\n            [itemSize]=\"tt.virtualScrollItemSize || tt._virtualRowHeight\"\n            [lazy]=\"tt.lazy\"\n            (onLazyLoad)=\"tt.onLazyItemLoad($event)\"\n            [options]=\"tt.virtualScrollOptions\"\n        >\n            <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n            </ng-template>\n            <ng-container *ngIf=\"loaderTemplate\">\n                <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                    <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                </ng-template>\n            </ng-container>\n        </p-scroller>\n        <ng-container *ngIf=\"!tt.virtualScroll\">\n            <div #scrollBody class=\"p-treetable-scrollable-body\" [ngStyle]=\"{ 'max-height': tt.scrollHeight !== 'flex' ? scrollHeight : undefined, 'overflow-y': !frozen && tt.scrollHeight ? 'scroll' : undefined }\">\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: serializedValue, options: {} }\"></ng-container>\n            </div>\n        </ng-container>\n\n        <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n            <table #scrollTable [class]=\"tt.tableStyleClass\" [ngClass]=\"scrollerOptions.contentStyleClass\" [ngStyle]=\"tt.tableStyle\" [style]=\"scrollerOptions.contentStyle\">\n                <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt.colGroupTemplate : tt.colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                <tbody class=\"p-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate || tt.bodyTemplate : tt.bodyTemplate\" [serializedNodes]=\"items\" [frozen]=\"frozen\"></tbody>\n            </table>\n            <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n        </ng-template>\n\n        <div #scrollFooter *ngIf=\"tt.footerTemplate\" class=\"p-treetable-scrollable-footer\">\n            <div #scrollFooterBox class=\"p-treetable-scrollable-footer-box\">\n                <table class=\"p-treetable-scrollable-footer-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt.colGroupTemplate : tt.colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <tfoot class=\"p-treetable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenFooterTemplate || tt.footerTemplate : tt.footerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i1.PrimeTemplate, selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"component\", type: i4.Scroller, selector: \"p-scroller\", inputs: [\"id\", \"style\", \"styleClass\", \"tabindex\", \"items\", \"itemSize\", \"scrollHeight\", \"scrollWidth\", \"orientation\", \"step\", \"delay\", \"resizeDelay\", \"appendOnly\", \"inline\", \"lazy\", \"disabled\", \"loaderDisabled\", \"columns\", \"showSpacer\", \"showLoader\", \"numToleratedItems\", \"loading\", \"autoSize\", \"trackBy\", \"options\"], outputs: [\"onLazyLoad\", \"onScroll\", \"onScrollIndexChange\"] }, { kind: \"component\", type: TTBody, selector: \"[pTreeTableBody]\", inputs: [\"pTreeTableBody\", \"pTreeTableBodyTemplate\", \"frozen\", \"serializedNodes\", \"scrollerOptions\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTScrollableView, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ttScrollableView]',\n                    template: `\n        <div #scrollHeader class=\"p-treetable-scrollable-header\">\n            <div #scrollHeaderBox class=\"p-treetable-scrollable-header-box\">\n                <table class=\"p-treetable-scrollable-header-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt.colGroupTemplate : tt.colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <thead class=\"p-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenHeaderTemplate || tt.headerTemplate : tt.headerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </thead>\n                </table>\n            </div>\n        </div>\n\n        <p-scroller\n            *ngIf=\"tt.virtualScroll\"\n            #scroller\n            [items]=\"tt.serializedValue\"\n            styleClass=\"p-treetable-scrollable-body\"\n            [style]=\"{ height: tt.scrollHeight !== 'flex' ? tt.scrollHeight : undefined }\"\n            [scrollHeight]=\"scrollHeight !== 'flex' ? undefined : '100%'\"\n            [itemSize]=\"tt.virtualScrollItemSize || tt._virtualRowHeight\"\n            [lazy]=\"tt.lazy\"\n            (onLazyLoad)=\"tt.onLazyItemLoad($event)\"\n            [options]=\"tt.virtualScrollOptions\"\n        >\n            <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n            </ng-template>\n            <ng-container *ngIf=\"loaderTemplate\">\n                <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                    <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                </ng-template>\n            </ng-container>\n        </p-scroller>\n        <ng-container *ngIf=\"!tt.virtualScroll\">\n            <div #scrollBody class=\"p-treetable-scrollable-body\" [ngStyle]=\"{ 'max-height': tt.scrollHeight !== 'flex' ? scrollHeight : undefined, 'overflow-y': !frozen && tt.scrollHeight ? 'scroll' : undefined }\">\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: serializedValue, options: {} }\"></ng-container>\n            </div>\n        </ng-container>\n\n        <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n            <table #scrollTable [class]=\"tt.tableStyleClass\" [ngClass]=\"scrollerOptions.contentStyleClass\" [ngStyle]=\"tt.tableStyle\" [style]=\"scrollerOptions.contentStyle\">\n                <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt.colGroupTemplate : tt.colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                <tbody class=\"p-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate || tt.bodyTemplate : tt.bodyTemplate\" [serializedNodes]=\"items\" [frozen]=\"frozen\"></tbody>\n            </table>\n            <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n        </ng-template>\n\n        <div #scrollFooter *ngIf=\"tt.footerTemplate\" class=\"p-treetable-scrollable-footer\">\n            <div #scrollFooterBox class=\"p-treetable-scrollable-footer-box\">\n                <table class=\"p-treetable-scrollable-footer-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt.colGroupTemplate : tt.colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <tfoot class=\"p-treetable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenFooterTemplate || tt.footerTemplate : tt.footerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: TreeTable }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { columns: [{\n                type: Input,\n                args: ['ttScrollableView']\n            }], frozen: [{\n                type: Input\n            }], scrollHeaderViewChild: [{\n                type: ViewChild,\n                args: ['scrollHeader']\n            }], scrollHeaderBoxViewChild: [{\n                type: ViewChild,\n                args: ['scrollHeaderBox']\n            }], scrollBodyViewChild: [{\n                type: ViewChild,\n                args: ['scrollBody']\n            }], scrollTableViewChild: [{\n                type: ViewChild,\n                args: ['scrollTable']\n            }], scrollLoadingTableViewChild: [{\n                type: ViewChild,\n                args: ['loadingTable']\n            }], scrollFooterViewChild: [{\n                type: ViewChild,\n                args: ['scrollFooter']\n            }], scrollFooterBoxViewChild: [{\n                type: ViewChild,\n                args: ['scrollFooterBox']\n            }], scrollableAlignerViewChild: [{\n                type: ViewChild,\n                args: ['scrollableAligner']\n            }], scroller: [{\n                type: ViewChild,\n                args: ['scroller']\n            }], scrollHeight: [{\n                type: Input\n            }] } });\nclass TTSortableColumn {\n    tt;\n    field;\n    ttSortableColumnDisabled;\n    sorted;\n    subscription;\n    constructor(tt) {\n        this.tt = tt;\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.sortSource$.subscribe((sortMeta) => {\n                this.updateSortState();\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.updateSortState();\n        }\n    }\n    updateSortState() {\n        this.sorted = this.tt.isSorted(this.field);\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.updateSortState();\n            this.tt.sort({\n                originalEvent: event,\n                field: this.field\n            });\n            DomHandler.clearSelection();\n        }\n    }\n    onEnterKey(event) {\n        this.onClick(event);\n    }\n    isEnabled() {\n        return this.ttSortableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTSortableColumn, deps: [{ token: TreeTable }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTSortableColumn, selector: \"[ttSortableColumn]\", inputs: { field: [\"ttSortableColumn\", \"field\"], ttSortableColumnDisabled: \"ttSortableColumnDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown.enter\": \"onEnterKey($event)\" }, properties: { \"class.p-sortable-column\": \"isEnabled()\", \"class.p-highlight\": \"sorted\", \"attr.tabindex\": \"isEnabled() ? \\\"0\\\" : null\", \"attr.role\": \"\\\"columnheader\\\"\" }, classAttribute: \"p-element\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTSortableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttSortableColumn]',\n                    host: {\n                        class: 'p-element',\n                        '[class.p-sortable-column]': 'isEnabled()',\n                        '[class.p-highlight]': 'sorted',\n                        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n                        '[attr.role]': '\"columnheader\"'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }]; }, propDecorators: { field: [{\n                type: Input,\n                args: ['ttSortableColumn']\n            }], ttSortableColumnDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onEnterKey: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }] } });\nclass TTSortIcon {\n    tt;\n    cd;\n    field;\n    ariaLabelDesc;\n    ariaLabelAsc;\n    subscription;\n    sortOrder;\n    constructor(tt, cd) {\n        this.tt = tt;\n        this.cd = cd;\n        this.subscription = this.tt.tableService.sortSource$.subscribe((sortMeta) => {\n            this.updateSortState();\n            this.cd.markForCheck();\n        });\n    }\n    ngOnInit() {\n        this.updateSortState();\n    }\n    onClick(event) {\n        event.preventDefault();\n    }\n    updateSortState() {\n        if (this.tt.sortMode === 'single') {\n            this.sortOrder = this.tt.isSorted(this.field) ? this.tt.sortOrder : 0;\n        }\n        else if (this.tt.sortMode === 'multiple') {\n            let sortMeta = this.tt.getSortMeta(this.field);\n            this.sortOrder = sortMeta ? sortMeta.order : 0;\n        }\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTSortIcon, deps: [{ token: TreeTable }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTSortIcon, selector: \"p-treeTableSortIcon\", inputs: { field: \"field\", ariaLabelDesc: \"ariaLabelDesc\", ariaLabelAsc: \"ariaLabelAsc\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: ` <ng-container *ngIf=\"!tt.sortIconTemplate\">\n            <SortAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 0\" />\n            <SortAmountUpAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 1\" />\n            <SortAmountDownIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === -1\" />\n        </ng-container>\n        <span *ngIf=\"tt.sortIconTemplate\" class=\"p-sortable-column-icon\">\n            <ng-template *ngTemplateOutlet=\"tt.sortIconTemplate; context: { $implicit: sortOrder }\"></ng-template>\n        </span>`, isInline: true, dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i2.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: i0.forwardRef(function () { return SortAltIcon; }), selector: \"SortAltIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return SortAmountUpAltIcon; }), selector: \"SortAmountUpAltIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return SortAmountDownIcon; }), selector: \"SortAmountDownIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTSortIcon, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-treeTableSortIcon',\n                    template: ` <ng-container *ngIf=\"!tt.sortIconTemplate\">\n            <SortAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 0\" />\n            <SortAmountUpAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 1\" />\n            <SortAmountDownIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === -1\" />\n        </ng-container>\n        <span *ngIf=\"tt.sortIconTemplate\" class=\"p-sortable-column-icon\">\n            <ng-template *ngTemplateOutlet=\"tt.sortIconTemplate; context: { $implicit: sortOrder }\"></ng-template>\n        </span>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { field: [{\n                type: Input\n            }], ariaLabelDesc: [{\n                type: Input\n            }], ariaLabelAsc: [{\n                type: Input\n            }] } });\nclass TTResizableColumn {\n    document;\n    platformId;\n    renderer;\n    tt;\n    el;\n    zone;\n    ttResizableColumnDisabled;\n    resizer;\n    resizerMouseDownListener;\n    documentMouseMoveListener;\n    documentMouseUpListener;\n    constructor(document, platformId, renderer, tt, el, zone) {\n        this.document = document;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.tt = tt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (this.isEnabled()) {\n                DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n                this.resizer = this.renderer.createElement('span');\n                this.renderer.addClass(this.resizer, 'p-column-resizer');\n                this.renderer.appendChild(this.el.nativeElement, this.resizer);\n                this.zone.runOutsideAngular(() => {\n                    this.resizerMouseDownListener = this.renderer.listen(this.resizer, 'mousedown', this.onMouseDown.bind(this));\n                });\n            }\n        }\n    }\n    bindDocumentEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.documentMouseMoveListener = this.renderer.listen(this.document, 'mousemove', this.onDocumentMouseMove.bind(this));\n            this.documentMouseUpListener = this.renderer.listen(this.document, 'mouseup', this.onDocumentMouseUp.bind(this));\n        });\n    }\n    unbindDocumentEvents() {\n        if (this.documentMouseMoveListener) {\n            this.documentMouseMoveListener();\n            this.documentMouseMoveListener = null;\n        }\n        if (this.documentMouseUpListener) {\n            this.documentMouseUpListener();\n            this.documentMouseUpListener = null;\n        }\n    }\n    onMouseDown(event) {\n        this.tt.onColumnResizeBegin(event);\n        this.bindDocumentEvents();\n    }\n    onDocumentMouseMove(event) {\n        this.tt.onColumnResize(event);\n    }\n    onDocumentMouseUp(event) {\n        this.tt.onColumnResizeEnd(event, this.el.nativeElement);\n        this.unbindDocumentEvents();\n    }\n    isEnabled() {\n        return this.ttResizableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.resizerMouseDownListener) {\n            this.resizerMouseDownListener();\n            this.resizerMouseDownListener = null;\n        }\n        this.unbindDocumentEvents();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTResizableColumn, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: TreeTable }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTResizableColumn, selector: \"[ttResizableColumn]\", inputs: { ttResizableColumnDisabled: \"ttResizableColumnDisabled\" }, host: { classAttribute: \"p-element\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTResizableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttResizableColumn]',\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: TreeTable }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { ttResizableColumnDisabled: [{\n                type: Input\n            }] } });\nclass TTReorderableColumn {\n    document;\n    platformId;\n    renderer;\n    tt;\n    el;\n    zone;\n    ttReorderableColumnDisabled;\n    dragStartListener;\n    dragOverListener;\n    dragEnterListener;\n    dragLeaveListener;\n    mouseDownListener;\n    constructor(document, platformId, renderer, tt, el, zone) {\n        this.document = document;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.tt = tt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.bindEvents();\n        }\n    }\n    bindEvents() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.zone.runOutsideAngular(() => {\n                this.mouseDownListener = this.renderer.listen(this.el.nativeElement, 'mousedown', this.onMouseDown.bind(this));\n                this.dragStartListener = this.renderer.listen(this.el.nativeElement, 'dragstart', this.onDragStart.bind(this));\n                this.dragOverListener = this.renderer.listen(this.el.nativeElement, 'dragover', this.onDragEnter.bind(this));\n                this.dragEnterListener = this.renderer.listen(this.el.nativeElement, 'dragenter', this.onDragEnter.bind(this));\n                this.dragLeaveListener = this.renderer.listen(this.el.nativeElement, 'dragleave', this.onDragLeave.bind(this));\n            });\n        }\n    }\n    unbindEvents() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (this.mouseDownListener) {\n                this.mouseDownListener();\n                this.mouseDownListener = null;\n            }\n            if (this.dragOverListener) {\n                this.dragOverListener();\n                this.dragOverListener = null;\n            }\n            if (this.dragEnterListener) {\n                this.dragEnterListener();\n                this.dragEnterListener = null;\n            }\n            if (this.dragLeaveListener) {\n                this.dragLeaveListener();\n                this.dragLeaveListener = null;\n            }\n        }\n    }\n    onMouseDown(event) {\n        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer'))\n            this.el.nativeElement.draggable = false;\n        else\n            this.el.nativeElement.draggable = true;\n    }\n    onDragStart(event) {\n        this.tt.onColumnDragStart(event, this.el.nativeElement);\n    }\n    onDragOver(event) {\n        event.preventDefault();\n    }\n    onDragEnter(event) {\n        this.tt.onColumnDragEnter(event, this.el.nativeElement);\n    }\n    onDragLeave(event) {\n        this.tt.onColumnDragLeave(event);\n    }\n    onDrop(event) {\n        if (this.isEnabled()) {\n            this.tt.onColumnDrop(event, this.el.nativeElement);\n        }\n    }\n    isEnabled() {\n        return this.ttReorderableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTReorderableColumn, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: TreeTable }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTReorderableColumn, selector: \"[ttReorderableColumn]\", inputs: { ttReorderableColumnDisabled: \"ttReorderableColumnDisabled\" }, host: { listeners: { \"drop\": \"onDrop($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTReorderableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttReorderableColumn]',\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: TreeTable }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { ttReorderableColumnDisabled: [{\n                type: Input\n            }], onDrop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }] } });\nclass TTSelectableRow {\n    tt;\n    tableService;\n    rowNode;\n    ttSelectableRowDisabled;\n    selected;\n    subscription;\n    constructor(tt, tableService) {\n        this.tt = tt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.tt.isSelected(this.rowNode.node);\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.tt.isSelected(this.rowNode.node);\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowClick({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n        }\n    }\n    onEnterKey(event) {\n        if (event.which === 13) {\n            this.onClick(event);\n        }\n    }\n    onTouchEnd(event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowTouchEnd(event);\n        }\n    }\n    isEnabled() {\n        return this.ttSelectableRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTSelectableRow, deps: [{ token: TreeTable }, { token: TreeTableService }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTSelectableRow, selector: \"[ttSelectableRow]\", inputs: { rowNode: [\"ttSelectableRow\", \"rowNode\"], ttSelectableRowDisabled: \"ttSelectableRowDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown\": \"onEnterKey($event)\", \"touchend\": \"onTouchEnd($event)\" }, properties: { \"class.p-highlight\": \"selected\" }, classAttribute: \"p-element\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTSelectableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttSelectableRow]',\n                    host: {\n                        class: 'p-element',\n                        '[class.p-highlight]': 'selected'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }, { type: TreeTableService }]; }, propDecorators: { rowNode: [{\n                type: Input,\n                args: ['ttSelectableRow']\n            }], ttSelectableRowDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onEnterKey: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }], onTouchEnd: [{\n                type: HostListener,\n                args: ['touchend', ['$event']]\n            }] } });\nclass TTSelectableRowDblClick {\n    tt;\n    tableService;\n    rowNode;\n    ttSelectableRowDisabled;\n    selected;\n    subscription;\n    constructor(tt, tableService) {\n        this.tt = tt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.tt.isSelected(this.rowNode.node);\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.tt.isSelected(this.rowNode.node);\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowClick({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n        }\n    }\n    isEnabled() {\n        return this.ttSelectableRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTSelectableRowDblClick, deps: [{ token: TreeTable }, { token: TreeTableService }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTSelectableRowDblClick, selector: \"[ttSelectableRowDblClick]\", inputs: { rowNode: [\"ttSelectableRowDblClick\", \"rowNode\"], ttSelectableRowDisabled: \"ttSelectableRowDisabled\" }, host: { listeners: { \"dblclick\": \"onClick($event)\" }, properties: { \"class.p-highlight\": \"selected\" }, classAttribute: \"p-element\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTSelectableRowDblClick, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttSelectableRowDblClick]',\n                    host: {\n                        class: 'p-element',\n                        '[class.p-highlight]': 'selected'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }, { type: TreeTableService }]; }, propDecorators: { rowNode: [{\n                type: Input,\n                args: ['ttSelectableRowDblClick']\n            }], ttSelectableRowDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['dblclick', ['$event']]\n            }] } });\nclass TTContextMenuRow {\n    tt;\n    tableService;\n    el;\n    rowNode;\n    ttContextMenuRowDisabled;\n    selected;\n    subscription;\n    constructor(tt, tableService, el) {\n        this.tt = tt;\n        this.tableService = tableService;\n        this.el = el;\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.contextMenuSource$.subscribe((node) => {\n                this.selected = this.tt.equals(this.rowNode.node, node);\n            });\n        }\n    }\n    onContextMenu(event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowRightClick({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n            this.el.nativeElement.focus();\n            event.preventDefault();\n        }\n    }\n    isEnabled() {\n        return this.ttContextMenuRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTContextMenuRow, deps: [{ token: TreeTable }, { token: TreeTableService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTContextMenuRow, selector: \"[ttContextMenuRow]\", inputs: { rowNode: [\"ttContextMenuRow\", \"rowNode\"], ttContextMenuRowDisabled: \"ttContextMenuRowDisabled\" }, host: { listeners: { \"contextmenu\": \"onContextMenu($event)\" }, properties: { \"class.p-highlight-contextmenu\": \"selected\", \"attr.tabindex\": \"isEnabled() ? 0 : undefined\" }, classAttribute: \"p-element\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTContextMenuRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttContextMenuRow]',\n                    host: {\n                        class: 'p-element',\n                        '[class.p-highlight-contextmenu]': 'selected',\n                        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }, { type: TreeTableService }, { type: i0.ElementRef }]; }, propDecorators: { rowNode: [{\n                type: Input,\n                args: ['ttContextMenuRow']\n            }], ttContextMenuRowDisabled: [{\n                type: Input\n            }], onContextMenu: [{\n                type: HostListener,\n                args: ['contextmenu', ['$event']]\n            }] } });\nclass TTCheckbox {\n    tt;\n    tableService;\n    cd;\n    disabled;\n    rowNode;\n    checked;\n    focused;\n    subscription;\n    constructor(tt, tableService, cd) {\n        this.tt = tt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.tt.isSelected(this.rowNode.node);\n            this.cd.markForCheck();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.tt.isSelected(this.rowNode.node);\n    }\n    onClick(event) {\n        if (!this.disabled) {\n            this.tt.toggleNodeWithCheckbox({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n        }\n        DomHandler.clearSelection();\n    }\n    onFocus() {\n        this.focused = true;\n    }\n    onBlur() {\n        this.focused = false;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTCheckbox, deps: [{ token: TreeTable }, { token: TreeTableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTCheckbox, selector: \"p-treeTableCheckbox\", inputs: { disabled: \"disabled\", rowNode: [\"value\", \"rowNode\"] }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{ 'p-checkbox-focused': focused }\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" />\n            </div>\n            <div #box [ngClass]=\"{ 'p-checkbox-box': true, 'p-highlight': checked, 'p-focus': focused, 'p-indeterminate': rowNode.node.partialSelected, 'p-disabled': disabled }\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <ng-container *ngIf=\"!tt.checkboxIconTemplate\">\n                    <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"checked\" />\n                    <MinusIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"rowNode.node.partialSelected\" />\n                </ng-container>\n                <span *ngIf=\"tt.checkboxIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"tt.checkboxIconTemplate; context: { $implicit: checked, partialSelected: rowNode.node.partialSelected }\"></ng-template>\n                </span>\n            </div>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i2.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: i0.forwardRef(function () { return CheckIcon; }), selector: \"CheckIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return MinusIcon; }), selector: \"MinusIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-treeTableCheckbox',\n                    template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{ 'p-checkbox-focused': focused }\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" />\n            </div>\n            <div #box [ngClass]=\"{ 'p-checkbox-box': true, 'p-highlight': checked, 'p-focus': focused, 'p-indeterminate': rowNode.node.partialSelected, 'p-disabled': disabled }\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <ng-container *ngIf=\"!tt.checkboxIconTemplate\">\n                    <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"checked\" />\n                    <MinusIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"rowNode.node.partialSelected\" />\n                </ng-container>\n                <span *ngIf=\"tt.checkboxIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"tt.checkboxIconTemplate; context: { $implicit: checked, partialSelected: rowNode.node.partialSelected }\"></ng-template>\n                </span>\n            </div>\n        </div>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }, { type: TreeTableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], rowNode: [{\n                type: Input,\n                args: ['value']\n            }] } });\nclass TTHeaderCheckbox {\n    tt;\n    tableService;\n    cd;\n    boxViewChild;\n    checked;\n    focused;\n    disabled;\n    selectionChangeSubscription;\n    valueChangeSubscription;\n    constructor(tt, tableService, cd) {\n        this.tt = tt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.valueChangeSubscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n        this.selectionChangeSubscription = this.tt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.updateCheckedState();\n    }\n    onClick(event, checked) {\n        if (this.tt.value && this.tt.value.length > 0) {\n            this.tt.toggleNodesWithCheckbox(event, !checked);\n        }\n        DomHandler.clearSelection();\n    }\n    onFocus() {\n        this.focused = true;\n    }\n    onBlur() {\n        this.focused = false;\n    }\n    ngOnDestroy() {\n        if (this.selectionChangeSubscription) {\n            this.selectionChangeSubscription.unsubscribe();\n        }\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n    }\n    updateCheckedState() {\n        this.cd.markForCheck();\n        let checked;\n        const data = this.tt.filteredNodes || this.tt.value;\n        if (data) {\n            for (let node of data) {\n                if (this.tt.isSelected(node)) {\n                    checked = true;\n                }\n                else {\n                    checked = false;\n                    break;\n                }\n            }\n        }\n        else {\n            checked = false;\n        }\n        return checked;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTHeaderCheckbox, deps: [{ token: TreeTable }, { token: TreeTableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTHeaderCheckbox, selector: \"p-treeTableHeaderCheckbox\", host: { classAttribute: \"p-element\" }, viewQueries: [{ propertyName: \"boxViewChild\", first: true, predicate: [\"box\"], descendants: true }], ngImport: i0, template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{ 'p-checkbox-focused': focused }\" (click)=\"onClick($event, cb.checked)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"!tt.value || tt.value.length === 0\" />\n            </div>\n            <div #box [ngClass]=\"{ 'p-checkbox-box': true, 'p-highlight': checked, 'p-focus': focused, 'p-disabled': !tt.value || tt.value.length === 0 }\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <ng-container *ngIf=\"!tt.headerCheckboxIconTemplate\">\n                    <CheckIcon *ngIf=\"checked\" [styleClass]=\"'p-checkbox-icon'\" />\n                </ng-container>\n                <span class=\"p-checkbox-icon\" *ngIf=\"tt.headerCheckboxIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"tt.headerCheckboxIconTemplate; context: { $implicit: checked }\"></ng-template>\n                </span>\n            </div>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i2.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: i0.forwardRef(function () { return CheckIcon; }), selector: \"CheckIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTHeaderCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-treeTableHeaderCheckbox',\n                    template: `\n        <div class=\"p-checkbox p-component\" [ngClass]=\"{ 'p-checkbox-focused': focused }\" (click)=\"onClick($event, cb.checked)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"!tt.value || tt.value.length === 0\" />\n            </div>\n            <div #box [ngClass]=\"{ 'p-checkbox-box': true, 'p-highlight': checked, 'p-focus': focused, 'p-disabled': !tt.value || tt.value.length === 0 }\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <ng-container *ngIf=\"!tt.headerCheckboxIconTemplate\">\n                    <CheckIcon *ngIf=\"checked\" [styleClass]=\"'p-checkbox-icon'\" />\n                </ng-container>\n                <span class=\"p-checkbox-icon\" *ngIf=\"tt.headerCheckboxIconTemplate\">\n                    <ng-template *ngTemplateOutlet=\"tt.headerCheckboxIconTemplate; context: { $implicit: checked }\"></ng-template>\n                </span>\n            </div>\n        </div>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }, { type: TreeTableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { boxViewChild: [{\n                type: ViewChild,\n                args: ['box']\n            }] } });\nclass TTEditableColumn {\n    tt;\n    el;\n    zone;\n    data;\n    field;\n    ttEditableColumnDisabled;\n    constructor(tt, el, zone) {\n        this.tt = tt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.tt.editingCellClick = true;\n            if (this.tt.editingCell) {\n                if (this.tt.editingCell !== this.el.nativeElement) {\n                    if (!this.tt.isEditingCellValid()) {\n                        return;\n                    }\n                    DomHandler.removeClass(this.tt.editingCell, 'p-cell-editing');\n                    this.openCell();\n                }\n            }\n            else {\n                this.openCell();\n            }\n        }\n    }\n    openCell() {\n        this.tt.updateEditingCell(this.el.nativeElement, this.data, this.field);\n        DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n        this.tt.onEditInit.emit({ field: this.field, data: this.data });\n        this.tt.editingCellClick = true;\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                let focusable = DomHandler.findSingle(this.el.nativeElement, 'input, textarea');\n                if (focusable) {\n                    focusable.focus();\n                }\n            }, 50);\n        });\n    }\n    closeEditingCell() {\n        DomHandler.removeClass(this.tt.editingCell, 'p-checkbox-icon');\n        this.tt.editingCell = null;\n        this.tt.unbindDocumentEditListener();\n    }\n    onKeyDown(event) {\n        if (this.isEnabled()) {\n            //enter\n            if (event.keyCode == 13) {\n                if (this.tt.isEditingCellValid()) {\n                    DomHandler.removeClass(this.tt.editingCell, 'p-cell-editing');\n                    this.closeEditingCell();\n                    this.tt.onEditComplete.emit({ field: this.field, data: this.data });\n                }\n                event.preventDefault();\n            }\n            //escape\n            else if (event.keyCode == 27) {\n                if (this.tt.isEditingCellValid()) {\n                    DomHandler.removeClass(this.tt.editingCell, 'p-cell-editing');\n                    this.closeEditingCell();\n                    this.tt.onEditCancel.emit({ field: this.field, data: this.data });\n                }\n                event.preventDefault();\n            }\n            //tab\n            else if (event.keyCode == 9) {\n                this.tt.onEditComplete.emit({ field: this.field, data: this.data });\n                if (event.shiftKey)\n                    this.moveToPreviousCell(event);\n                else\n                    this.moveToNextCell(event);\n            }\n        }\n    }\n    findCell(element) {\n        if (element) {\n            let cell = element;\n            while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n                cell = cell.parentElement;\n            }\n            return cell;\n        }\n        else {\n            return null;\n        }\n    }\n    moveToPreviousCell(event) {\n        let currentCell = this.findCell(event.target);\n        let row = currentCell.parentElement;\n        let targetCell = this.findPreviousEditableColumn(currentCell);\n        if (targetCell) {\n            DomHandler.invokeElementMethod(targetCell, 'click');\n            event.preventDefault();\n        }\n    }\n    moveToNextCell(event) {\n        let currentCell = this.findCell(event.target);\n        let row = currentCell.parentElement;\n        let targetCell = this.findNextEditableColumn(currentCell);\n        if (targetCell) {\n            DomHandler.invokeElementMethod(targetCell, 'click');\n            event.preventDefault();\n        }\n    }\n    findPreviousEditableColumn(cell) {\n        let prevCell = cell.previousElementSibling;\n        if (!prevCell) {\n            let previousRow = cell.parentElement ? cell.parentElement.previousElementSibling : null;\n            if (previousRow) {\n                prevCell = previousRow.lastElementChild;\n            }\n        }\n        if (prevCell) {\n            if (DomHandler.hasClass(prevCell, 'p-editable-column'))\n                return prevCell;\n            else\n                return this.findPreviousEditableColumn(prevCell);\n        }\n        else {\n            return null;\n        }\n    }\n    findNextEditableColumn(cell) {\n        let nextCell = cell.nextElementSibling;\n        if (!nextCell) {\n            let nextRow = cell.parentElement ? cell.parentElement.nextElementSibling : null;\n            if (nextRow) {\n                nextCell = nextRow.firstElementChild;\n            }\n        }\n        if (nextCell) {\n            if (DomHandler.hasClass(nextCell, 'p-editable-column'))\n                return nextCell;\n            else\n                return this.findNextEditableColumn(nextCell);\n        }\n        else {\n            return null;\n        }\n    }\n    isEnabled() {\n        return this.ttEditableColumnDisabled !== true;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTEditableColumn, deps: [{ token: TreeTable }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTEditableColumn, selector: \"[ttEditableColumn]\", inputs: { data: [\"ttEditableColumn\", \"data\"], field: [\"ttEditableColumnField\", \"field\"], ttEditableColumnDisabled: \"ttEditableColumnDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown\": \"onKeyDown($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTEditableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttEditableColumn]',\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { data: [{\n                type: Input,\n                args: ['ttEditableColumn']\n            }], field: [{\n                type: Input,\n                args: ['ttEditableColumnField']\n            }], ttEditableColumnDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\nclass TreeTableCellEditor {\n    tt;\n    editableColumn;\n    templates;\n    inputTemplate;\n    outputTemplate;\n    constructor(tt, editableColumn) {\n        this.tt = tt;\n        this.editableColumn = editableColumn;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'input':\n                    this.inputTemplate = item.template;\n                    break;\n                case 'output':\n                    this.outputTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTableCellEditor, deps: [{ token: TreeTable }, { token: TTEditableColumn }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TreeTableCellEditor, selector: \"p-treeTableCellEditor\", host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <ng-container *ngIf=\"tt.editingCell === editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!tt.editingCell || tt.editingCell !== editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTableCellEditor, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-treeTableCellEditor',\n                    template: `\n        <ng-container *ngIf=\"tt.editingCell === editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!tt.editingCell || tt.editingCell !== editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }, { type: TTEditableColumn }]; }, propDecorators: { templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass TTRow {\n    tt;\n    el;\n    zone;\n    rowNode;\n    constructor(tt, el, zone) {\n        this.tt = tt;\n        this.el = el;\n        this.zone = zone;\n    }\n    onKeyDown(event) {\n        switch (event.which) {\n            //down arrow\n            case 40:\n                let nextRow = this.el.nativeElement.nextElementSibling;\n                if (nextRow) {\n                    nextRow.focus();\n                }\n                event.preventDefault();\n                break;\n            //down arrow\n            case 38:\n                let prevRow = this.el.nativeElement.previousElementSibling;\n                if (prevRow) {\n                    prevRow.focus();\n                }\n                event.preventDefault();\n                break;\n            //left arrow\n            case 37:\n                if (this.rowNode.node.expanded) {\n                    this.tt.toggleRowIndex = DomHandler.index(this.el.nativeElement);\n                    this.rowNode.node.expanded = false;\n                    this.tt.onNodeCollapse.emit({\n                        originalEvent: event,\n                        node: this.rowNode.node\n                    });\n                    this.tt.updateSerializedValue();\n                    this.tt.tableService.onUIUpdate(this.tt.value);\n                    this.restoreFocus();\n                }\n                break;\n            //right arrow\n            case 39:\n                if (!this.rowNode.node.expanded) {\n                    this.tt.toggleRowIndex = DomHandler.index(this.el.nativeElement);\n                    this.rowNode.node.expanded = true;\n                    this.tt.onNodeExpand.emit({\n                        originalEvent: event,\n                        node: this.rowNode.node\n                    });\n                    this.tt.updateSerializedValue();\n                    this.tt.tableService.onUIUpdate(this.tt.value);\n                    this.restoreFocus();\n                }\n                break;\n        }\n    }\n    restoreFocus() {\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                let row = DomHandler.findSingle(this.tt.containerViewChild?.nativeElement, '.p-treetable-tbody').children[this.tt.toggleRowIndex];\n                if (row) {\n                    row.focus();\n                }\n            }, 25);\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTRow, deps: [{ token: TreeTable }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TTRow, selector: \"[ttRow]\", inputs: { rowNode: [\"ttRow\", \"rowNode\"] }, host: { listeners: { \"keydown\": \"onKeyDown($event)\" }, properties: { \"attr.tabindex\": \"\\\"0\\\"\" }, classAttribute: \"p-element\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TTRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttRow]',\n                    host: {\n                        class: 'p-element',\n                        '[attr.tabindex]': '\"0\"'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { rowNode: [{\n                type: Input,\n                args: ['ttRow']\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\nclass TreeTableToggler {\n    tt;\n    rowNode;\n    constructor(tt) {\n        this.tt = tt;\n    }\n    onClick(event) {\n        this.rowNode.node.expanded = !this.rowNode.node.expanded;\n        if (this.rowNode.node.expanded) {\n            this.tt.onNodeExpand.emit({\n                originalEvent: event,\n                node: this.rowNode.node\n            });\n        }\n        else {\n            this.tt.onNodeCollapse.emit({\n                originalEvent: event,\n                node: this.rowNode.node\n            });\n        }\n        this.tt.updateSerializedValue();\n        this.tt.tableService.onUIUpdate(this.tt.value);\n        event.preventDefault();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTableToggler, deps: [{ token: TreeTable }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.0\", type: TreeTableToggler, selector: \"p-treeTableToggler\", inputs: { rowNode: \"rowNode\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <button\n            type=\"button\"\n            class=\"p-treetable-toggler p-link\"\n            (click)=\"onClick($event)\"\n            tabindex=\"-1\"\n            pRipple\n            [style.visibility]=\"rowNode.node.leaf === false || (rowNode.node.children && rowNode.node.children.length) ? 'visible' : 'hidden'\"\n            [style.marginLeft]=\"rowNode.level * 16 + 'px'\"\n        >\n            <ng-container *ngIf=\"!tt.togglerIconTemplate\">\n                <ChevronDownIcon *ngIf=\"rowNode.node.expanded\" />\n                <ChevronRightIcon *ngIf=\"!rowNode.node.expanded\" />\n            </ng-container>\n            <ng-template *ngTemplateOutlet=\"tt.togglerIconTemplate; context: { $implicit: rowNode.node.expanded }\"></ng-template>\n        </button>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i2.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i5.Ripple; }), selector: \"[pRipple]\" }, { kind: \"component\", type: i0.forwardRef(function () { return ChevronDownIcon; }), selector: \"ChevronDownIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return ChevronRightIcon; }), selector: \"ChevronRightIcon\" }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTableToggler, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-treeTableToggler',\n                    template: `\n        <button\n            type=\"button\"\n            class=\"p-treetable-toggler p-link\"\n            (click)=\"onClick($event)\"\n            tabindex=\"-1\"\n            pRipple\n            [style.visibility]=\"rowNode.node.leaf === false || (rowNode.node.children && rowNode.node.children.length) ? 'visible' : 'hidden'\"\n            [style.marginLeft]=\"rowNode.level * 16 + 'px'\"\n        >\n            <ng-container *ngIf=\"!tt.togglerIconTemplate\">\n                <ChevronDownIcon *ngIf=\"rowNode.node.expanded\" />\n                <ChevronRightIcon *ngIf=\"!rowNode.node.expanded\" />\n            </ng-container>\n            <ng-template *ngTemplateOutlet=\"tt.togglerIconTemplate; context: { $implicit: rowNode.node.expanded }\"></ng-template>\n        </button>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: TreeTable }]; }, propDecorators: { rowNode: [{\n                type: Input\n            }] } });\nclass TreeTableModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTableModule, declarations: [TreeTable, TreeTableToggler, TTScrollableView, TTBody, TTSortableColumn, TTSortIcon, TTResizableColumn, TTRow, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor], imports: [CommonModule, PaginatorModule, RippleModule, ScrollerModule, SpinnerIcon, ArrowDownIcon, ArrowUpIcon, SortAltIcon, SortAmountUpAltIcon, SortAmountDownIcon, CheckIcon, MinusIcon, ChevronDownIcon, ChevronRightIcon], exports: [TreeTable, SharedModule, TreeTableToggler, TTSortableColumn, TTSortIcon, TTResizableColumn, TTRow, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor, ScrollerModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTableModule, imports: [CommonModule, PaginatorModule, RippleModule, ScrollerModule, SpinnerIcon, ArrowDownIcon, ArrowUpIcon, SortAltIcon, SortAmountUpAltIcon, SortAmountDownIcon, CheckIcon, MinusIcon, ChevronDownIcon, ChevronRightIcon, SharedModule,\n            ScrollerModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: TreeTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, PaginatorModule, RippleModule, ScrollerModule, SpinnerIcon, ArrowDownIcon, ArrowUpIcon, SortAltIcon, SortAmountUpAltIcon, SortAmountDownIcon, CheckIcon, MinusIcon, ChevronDownIcon, ChevronRightIcon],\n                    exports: [\n                        TreeTable,\n                        SharedModule,\n                        TreeTableToggler,\n                        TTSortableColumn,\n                        TTSortIcon,\n                        TTResizableColumn,\n                        TTRow,\n                        TTReorderableColumn,\n                        TTSelectableRow,\n                        TTSelectableRowDblClick,\n                        TTContextMenuRow,\n                        TTCheckbox,\n                        TTHeaderCheckbox,\n                        TTEditableColumn,\n                        TreeTableCellEditor,\n                        ScrollerModule\n                    ],\n                    declarations: [\n                        TreeTable,\n                        TreeTableToggler,\n                        TTScrollableView,\n                        TTBody,\n                        TTSortableColumn,\n                        TTSortIcon,\n                        TTResizableColumn,\n                        TTRow,\n                        TTReorderableColumn,\n                        TTSelectableRow,\n                        TTSelectableRowDblClick,\n                        TTContextMenuRow,\n                        TTCheckbox,\n                        TTHeaderCheckbox,\n                        TTEditableColumn,\n                        TreeTableCellEditor\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TTBody, TTCheckbox, TTContextMenuRow, TTEditableColumn, TTHeaderCheckbox, TTReorderableColumn, TTResizableColumn, TTRow, TTScrollableView, TTSelectableRow, TTSelectableRowDblClick, TTSortIcon, TTSortableColumn, TreeTable, TreeTableCellEditor, TreeTableModule, TreeTableService, TreeTableToggler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}